<?xml version="1.0"?>
<doc>
    <assembly>
        <name>smc5d.core</name>
    </assembly>
    <members>
        <member name="T:De.Boenigk.SMC5D.Basics.AxisUnit">
            <summary>
            Definiert die Einheit der A Achse (Grad/MM).
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.AxisUnit.AMM">
            <summary>
            A Achse ist in Millimeter 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.AxisUnit.AGrad">
            <summary>
            A Achse ist in Grad
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Connector">
            <summary>
             Baut eine Verbindung mit dem Kontroller smc5d-p32 auf
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.C_Interval">
            <summary>
            Intervall Konstante
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.C_NextNeededData">
            <summary>
            Weitere Daten werden benötigt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.C_Pause">
            <summary>
            Job wird/ist angehalten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.C_JobRun">
            <summary>
            Job wird ausgeführt Konstante
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.C_JobEnd">
            <summary>
            Job Ende erreicht
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.mySMCSettings">
            <summary>
            Enthält alle Einstellungen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.mySMCLic">
            <summary>
            SMC Lizenz Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myPic32">
            <summary>
            Zugriff auf Pic32
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myPic32USB">
            <summary>
            USB Verbindungsobjekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myPic32Lan">
            <summary>
            Lan Verbindungsobjekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myEnableStarted">
            <summary>
            Prüft- Boolean. Vermeidet mehrfaches Verbindungsaufbau
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myLastSMCStatus">
            <summary>
            Speichert den letzten Status
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myInputChanged">
            <summary>
            Verwaltet die Anzahl der Abfragen bis Werte eines Eingangs als geändert gelten.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myOutputChanged">
            <summary>
            Verwaltet die Anzahl der Abfragen bis Werte eines Eingangs als geändert gelten.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myCrypto">
            <summary>
            Kodiert die SN
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.#ctor">
            <summary>
            Ein Verbindung- Objekt wird erzeugt.
            </summary>
            <remarks>Connector darf nur ein einziges Mal als Objekt in der Applikation angelegt sein. Jedes Objekt dass auf den Kontroller zugreift, 
            benötigt Connector Objekt. Connector Objekt ist für die Kommunikation mit dem Kontroller SMC5D zuständig.
            
            HINWEIS: Die Maschinenparameter- Einstellungen können mit der Software cncGraF festgelegt werden und danach in einer XML Datei abgespeichert werden 
            (Menü: Einstellungen -> Einstellungen -> Speichern unter...). Dann muss der SMC Bereich herauskopiert, nach SMCSettings unbenannt werden 
            und in einer neuen XML Datei gespeichert werden. Connector Objekt lädt die SMCSettings und sendet sie zum Kontroller.
            </remarks>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.#ctor(System.String)">
            <summary>
            Ein Verbindung- Objekt wird erzeugt.
            </summary>
            <param name="aLogPath">Verzeichnis für Logdateien</param>
            <remarks>Connector darf nur ein einziges Mal als Objekt in der Applikation angelegt sein. Jedes Objekt dass auf den Kontroller zugreift, 
            benötigt Connector Objekt. Connector Objekt ist für die Kommunikation mit dem Kontroller SMC5D zuständig.
            
            HINWEIS: Die Maschinenparameter- Einstellungen können mit der Software cncGraF festgelegt werden und danach in einer XML Datei abgespeichert werden 
            (Menü: Einstellungen -> Einstellungen -> Speichern unter...). Dann muss der SMC Bereich herauskopiert, nach SMCSettings unbenannt werden 
            und in einer neuen XML Datei gespeichert werden. Connector Objekt lädt die SMCSettings und sendet sie zum Kontroller.
            </remarks>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.#ctor(System.String,System.String[])">
            <summary>
            Ein Verbindung- Objekt wird erzeugt.
            </summary>
            <param name="aLogPath">Verzeichnis für Logdateien</param>
            <param name="aFreeSnList">Liste der freien Lizenzen. Diese Lizenzen werden nicht überprüft sondern sofort als gültige Endlizenzen deklariert.</param>
            <remarks>Connector darf nur ein einziges Mal als Objekt in der Applikation angelegt sein. Jedes Objekt dass auf den Kontroller zugreift, 
            benötigt Connector Objekt. Connector Objekt ist für die Kommunikation mit dem Kontroller SMC5D zuständig.
            
            HINWEIS: Die Maschinenparameter- Einstellungen können mit der Software cncGraF festgelegt werden und danach in einer XML Datei abgespeichert werden 
            (Menü: Einstellungen -> Einstellungen -> Speichern unter...). Dann muss der SMC Bereich herauskopiert, nach SMCSettings unbenannt werden 
            und in einer neuen XML Datei gespeichert werden. Connector Objekt lädt die SMCSettings und sendet sie zum Kontroller.
            </remarks>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Reconnect">
            <summary>
            Wechselt die Verbindungsart (USB/LAN).
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.SetSettings(De.Boenigk.SMC5D.Basics.GlobPosition,System.String[])">
            <summary>
            Setzt neue Position der CNC Maschine und eine Liste freie Lizenzen.
            </summary>
            <param name="aGlobPosition">GlobPosition</param>
            <param name="aFreeSnList">Liste der freien Lizenzen. Diese Lizenzen werden nicht überprüft sondern sofort als gültige Endlizenzen deklariert.</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Load(System.String)">
            <summary>
            Konfiguration wird geladen. Rückgabe 'True' wenn erfolgreich
            </summary>
            <param name="aFile">Dateiname mit Pfad</param>
            <returns>True - Konfiguration erfolgreich geladen, False - Keine Konfiguration geladen (Default Einstellungen erzeugt)</returns>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.ThisLock">
            <summary>
            Lock Objekt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Enable">
            <summary>
            USB Schnittstelle wird geöffnet
            </summary>
            <returns>Status der Steuerelektronik SMC5D</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Enable(System.String)">
            <summary>
            USB Schnittstelle wird geöffnet
            </summary>
            <param name="aSN">S/N des Kontrollers dass verbunden werden soll</param>
            <returns>Status der Steuerelektronik SMC5D</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Enable(System.Byte)">
            <summary>
            USB Schnittstelle wird geöffnet
            </summary>
            <param name="aInstance">Nummer der Instanz (0 bis 254)</param>
            <returns>Status der Steuerelektronik SMC5D</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Disable">
            <summary>
            Verbindung schließen, die Eigenschaft Enabled hat den Wert 'false'.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Stop">
            <summary>
            Abfrage (Zugriff auf Kontroller) wird gestoppt.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Continue">
            <summary>
            Abfrage (Zugriff auf Kontroller) wird fortgesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Abort">
            <summary>
            Abbruch, Arbeit der Maschine wird abgebrochen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.ResetOuts">
            <summary>
            Setzt die Ausgänge zurück
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.ResetGlobPosition">
            <summary>
            Position der Maschine wird auf Referenzpunkt gesetzt (z.B.: für Maschinen die keine Referenzschalter haben).
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.ResetGlobPositionX(System.Double)">
            <summary>
            Position der Maschine in X wird gesetzt.
            </summary>
            <param name="aPosition">Position</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.ResetGlobPositionY(System.Double)">
            <summary>
            Position der Maschine in Y wird gesetzt.
            </summary>
            <param name="aPosition">Position</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.ResetGlobPositionZ(System.Double)">
            <summary>
            Position der Maschine in Z wird gesetzt.
            </summary>
            <param name="aPosition">Position</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.ResetGlobPositionA(System.Double)">
            <summary>
            Position der Maschine in A wird gesetzt.
            </summary>
            <param name="aPosition">Position</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.ResetGlobPositionB(System.Double)">
            <summary>
            Position der Maschine in B wird gesetzt.
            </summary>
            <param name="aPosition">Position</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.SetSecuryZ(System.Double)">
            <summary>
            Setzt neue Sicherheitshöhe (die von Werkzeuglänge abhängig ist).
            </summary>
            <param name="aCurrentToollength">Aktuelle Werkzeuglänge</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.WriteSettings(System.Boolean)">
            <summary>
            Schreibt die aktuell enthaltene Konfiguration im Connector (Einstellungen aus Connector.SMCSettings) in den Kontroller
            </summary>
            <param name="aResetOutputs">True, Ausgänge zurücksetzen</param>
            <returns>True, Einstellungen erfolgreich in den Kontroller geladen</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.RefreshGlobPos">
            <summary>
            Liest sofort die Position und Status der Eingänge vom Controller und speichert Sie in der GlobPosition
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.WriteSettings(De.Boenigk.SMC5D.Settings.SMCSettings,System.Boolean)">
            <summary>
            Schreibt die Konfiguration in den Kontroller
            </summary>
            <param name="aSMCSettings">Einstellungen, die in den Kontroller eingespielt werden</param>
            <param name="aResetOutputs">True, Ausgänge zurücksetzen</param>
            <returns>True, Einstellungen erfolgreich in den Kontroller geladen</returns>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.mySMCInfo">
            <summary>
            SMCInfo
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.IsRun">
            <summary>
            Prüft ob die Maschine in Bewegung ist.
            </summary>
            <returns>True, Maschine ist in Bewegung</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.IsSpindleOn">
            <summary>
            Prüft ob die Spindel (Ausgang) eingeschaltet ist
            </summary>
            <returns>True, Spindel ist an</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.IsHoodOpen">
            <summary>
            Prüft ob die Haube (Eingang der Haube) geöffnet ist
            </summary>
            <returns>True, Haube ist offen</returns>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myLastSpeed">
            <summary>
            Speichert die letzte Geschwindigkeit im Wert 1 bis 255
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myLastSpeedPercent">
            <summary>
            Speichert die letzte Geschwindigkeit in Prozent
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Connector.myTimerState">
            <summary>
            Timer Status
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.InitTimer">
            <summary>
            Timer wird für die Abfrage gesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.StartTimer">
            <summary>
            Timer wird sofort gestartet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.StopTimer">
            <summary>
            Timer wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.CheckStatus(System.Object)">
            <summary>
            Timer Status wird verändert. Wenn diese Methode aufgerufen,
            dann ist die Zeit abgelaufen, der Timer wird genullt.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.UpdateAllData">
            <summary>
            Die Daten werden sofort vom Controller ausgelesen.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.ResetCounters">
            <summary>
            Zähler werden zurückgesetzt (Wenn keine Verbindung mit dem Kontroller)
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.DataReadAndSet">
            <summary>
            Daten vom Pic lesen und in die Variable setzten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.SendStatus">
            <summary>
            Nachricht dass Verbindung vorhanden ist
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.SetSimulation(De.Boenigk.SMC5D.Move.JobSim)">
            <summary>
            Aktiviert die Simulation, wenn 'null' dann wird die Simulation deaktiviert.
            </summary>
            <param name="aJobSim">JobSim Objekt oder null</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.Get">
            <summary>
            Gibt das USB Verbindung- Objekt zurück. Diese Methode kann verwendet werden 
            um ein neues Connector Objekt mit dem gleichen Verbindung- Objekt aber mit 
            anderen Einstellungen anzulegen.
            </summary>
            <returns>Verbindung- Objekt USB11</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.IsInputOn(De.Boenigk.SMC5D.Basics.Input,System.Boolean)">
            <summary>
            Status des Eingangs abfragen. Dabei wird der Status nicht ausgelesen, sondern der letzter ausgelesener abgefragt.
            </summary>
            <param name="aInput">Eingang Nummer</param>
            <param name="aInvert">Eingang invertieren</param>
            <returns>True, Eingang ist an</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.WriteInitLaserGranit(System.UInt32)">
            <summary>
            Laser wird initialisiert
            </summary>
            <param name="aStepSpeed">Maximale Geschwindigkeit in Schritten pro Sekunde</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.WriteInitLaserGranit">
            <summary>
            Laser wird initialisiert
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Connector.WriteInitLaserOff">
            <summary>
            Laser wird ausgeschaltet (Kein PWM)
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Basics.Connector.ConnectorStatus">
            <summary>
            Nachricht wenn Status der Verbindung geändert
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Basics.Connector.OutputChanged">
            <summary>
            Nachricht wenn ein Ausgang sein Status geändert hat
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Basics.Connector.InputChanged">
            <summary>
            Nachricht wenn ein Eingang sein Status geändert hat
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Basics.Connector.HandWheelPotentiometer">
            <summary>
            Nachricht wenn Status des Potentiometers sich am Handrad geändert hat
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Basics.Connector.HandWheelKeyPressed">
            <summary>
            Nachrricht wenn Key am Hndrad gedrückt
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Basics.Connector.JoystickKeyPressed">
            <summary>
            Nachrricht wenn Key am Hndrad gedrückt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.CultureName">
            <summary>
            Sprache für Dialoge setzen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.ReferenceCreated">
            <summary>
            True Referenzfahrt ausgeführt, Job kann gestartet werden. 
            
            Diese Eigenschaft wird nach Abbruch des Fräsen, 
            der Referenzfahrt oder der Fahrt auf Schalter auf False gesetzt.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.Status">
            <summary>
            Der Status der Maschine (De.Boenigk.ISMC.SMCStatus.____) wird zurückgegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.AD1Volt">
            <summary>
            Spannung am analogen Eingang 1
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.AD2Volt">
            <summary>
            Spannung am analogen Eingang 2
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.Version">
            <summary>
            Gibt die Kontroller-Software Version zurück.
            Bit 0 bis Bit 3 Wert 0 = Pro Version, 1 = EAS ECO, 2 = ncBASIC ST, 3 = cncGraF Standard
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.FirmwareVersion">
            <summary>
            Gibt die Firmware Version des Kontrollers zurück
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.GlobPosition">
            <summary>
            Aktuelle  Position der Maschinen und Status der Schalter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.Enabled">
            <summary>
            Status der Verbindung wird zurückgegeben. 
            Wenn 'True' dann ist der Aufbau der Verbindung erfolgreich.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.Lic">
            <summary>
            Lizenzverwaltung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.SN">
            <summary>
            Gibt die Seriennummer zurück. Wenn kein Controller angeschlossen, dann wird '?' zurückgegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.SMCSettings">
            <summary>
            Zugriff auf die Einstellungen des Kontrollers
            </summary>
            <returns>SMCSettings</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.SpeedPercent">
            <summary>
            Job Geschwindigkeit in Prozent
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.IsHandWheelEmergencyMade">
            <summary>
            True, NOT-AUS am Handrad ist gedrückt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.IsJoystickEmergencyMade">
            <summary>
            True, NOT-AUS am Joystick ist gedrückt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.LastPressedHardwareKey">
            <summary>
            Zuletzt gedrückte Taste am Handrad/Joystick
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.Job">
            <summary>
            Aktueller Job- Objekt oder Null
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.JobIndex">
            <summary>
            Gibt den Index- Nummer des Jobs zurück
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.LogPath">
            <summary>
            Verzeichnis für Logdateien
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.AutoLimitingMotorCurrent">
            <summary>
            Automatische Motorstromabsenkung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.DebugJob">
            <summary>
            True, schaltet den Debug Modus für Job
            </summary>           
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.JobTestMode">
            <summary>
            True, JobTestMode ist aktiv
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.JobCompression">
            <summary>
            True, Job Daten werden komprimiert (Diese Eigenschaft nur zum Testen, Kompression ist immer aktiv)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.LaserMainSwitchOn">
            <summary>
            Laser Funktion Hauptschalter, true ist eingeschaltet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.CreateJobTestFiles">
            <summary>
            Eigenschaft schaltet das Generieren der Job- Testdaten. 
            Die Testdaten werden im Verzeichnis "WorkDir" abgelegt. Nur zum Testen!
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.TestDataDir">
            <summary>
            Angabe des Verzeichnissen für die Testdaten. Nur zum Testen!
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.IgnoreAutoConnect">
            <summary>
            True, dann wird autoconnect deaktiviert. Nur für Testzwecke geeignet, da wenn true auch die Werte nicht ausgelesen werden.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.ConfigFile">
            <summary>
            Gibt Dateiname mit Pfad der Konfiguration.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.Time">
            <summary>
            Arbeitszeit
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.IsUSB">
            <summary>
            True, USB Verbindung sonst LAN (TCP)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.IsHandwheelOn">
            <summary>
            True, Handrad ist angeschlossen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.IsJoystickOn">
            <summary>
            True, Joystick ist angeschlossen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.LeserPower">
            <summary>
            True, Leser Power Option ist aktiv
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.LockedOutputs">
            <summary>
            Sperrt die Ausgänge für den Job d.h. Status dieser Ausgänge wird vom Job nicht verändert.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.ODCZYTAJ_DANE">
            <summary>
            Vom Pic ausgelesene Daten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.PufferSize">
            <summary>
            Größe des Puffers mit zu sendenden Daten für den Job 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Connector.DataSize">
            <summary>
            Größe der Daten, die zur Zeit bearbeitet werden
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Connector.ConnectorStatusDelegate">
            <summary>
            Typsicherer Zeiger (Delegate) SMCStatusEventHandler 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Connector.OutputStatusDelegate">
            <summary>
            Typsicherer Zeiger (Delegate)  
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Connector.InputStatusDelegate">
            <summary>
            Typsicherer Zeiger (Delegate)  
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Connector.HandWheelPotentiometerDelegate">
            <summary>
            Typsicherer Zeiger (Delegate) HandWheelPotentiometerDelegate
            </summary>
            <param name="aPotentiometerPercent">Potentiometer in Prozent</param>
            <param name="aConnector">Connector object</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Connector.HandWheelKeyDelegate">
            <summary>
            Typsicherer Zeiger (Delegate) HandWheelKeyDelegate
            </summary>
            <param name="aHandWheelKey">HandWheelKey</param>
            <param name="aConnector">Connector object</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Connector.JoystickKeyDelegate">
            <summary>
            Typsicherer Zeiger (Delegate) HandWheelKeyDelegate
            </summary>
            <param name="aJoystickKey">aJoystickKey</param>
            <param name="aConnector">Connector object</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.ControlByte">
            <summary>
            Führt einfache Bitoperationen durch.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.ControlByte.C_ByteMask">
            <summary>
            Byte Maske, die beim nullen gesetzt wird.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.ControlByte.C_UShortMask">
            <summary>
            Ushort Maske, die beim nullen gesetzt wird.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.ControlByte.C_UintMask">
            <summary>
            UINT Maske, die beim nullen gesetzt wird.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.ControlByte.C_IntMask">
            <summary>
            INT Maske, die beim nullen gesetzt wird.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.Or(System.Int32,System.Byte)">
            <summary>
            Bitweise OR
            </summary>
            <param name="aBitNr">Bitnummer (1 bis 8)</param>
            <param name="aByte">Byte, dass geändert werden soll</param>
            <returns>geänderter Byte wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.Xor(System.Int32,System.Byte)">
            <summary>
            Bitweise Xor
            </summary>
            <param name="aBitNr">Nummer des Bits, dass gedreht werden soll</param>
            <param name="aByte">Byte, in dem der Bit gedreht werden soll</param>
            <returns>geänderter Byte wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.IsOne(System.Int32,System.Int32)">
            <summary>
            Prüft, ob ein Bit in angegebenem Byte gesetzt ist.
            </summary>
            <param name="aBitValue">Wert des Bits</param>
            <param name="aInt">Int, in dem ein Bit überprüft wird</param>
            <returns>Wenn true, dann ist der geprüfte Bit im angegebenem Byte gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.IsOne(System.UInt32,System.UInt32)">
            <summary>
            Prüft, ob ein Bit in angegebenem Byte gesetzt ist.
            </summary>
            <param name="aBitValue">Wert des Bits</param>
            <param name="aUInt">UInt, in dem ein Bit überprüft wird</param>
            <returns>Wenn true, dann ist der geprüfte Bit im angegebenem Byte gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.IsOne(De.Boenigk.SMC5D.Basics.Output,De.Boenigk.SMC5D.Basics.Output)">
            <summary>
            Prüft, ob ein Bit in angegebenem Byte gesetzt ist.
            </summary>
            <param name="aBitValue">Wert des Bits</param>
            <param name="aByte">Output, in dem ein Bit überprüft wird</param>
            <returns>Wenn true, dann ist der geprüfte Bit im angegebenem Byte gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.IsOne(De.Boenigk.SMC5D.Basics.Input,De.Boenigk.SMC5D.Basics.Input)">
            <summary>
            Prüft, ob ein Bit in angegebenem Byte gesetzt ist.
            </summary>
            <param name="aBitValue">Wert des Bits</param>
            <param name="aByte">Output, in dem ein Bit überprüft wird</param>
            <returns>Wenn true, dann ist der geprüfte Bit im angegebenem Byte gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.IsOne(System.UInt16,System.UInt16)">
            <summary>
            Prüft, ob ein Bit in angegebenem Byte gesetzt ist.
            </summary>
            <param name="aBitValue">Wert des Bits</param>
            <param name="aUshort">ushort, in dem ein Bit überprüft wird</param>
            <returns>Wenn true, dann ist der geprüfte Bit im angegebenem Byte gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.IsOne(System.Byte,System.Byte)">
            <summary>
            Prüft, ob ein Bit in angegebenem Byte gesetzt ist.
            </summary>
            <param name="aBitValue">Wert des Bits</param>
            <param name="aByte">Byte, in dem ein Bit überprüft wird</param>
            <returns>Wenn true, dann ist der geprüfte Bit im angegebenem Byte gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.Reset(System.Byte,System.Byte)">
            <summary>
            Ein Bit Nullen
            </summary>
            <param name="aBitValue">Wert des Bits, dass genullt werden soll</param>
            <param name="aByte">Byte in dem, ein Bit genullt wird</param>
            <returns>Geänderter Byte wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.Reset(System.Int32,System.Int32)">
            <summary>
            Ein Bit Nullen
            </summary>
            <param name="aBitValue">Wert des Bits, dass genullt werden soll</param>
            <param name="aInt">Int in dem, ein Bit genullt wird</param>
            <returns>Geänderter Int wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.Reset(System.UInt32,System.UInt32)">
            <summary>
            Ein Bit Nullen
            </summary>
            <param name="aBitValue">Wert des Bits, dass genullt werden soll</param>
            <param name="aUInt">UInt in dem, ein Bit genullt wird</param>
            <returns>Geänderter UInt wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.Reset(System.UInt16,System.UInt16)">
            <summary>
            Ein Bit Nullen
            </summary>
            <param name="aBitValue">Wert des Bits, dass genullt werden soll</param>
            <param name="aUShort">Ushort in dem, ein Bit genullt wird</param>
            <returns>Geänderter ushort wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.Mask(System.Byte,System.Byte)">
            <summary>
            Inhalt der bestimmten Bits wird zurückgegeben
            </summary>
            <param name="aBitMask">Angabe der Bits, deren Wert zurückgegeben werden sollten</param>
            <param name="aByte">Byte deren Bits überprüft werden sollen</param>
            <returns>Inhalt des Bits</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ControlByte.And(System.Int32,System.Byte)">
            <summary>
            Bitweise And
            </summary>
            <param name="aBitNr">Bitnummer (1 bis 8)</param>
            <param name="aByte">Byte, dass geändert werden soll</param>
            <returns>Geänderter Byte wird zurückgegeben</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.ExternStartCounter">
            <summary>
            Verwalter die Anzahl der Abfragen bis eine Externe Startfunktion aufgerufen wird
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.ExternStartCounter.myCounter">
            <summary>
            Zählt die Abfragen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ExternStartCounter.IsCounter">
            <summary>
            Zähl hoch bis Counter erreicht
            </summary>
            <returns>True, Anzahl der Abfragen erreicht</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.ExternStartCounter.Reset">
            <summary>
            Anzahl der Abfragen werden zurückgesetzt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.ExternStartCounter.CheckInputCounter">
            <summary>
            Anzahl der Abfragen bis true zurückgegeben wird
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.GlobPosition">
            <summary>
            Globale Maschinenposition für absolute/relative XYZA Koordinaten. 
            GlobPosition enthält unter anderen Schalter- Zustände, Rest Werte,...
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.Set(De.Boenigk.SMC5D.Basics.GlobPosition)">
            <summary>
            Werte aus einer GlobPosition werden gesetzt.
            </summary>
            <param name="aGlobPosition">GlobPosition, deren Werte eingetragen werden</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.Clone">
            <summary>
            Objekt wird kopiert
            </summary>
            <returns>Eine exakte Kopie dieses Objektes</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.Reset">
            <summary>
            Alle GlobPosition Daten werden gelöscht
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.SetMMX(De.Boenigk.SMC5D.Settings.SMCSettings,System.Double)">
            <summary>
            Position X in Millimeter wird nach CKR umgerechnet und gespeichert
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <param name="aX">Position X in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.SetMMY(De.Boenigk.SMC5D.Settings.SMCSettings,System.Double)">
            <summary>
            Position Y in Millimeter wird nach CKR umgerechnet und gespeichert
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <param name="aY">Position Y in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.SetMMZ(De.Boenigk.SMC5D.Settings.SMCSettings,System.Double)">
            <summary>
            Position Z in Millimeter wird nach CKR umgerechnet und gespeichert
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <param name="aZ">Position Z in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.SetMMZ2(De.Boenigk.SMC5D.Settings.SMCSettings,System.Double)">
            <summary>
            Position Z2 in Millimeter wird nach CKR umgerechnet und gespeichert
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <param name="aZ">Position Z in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.SetMMA(De.Boenigk.SMC5D.Settings.SMCSettings,System.Double)">
            <summary>
            Position A in Millimeter wird nach CKR umgerechnet und gespeichert
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <param name="aA">Position A in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.SetMMA2(De.Boenigk.SMC5D.Settings.SMCSettings,System.Double)">
            <summary>
            Position A in Millimeter wird nach CKR umgerechnet und gespeichert
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <param name="aA">Position A in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.GetMMX(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt die Position der Achse X in Millimetern zurück
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Position der X Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.GetMMY(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt die Position der Achse Y in Millimetern zurück
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Position der Y Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.GetMMZ(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt die Position der Achse Z in Millimetern zurück
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Position der Z Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.GetMMZ2(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt die Position der Achse Z2 in Millimetern zurück
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Position der Z Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.GetMMA(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt die Position der Achse A in Millimetern zurück
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Position der A Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.GetMMB(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt die Position der Achse B in Millimetern zurück
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Position der A Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPosition.GetMMA2(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt die Position der Achse A2 in Millimetern zurück
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Position der A2 Achse</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.LineIndex">
            <summary>
            Index des Vektors
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.X">
            <summary>
            Achse X in (Steps)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.Y">
            <summary>
            Achse Y in (Steps)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.Z">
            <summary>
            Achse Z in (Steps)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.Z2">
            <summary>
            Achse Z2 in (Steps)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.A">
            <summary>
            Achse A in (Steps)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.A2">
            <summary>
            Achse A in CKR
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.B">
            <summary>
            Achse B in (Steps)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.In">
            <summary>
            Eingänge
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.Out">
            <summary>
            Ausgänge
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.Speed">
            <summary>
            Geschwindigkeit
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.HardwareKey">
            <summary>
            Hardware Taste (Handrad oder Joystick)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.JoystickVersion">
            <summary>
            Joystick- Firmware Version
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.ErrorAdress">
            <summary>
            Arbeitszeit der Maschine in Minuten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.SpindleSpeed">
            <summary>
            Spindel- Geschwindigkeit (0-255)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.Wait">
            <summary>
             Wartezeit in Sekunden (nur wenn Job und wenn gerade Wartezeit ausgeführt wird)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.PWMNumber">
            <summary>
            Gibt die Nummer des Analogen Ausgangs zurück (0, 1 oder 2)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.Backlash">
            <summary>
            Umkehrspiel- Info
            Bit 0 = X (wenn an, dann letzte Fahrt in Plus)
            Bit 1 = Y
            Bit 2 = Z
            Bit 3 = A
            Bit 4 = B
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.BacklashXPlus">
            <summary>
            True, letzte Fahrt war in X+
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.BacklashYPlus">
            <summary>
            True, letzte Fahrt war in Y+
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.BacklashZPlus">
            <summary>
            True, letzte Fahrt war in Z+
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.BacklashAPlus">
            <summary>
            True, letzte Fahrt war in A+
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.GlobPosition.BacklashBPlus">
            <summary>
            True, letzte Fahrt war in B+
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.GlobPositionConverter">
            <summary>
            GlobPositionConverter rechnet Schritte der Achsen nach Millimeter um.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.GlobPositionConverter.myConnector">
            <summary>
            Verbindung Objekt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPositionConverter.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPositionConverter.GetMM(De.Boenigk.SMC5D.Basics.GlobPosition,De.Boenigk.SMC5D.Basics.SMCAxisType)">
            <summary>
            Rechnet Schritte der angegebenen Achse nach Millimeter um
            </summary>
            <param name="aGlobPosition">GlobPosition, enthält alle Achsen</param>
            <param name="aAxis">Angabe der Achse (X,Y,Z,..), die nach Millimeter umgerechnet werden.</param>
            <returns>Angabe in Millimneter, im Fehlerfall oder keine Steps dann wird 0 zurückgegeben.</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPositionConverter.GetXRotate(De.Boenigk.SMC5D.Settings.SMCSettings,System.Double)">
            <summary>
            Der Wert wird an die Drehachse X(falls diese Achse eine Drehachse ist) angepasst und zurückgegeben
            </summary>
            <param name="aValue">Wert X in Millimeter</param>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Aktuelle Position</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPositionConverter.GetYRotate(De.Boenigk.SMC5D.Settings.SMCSettings,System.Double)">
            <summary>
            Der Wert wird an die Drehachse Y(falls diese Achse eine Drehachse ist) angepasst und zurückgegeben
            </summary>
            <param name="aValue">Wert Y in Millimeter</param>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Aktuelle Position</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.GlobPositionConverter.GetARotate(De.Boenigk.SMC5D.Settings.SMCSettings,System.Double)">
            <summary>
            Der Wert wird an die Drehachse A(falls diese Achse eine Drehachse ist) angepasst und zurückgegeben
            </summary>
            <param name="aValue">Wert Y in Millimeter</param>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
            <returns>Aktuelle Position</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.HardwareKey">
            <summary>
            Definiert Tasten des Handrad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.None">
            <summary>
            Keine Taste gedrückt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key1">
            <summary>
            Handrad Taste 1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key2">
            <summary>
            Handrad Taste 2
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key3">
            <summary>
            Handrad Taste 3
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key4">
            <summary>
            Handrad Taste 4
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key5">
            <summary>
            Handrad Taste 5
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key6">
            <summary>
            Handrad Taste 6
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key7">
            <summary>
            Handrad Taste 7
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key8">
            <summary>
            Handrad Taste 8
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key9">
            <summary>
            Handrad Taste 9
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key10">
            <summary>
            Handrad Taste 10
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key11">
            <summary>
            Handrad Taste 11
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key12">
            <summary>
            Handrad Taste 12
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key13">
            <summary>
            Handrad Taste 13
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key14">
            <summary>
            Handrad Taste 14
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key15">
            <summary>
            Handrad Taste 15
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Key16">
            <summary>
            Handrad Taste 16
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.MoveReference">
            <summary>
            Handrad Referenzfahrt ausführen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.MoveZero">
            <summary>
            Handrad Nullpunkt anfahren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.MovePark">
            <summary>
            Handrad Parkpunkt anfahren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.SpindleOn">
            <summary>
            Handrad Spindel ein oder ausschalten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.SetX">
            <summary>
            Handrad Nullpunkt X setzen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.SetY">
            <summary>
            Handrad Nullpunkt Y setzen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.SetZ">
            <summary>
            Handrad Nullpunkt Z setzen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.PumpOn">
            <summary>
            Handrad Pumpe ein- oder ausschalten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.JobStart">
            <summary>
            Handrad Job starten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.JobContinue">
            <summary>
            Handrad Job wird fortgesetzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Pause">
            <summary>
            Handrad Maschine wird angehalten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Esc">
            <summary>
            Handrad Abbruch
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.Ok">
            <summary>
            Handrad OK
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.EmergencyMade">
            <summary>
            Handrad NOT-AUS
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.PlusSpindle">
            <summary>
            Handrad PLUS-Spindel
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.MinusSpindle">
            <summary>
            Handrad MINUS-Spindel
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.JoystickF1">
            <summary>
            Joystick Taste F1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.JoystickF2">
            <summary>
            Joystick Taste F2
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.JoystickF3">
            <summary>
            Joystick Taste F3
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.HardwareKey.JoystickEmergencyMade">
            <summary>
            Joystick NOT-AUS
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Input">
            <summary>
            Controller Eingänge  Con2, Con3 und Con4
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Default">
            <summary>
             Default Wert, keine Eingänge an
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con2Pin1">
            <summary>
            Con2 PIN 1 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con2Pin2">
            <summary>
            Con2 PIN 2 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con2Pin3">
            <summary>
            Con2 PIN 3
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con2Pin4">
            <summary>
            Con2 PIN 4
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con2Pin5">
            <summary>
            Con2 PIN 5
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con2Pin6">
            <summary>
            Con2 PIN 6
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con2Pin7">
            <summary>
            Con2 PIN 7
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con2Pin8">
            <summary>
            Con2 PIN 8
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con3Pin9">
            <summary>
            Con3 Pin 9
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con3Pin10">
            <summary>
            Con3 Pin 10
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con3Pin11">
            <summary>
            Con3 Pin 11
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con3Pin12">
            <summary>
            Con3 Pin 12
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con3Pin13">
            <summary>
            Con3 Pin 13
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con3Pin14">
            <summary>
            Con3 Pin 14
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con3Pin15">
            <summary>
            Con3 Pin 15
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con3Pin16">
            <summary>
            Con3 Pin 16
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con4Pin17">
            <summary>
            Con4 Pin 17
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con4Pin18">
            <summary>
            Con4 Pin 18
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con4Pin19">
            <summary>
            Con4 Pin 19
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con4Pin20">
            <summary>
            Con4 Pin 20
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con4Pin21">
            <summary>
            Con4 Pin 21
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con4Pin22">
            <summary>
            Con4 Pin 22
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con4Pin23">
            <summary>
            Con4 Pin 23
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Input.Con4Pin24">
            <summary>
            Con4 Pin 24
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.InputChanged">
            <summary>
            Zählt die Anzahl der Abfragen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.InputChanged.myQueriesCounter">
            <summary>
            Zählt die Anzahl der Abfragen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.InputChanged.myInputs">
            <summary>
            Speichert den alten Zustand
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.InputChanged.myIgnoreFirstInputChanged">
            <summary>
            Der erste Status wird ignoriert
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputChanged.IsInputsChanged(De.Boenigk.SMC5D.Basics.Input,System.Int32)">
            <summary>
            Prüft ob die Eingänge geändert worden sind
            </summary>
            <param name="aInputs">Status der Eingänge</param>
            <param name="aRequestCount">Anzahl der Abfragen bis als geschaltet gilt</param>
            <returns>True, Eingänge haben sich geändert</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.InputChecker">
            <summary>
            Prüft Eingang- Signale
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.InputChecker.myConnector">
            <summary>
            USB Verbindung- Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.InputChecker.mySettings">
            <summary>
            Alle SMC5D- Einstellungen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputChecker.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindungsobjekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputChecker.CheckInputHood(System.Boolean)">
            <summary>
            Status der Haube wird geprüft. 
            
            Dabei wird KEIN Status ausgelesen sondern, die aktuelle Werte überprüft.
            
            Wenn externe Haube offen ist, dann wird eine SMCException geworfen.
            </summary>
            <param name="aDelay">True, dann ist die Abfrage mehrfach notwendig (Anzahl der Abfragen einstellbar in Connector.SMCSettings.Hood.InputDelay, z.B.: wegen Störung-Impulse) 
            bis ermittelt wird das Haube offen ist, false nur ein mal</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputChecker.IsHoodOpen">
            <summary>
            Status der Haube wird geprüft. 
            
            Dabei wird KEIN Status ausgelesen sondern der bestehende im Puffer überpüft.
            </summary>
            <returns>Wenn Haube offen ist, dann wird true ausgegeben.</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputChecker.SetAutomaticallyInputDefaultStatus">
            <summary>
            Setzt aktuellen Status der Eingänge (Konfiguration Emergency1 bis Emergency5) als nicht geschaltet (EmergencySettings.Invert wird angepasst). 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputChecker.UpdateInputDefaultStatus(De.Boenigk.SMC5D.Settings.EmergencySettings)">
            <summary>
            Eingänge werden auf Ausgangswerte gesetzt
            </summary>
            <param name="aEmergencySettings">EmergencySettings</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputChecker.CheckInputEmergency(System.Boolean,System.Int32)">
            <summary>
            Status des Eingangs wird geprüft. 
            
            Dabei wird KEIN Status ausgelesen sondern, die aktuelle Werte überprüft.
            
            Wenn ein externer Eingang geschaltet wird, dann wird eine SMCException geworfen und Referenz erzwungen.
            </summary>
            <param name="aDelay">True, dann ist die Abfrage mehrfach notwendig (Anzahl der Abfragen einstellbar in Connector.SMCSettings.Hood.InputDelay, z.B.: wegen Störung-Impulse) 
            <param name="aTxx">Aktuelle Werkzeugnummer, wenn kein vorhanden dann -1 angeben</param>
            bis ermittelt wird das Haube offen ist, False nur ein mal</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputChecker.CheckInput(De.Boenigk.SMC5D.Basics.ExternStartCounter,De.Boenigk.SMC5D.Basics.SMCStatus,De.Boenigk.SMC5D.Settings.EmergencySettings,System.Boolean,System.Int32)">
            <summary>
            Eingang wird geprüft!
            </summary>
            <param name="aExternStartCounter">Anzahl-Abfragen-Zähler</param>
            <param name="aSMCStatus">Exception- Status</param>
            <param name="aEmergencySettings">Einstellungen</param>
            <param name="aDelay">True, dann ist die Abfrage mehrfach notwendig (Anzahl der Abfragen einstellbar in Connector.SMCSettings.Hood.InputDelay, z.B.: wegen Störung-Impulse) 
            <param name="aTxx">Aktuelle Werkzeugnummer</param>
            bis ermittelt wird das Haube offen ist, false nur ein mal</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputChecker.CheckInputRefZ(System.Boolean)">
            <summary>
            Status des Referenzschalters Z wird geprüft. 
            
            Dabei wird KEIN Status ausgelesen sondern, die aktuellen Werte überprüft.
            
            Wenn Referenzschalters Z aktiv ist, dann wird eine SMCException geworfen.
            </summary>
            <param name="aDelay">True, dann ist die Abfrage 3 mal notwendig bis ermittelt wird das Referenzschalter Z gedrückt ist.</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.InputConverter">
            <summary>
            Konvertiert die Eingänge
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputConverter.GetInput(System.Int32)">
            <summary>
            Konvertierung der Eingänge vom Benutzer Bezeichnung (Eingang- Nummer aus Dialog) nach Input Bezeichnung.
            Falls ein falscher Pin Wert angegeben wird, dann wird eine Exception geworfen.
            </summary>
            <param name="aPin">Pinnummer (1-24)</param>
            <returns>Input</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.InputConverter.GetInputNumber(De.Boenigk.SMC5D.Basics.Input)">
            <summary>
            Konvertierung der Eingänge vom Input Bezeichnung nach Eingang- Nummer aus Dialog.
            </summary>
            <param name="aPin">Output</param>
            <returns>Ausgang- Nummer aus Dialog</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Log">
            <summary>
            Die Klasse Log schreibt Informationen in ASCII Datei 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.#ctor(System.Boolean)">
            <summary>
            Standard Konstruktor
            </summary>
            <param name="aOutToConsole">True, dann Ausgabe auf Konsole</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.#ctor(System.String,De.Boenigk.SMC5D.Basics.Log.LogLevel,System.Boolean)">
            <summary>
            Konstruktor mit der Angabe der Zieldatei und des Levels
            </summary>
            <param name="aFile">Pfad und Dateiname der Log Datei</param>
            <param name="aLevel">Level einer Log Datei</param>
            <param name="aOutToConsole">True, dann Ausgabe auf Konsole</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.#ctor(System.String,System.Boolean)">
            <summary>
            Konstruktor mit der Angabe der Zieldatei und des Levels
            </summary>
            <param name="aFile">Pfad und Dateiname der Log Datei</param>
            <param name="aOutToConsole">True, dann Ausgabe auf Konsole</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.#ctor(De.Boenigk.SMC5D.Basics.Log.LogLevel,System.Boolean)">
            <summary>
            Konstruktor mit der Angabe des Levels
            </summary>
            <param name="aLevel">Level einer Log Datei</param>
            <param name="aOutToConsole">True, dann Ausgabe auf Konsole</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.SetFile(System.String)">
            <summary>
            set Methode für File
            </summary>
            <param name="aFile">Dateiname mit Pfadangabe</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.Write(System.String)">
            <summary>
            Methode schreibt eine Zeichenkette in die Logdatei
            </summary>
            <param name="aString">Zeichenkette die in die Log Datei geschrieben wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.SetDate(System.Boolean)">
            <summary>
            Datum ausgeben
            </summary>
            <param name="aDate">True, dann Datum wird ausgegeben</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.RemoveLogFile">
            <summary>
            Log Datei wird gelöscht
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.WriteLineWithoutDateTime(System.String,System.String)">
            <summary>
            Methode schreibt eine Zeichenkette in die Default Logdatei Log + Datum + .txt 
            und schließt die Datei am Ende
            </summary>
            <param name="aPath">Verzeichnis in den Log Datei geschrieben wird</param>
            <param name="aString">Zeichenkette die in die Log Datei geschrieben wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.WriteLine(System.String,System.String,System.String)">
            <summary>
            Methode schreibt eine Zeichenkette in die Default Logdatei Log + Datum + .txt 
            und schließt die Datei am Ende
            </summary>
            <param name="aPath">Verzeichnis in den Log Datei geschrieben wird</param>
            <param name="aFileBeginName">Anfang der Dateiname, Ende wird aus Datum rzeugt</param>
            <param name="aString">Zeichenkette die in die Log Datei geschrieben wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.WriteLine(System.String,System.String,System.String,System.Byte[])">
            <summary>
            Methode schreibt eine Zeichenkette in die Default Logdatei Log + Datum + .txt 
            und schließt die Datei am Ende
            </summary>
            <param name="aPath">Verzeichnis in den Log Datei geschrieben wird</param>
            <param name="aFileBeginName">Anfang der Dateiname, Ende wird aus Datum rzeugt</param>
            <param name="aString">Zeichenkette die in die Log Datei geschrieben wird</param>
            <param name="aArray">Ein Byte- Array in ein Text einfügen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.WriteLine(System.String,System.String)">
            <summary>
            Methode schreibt eine Zeichenkette in die Default Logdatei Log + Datum + .txt 
            und schließt die Datei am Ende
            </summary>
            <param name="aPath">Verzeichnis in den Log Datei geschrieben wird</param>
            <param name="aString">Zeichenkette die in die Log Datei geschrieben wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.WriteLine(System.String,System.String,System.Byte[])">
            <summary>
            Methode schreibt eine Zeichenkette in die Default Logdatei Log + Datum + .txt 
            und schließt die Datei am Ende
            </summary>
            <param name="aPath">Verzeichnis in den Log Datei geschrieben wird</param>
            <param name="aString">Zeichenkette die in die Log Datei geschrieben wird</param>
            <param name="aArray">Array in ein Tect einfügen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.WriteLine(System.String,System.String,System.Boolean)">
            <summary>
            Methode schreibt eine Zeichenkette in die Default Logdatei Log.txt 
            und schließt die Datei am Ende
            </summary>
            <param name="aString">Zeichenkette die in die Log Datei geschrieben wird</param>
            <param name="aFullPath">Dateiname</param>
            <param name="aOutToConsole">True, dann Ausgabe auf Konsole</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.WriteLine(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Methode schreibt eine Zeichenkette in die Default Logdatei Log.txt 
            und schließt die Datei am Ende
            </summary>
            <param name="aPath">Verzeichnis in den Log Datei geschrieben wird</param>
            <param name="aString">Zeichenkette die in die Log Datei geschrieben wird</param>
            <param name="aOutToConsole">True, dann Ausgabe auf Konsole</param>
            <param name="aDateTime">True, Datum in Datei schreiben</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Log.Close">
            <summary>
            Log Datei schließen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Log.LogLevel">
            <summary>
            Level Stufen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Log.LogLevel.NoneLevelAndTime">
            <summary>
            Kein Leven und Time
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Log.LogLevel.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Log.LogLevel.Standard">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Log.LogLevel.High">
            <summary>
            Hoch
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Log.LogLevel.VeryHigh">
            <summary>
            Sehr hoch
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.MoveAxis">
            <summary>
            Achsen Konstanten.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.X">
            <summary>
            X Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.Y">
            <summary>
            Y Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.Z">
            <summary>
            Z Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.A">
            <summary>
            A Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.XY">
            <summary>
            Achse X und Y
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.ScanHeightZDepth">
            <summary>
            Abtaster Höhe
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.MeasureToolZDepth">
            <summary>
            Werkzeughöhe
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.Z2">
            <summary>
            Z2 Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.A2">
            <summary>
            A2 Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.B">
            <summary>
            B Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.MoveAxis.None">
            <summary>
            Keine Achse
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Output">
            <summary>
            Controller Ausgänge Con2,Con3 und Con4
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Default">
            <summary>
            Alle Relais werden zurückgesetzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con2Pin1">
            <summary>
            PIN 1 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con2Pin2">
            <summary>
            PIN 2 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con2Pin8MotorCurrent">
            <summary>
            PIN 8 (reserviert für Motorstrom)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con2Pin3">
            <summary>
            PIN 3
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con2Pin4">
            <summary>
            PIN 4
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin5">
            <summary>
            PIN 5
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin6">
            <summary>
            PIN 6
            </summary>       
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin7">
            <summary>
            PIN 7
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin8">
            <summary>
            PIN 8
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin9">
            <summary>
            PIN 9
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin10">
            <summary>
            PIN 10
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin11">
            <summary>
            PIN 11
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin12">
            <summary>
            PIN 12
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin13">
            <summary>
            PIN 13
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con3Pin14">
            <summary>
            PIN 14
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin15">
            <summary>
             PIN 15
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin16">
            <summary>
             PIN 16
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin17">
            <summary>
             PIN 17
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin18">
            <summary>
             PIN 18
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin19">
            <summary>
             PIN 19
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin20">
            <summary>
             PIN 20
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin21">
            <summary>
             PIN 21
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin22">
            <summary>
             PIN 22
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin23">
            <summary>
             PIN 23
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Output.Con4Pin24">
            <summary>
             PIN 24
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.OutputChanged">
            <summary>
            Zählt die Anzahl der Abfragen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.OutputChanged.myQueriesCounter">
            <summary>
            Zählt die Anzahl der Abfragen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.OutputChanged.myOutputs">
            <summary>
            Speichert den alten Zustand
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.OutputChanged.myIgnoreFirstOutputChanged">
            <summary>
            Der erste Status wird ignoriert
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.OutputChanged.IsOutputsChanged(De.Boenigk.SMC5D.Basics.Output,System.Int32)">
            <summary>
            Prüft ob die Ausgänge geändert worden sind
            </summary>
            <param name="aOutput">Status der Ausgänge</param>
            <param name="aRequestCount">Anzahl der Abfragen bis als geschaltet gilt</param>
            <returns>True, Ausgänge haben sich geändert</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.OutputConverter">
            <summary>
            Konvertiert die Ausgänge
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.OutputConverter.GetOutputs(System.Int32)">
            <summary>
            Konvertierung die Ausgänge nach Output List.
            </summary>
            <param name="aPin">Pinnummer (1-32)</param>
            <returns>Alle Output's in List</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.OutputConverter.GetOutput(System.Int32)">
            <summary>
            Konvertierung der Ausgänge vom Benutzer (Ausgang- Nummer aus Dialog) nach Output Bezeichnung.
            Falls ein falscher Pin Wert angegeben wird, dann wird eine Exception geworfen.
            </summary>
            <param name="aPin">Pinnummer (1-32)</param>
            <returns>Output</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.OutputConverter.GetOutputNumber(De.Boenigk.SMC5D.Basics.Output)">
            <summary>
            Konvertierung der Ausgänge vom Output Bezeichnung nach Ausgang- Nummer aus Dialog.
            </summary>
            <param name="aPin">Output</param>
            <returns>Ausgang- Nummer aus Dialog</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.RestrictedAreaExcept">
            <summary>
            Sperrbereich Ausnahmen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.RestrictedAreaExcept.Default">
            <summary>
            Keine Sperrbereich Ausnahmen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.RestrictedAreaExcept.ManuallyMoving">
            <summary>
            Manuell bewegen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.RestrictedAreaExcept.Milling">
            <summary>
            Fräsen/Bohren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.RestrictedAreaExcept.MoveTo">
            <summary>
            Eine Position anfahren, Fahren bis/Pendeln
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.RestrictedAreaExcept.ToolChange">
            <summary>
            Werkzeug wechseln
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.RestrictedAreaExcept.ToolMeasure">
            <summary>
            Werkzeug vermessen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SecCalc">
            <summary>
            Rechnet die Sekunden in Stunden, Minuten, Sekunden um.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SecCalc.Convert(System.Int64)">
            <summary>
            Rechnet Sekunden in Stunden, Minuten, Sekunden um.
            Die Werte werden in den Eigenschaften Hour, Minutes und Seconds abgelegt.
            </summary>
            <param name="aSecunds">Sekunden</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SecCalc.Hour">
            <summary>
            Stunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SecCalc.Minutes">
            <summary>
            Minuten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SecCalc.Seconds">
            <summary>
            Sekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SecCalc.Time">
            <summary>
            Zeit als String
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SMCAxisType">
            <summary>
            Aufzählungstyp Achsen- Typ
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.None">
            <summary>
            Keine Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.X">
            <summary>
            X Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.X2">
            <summary>
            X2 Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.Y">
            <summary>
            Y Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.Y2">
            <summary>
            Y2 Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.Z">
            <summary>
            Z Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.Z2">
            <summary>
            Z2 Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.A">
            <summary>
            A Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.A2">
            <summary>
            A2 Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.B">
            <summary>
            B Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.C">
            <summary>
            C Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.D">
            <summary>
            D Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCAxisType.XY">
            <summary>
            XY Achse simultan ausführen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SMCException">
            <summary>
            Controller Exception
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCException.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCException.#ctor(De.Boenigk.SMC5D.Basics.SMCStatus)">
            <summary>
            Konstruktor mit der Angabe des SMCStatus
            </summary>
            <param name="aSMCStatus">SMCStatus</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCException.#ctor(System.String,De.Boenigk.SMC5D.Basics.SMCStatus)">
            <summary>
            Konstruktor mit der Angabe der String Nachricht und Exception
            </summary>
            <param name="message">Text</param>
            <param name="aSMCStatus">SMCStatus</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCException.#ctor(System.String,System.Exception,De.Boenigk.SMC5D.Basics.SMCStatus)">
            <summary>
            Konstruktor mit der Angabe der String Nachricht und Exception
            </summary>
            <param name="message">Text</param>
            <param name="innerException">Exception</param>
            <param name="aSMCStatus">SMCStatus</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SMCException.Status">
            <summary>
            Status der SMC Steuerelektronik (SMCStatus Konstante)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SMCInfo">
            <summary>
            Ermittelt Version und Seriennummer der Elektronik SMC5D
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCInfo.myConnector">
            <summary>
            USB Verbindung- Objekt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCInfo.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Standard Konstruktor mit Angabe der SMCSettings
            </summary>
            <param name="aConnector">USB Verbindung- Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCInfo.GetSMCName">
            <summary>
            Controller Name
            </summary>
            <returns>Name</returns>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCInfo.myNumber">
            <summary>
            Seriennummer
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCInfo.GetSN">
            <summary>
            Seriennummer der Elektronik SMC5D wird zurückgegeben
            </summary>
            <returns>Seriennummer</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCInfo.GetSNString">
            <summary>
            Seriennummer der Elektronik SMC5D als String wird zurückgegeben
            </summary>
            <returns>Seriennummer</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SMCInfo.SMCStatus">
            <summary>
            Status der Steuerelektronik SMC5D wird zurückgegeben
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SMCLic">
            <summary>
            Verwaltet die SMC5D Lizenzierung
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCLic.myConnector">
            <summary>
            Verbindung- Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCLic.myFreeSNList">
            <summary>
            Liste der freien Lizenzen. Diese Lizenzen werden nicht überprüft sondern sofort als gültige Endlizenzen deklariert.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCLic.mySMCInfo">
            <summary>
            SMCInfo
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.#ctor(De.Boenigk.SMC5D.Basics.Connector,System.String[])">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">SMC5D Verbindung- Objekt</param>
            <param name="aFreeSNList">Liste der freien Lizenzen. Diese Lizenzen werden nicht überprüft sondern sofort als gültige Endlizenzen deklariert.</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.Load">
            <summary>
            Lizenz aus Datei in den Kontroller SMC5D USB schreiben
            </summary>
            <returns>Lizenz erfolgreich geladen</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.GetSN(System.Byte[])">
            <summary>
            Konvertiert Lizenz- Byte- Array in eine Zeichenkette (string)
            </summary>
            <param name="aSN">Lizenz als Byte Array</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.ValidFormat(System.String)">
            <summary>
            Prüft ob das Format der SN stimmt
            </summary>
            <param name="aSN"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.Init">
            <summary>
            Kontroller Lizenz wird ausgelesen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.ResetSN(System.Byte)">
            <summary>
            Aktuelle Lizenz wird gelöscht (überschrieben mit einer neuen Lizenznummer)
            </summary>
            <param name="aCustomerNumber">Mandanten/Kundennummer Nummer (die erste zwei Nummern der S/N)</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.ResetSN">
            <summary>
            Aktuelle Lizenz wird gelöscht (überschrieben mit einer neuen Lizenznummer)
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.GetCustomerID">
            <summary>
            Gibt die Customer ID zurück
            </summary>
            <returns>Customer ID</returns>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCLic.myIsLicensed">
            <summary>
            Speichert den ausgelesenen Lizenz- Status
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.IsLicensed">
            <summary>
            Prüft ob der Kontroller lizenziert ist.
            </summary>
            <returns>True, der Kontroller ist lizenziert</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.IsFree(System.String)">
            <summary>
            Prüft ob die angegebene Lizenz (SN) als freie definiert ist.
            </summary>
            <param name="aSN">Seriennummer</param>
            <returns>True, Lizenz ist frei</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.CreateLicence(System.Byte,De.Boenigk.SMC5D.Basics.SMCLic.Lic)">
            <summary>
            SN wird zusammengestellt
            </summary>
            <param name="aCustomerID">Zweistellige Kundennummer (0-99)</param>
            <param name="aLic">True, Endlizenz, False 30 Tage Lizenz </param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.GetID">
            <summary>
            Zufällige 12'stellige ID wird erzeugt
            </summary>
            <returns>ID</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.CreateRandom">
            <summary>
            Zufällige 7-stellige Seriennummer wird erzeugt
            </summary>
            <returns>Zufällige Seriennummer</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.GetSN(System.String)">
            <summary>
            Seriennummer wird in Byte Array umgewandelt
            </summary>
            <param name="aSN">Seriennummer als String</param>
            <returns>Byte Array als Seriennummer</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.SetStart(System.String)">
            <summary>
            Schreibt dass erste mal eine Lizenz
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.UpdateLic(System.String)">
            <summary>
            Prüft und aktualisiert die Lizenz im EPROM
            </summary>
            <param name="aLiz">Aus dem EPROM ausgelesene Lizenz</param>
            <returns>True, Lizenz noch verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.CheckLizense(System.String,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Prüft Lizenz und ob die Daten stimmen. Wenn noch Lizenz verfügbar, dann wird true zurückgegeben.
            </summary>
            <param name="aLiz">Lizenz String aus dem EPROM</param>
            <param name="aStartEP">Startdatum aus dem EPROM</param>
            <param name="aLastEP">Letztes gespeichertes Datum im EPROM</param>
            <param name="aToday">Datum von heute</param>
            <returns>True, Lizenz ist verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.WRITE(System.Byte[])">
            <summary>
            Byte Array wird in den Flash geschrieben
            </summary>
            <param name="aBytes">Byte Array</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCLic.READ">
            <summary>
            Byte Array wird vom Flash ausgelesen
            </summary>
            <returns>Byte Array</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SMCLic.ErrorID">
            <summary>
            Gibt die Fehlermeldung aus.
            
             0 - kein Fehler
             1 - Fehler, Lizenzdatei ist fehlerhaft!
             2 - Fehler, falsche Lizenzdatei!
             3 - Fehler, Lizenzdatei wurde bereits eingelesen!
             4 - keine Eingabe, Eingabe der Lizenz wurde abgebrochen oder nicht ausgeführt.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SMCLic.LicDays">
            <summary>
            Anzahl Tage, wenn -1 dann End- Lizenz
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SMCLic.Lic">
            <summary>
            Lizenzart
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCLic.Lic.Final">
            <summary>
            Endlizenz wird eingetragen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCLic.Lic.Days30">
            <summary>
            Lizenz für 30 tage
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCLic.Lic.None">
            <summary>
            Keine Lizenz
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SMCRefEventArgs">
            <summary>
            Referenzfahrt Nachricht 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCRefEventArgs.#ctor(De.Boenigk.SMC5D.Basics.SMCAxisType)">
            <summary>
            Konstruktor
            </summary>
            <param name="aAxisFinish">Achse referenziert</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCRefEventArgs.#ctor(De.Boenigk.SMC5D.Basics.SMCAxisType,System.Int32)">
            <summary>
            Konstruktor
            </summary>
            <param name="aAxisFinish">Achse referenziert</param>
            <param name="aStepError">Schrittverluste in Schritten</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SMCRefEventArgs.SMCAxis">
            <summary>
            Referenzfahrt für Achsen- Typ ausgeführt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SMCRefEventArgs.StepError">
            <summary>
            Schrittverluste in Schritten
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SMCStatus">
            <summary>
            SMCStatus beschreibt den Betriebsstatus des Controllers
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.None">
            <summary>
            Status: Unbestimmt, Leerlauf
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.Ready">
            <summary>
            Status: Bereit, keine Fehler aufgetreten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.Run">
            <summary>
            Status: Maschine arbeitet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.Abort">
            <summary>
            Status: Maschinenarbeit abgebrochen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.Pause">
            <summary>
            Status: Maschinenarbeit angehalten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.Error">
            <summary>
            Status: Ein unbekannter Fehler ist aufgetreten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.NotFound">
            <summary>
            Status: Fehler, Controller nicht gefunden, keine Verbindung mit der Steuerung
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.HoodIsOpen">
            <summary>
            Status: Haube ist geöffnet, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.AbortRefSwitchXOn">
            <summary>
            Status: Abbruch, Referenzschalter für die Achse X ist eingeschaltet. Maschinenbereich überschritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.AbortRefSwitchYOn">
            <summary>
            Status: Abbruch, Referenzschalter für die Achse Y ist eingeschaltet. Maschinenbereich überschritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.AbortRefSwitchZOn">
            <summary>
            Status: Abbruch, Referenzschalter für die Achse Z ist eingeschaltet. Maschinenbereich überschritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.AbortRefSwitchZ2On">
            <summary>
            Status: Abbruch, Referenzschalter für die Achse Z2 ist eingeschaltet. Maschinenbereich überschritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.AbortOutOfXArea">
            <summary>
            Status: Abbruch, Maschinenbereich in X überschritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.AbortOutOfYArea">
            <summary>
            Status: Abbruch, Maschinenbereich in Y überschritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.AbortOutOfZArea">
            <summary>
            Status: Abbruch, Maschinenbereich in Z überschritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.AbortOutOfZ2Area">
            <summary>
            Status: Abbruch, Maschinenbereich in Z2 überschritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.StopZAchieved">
            <summary>
            Status: Pause, Maschinenbereich in Z min überschritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.LicenseNotFound">
            <summary>
            Status: Lizenz nicht gefunden
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.Disabled">
            <summary>
            Verbindung vom Program geschlossen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.EmergencyStop1">
            <summary>
            Status, Eingang 1: Soft- NOT-AUS, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.EmergencyStop2">
            <summary>
            Status, Eingang 2: Soft- NOT-AUS, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.EmergencyStop3">
            <summary>
            Status, Eingang 3: Soft- NOT-AUS, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.EmergencyStop4">
            <summary>
            Status, Eingang 4: Soft- NOT-AUS, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.EmergencyStop5">
            <summary>
            Status, Eingang 5: Soft- NOT-AUS, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.EmergencyStop6">
            <summary>
            Status, Eingang 6: Soft- NOT-AUS, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.EmergencyStop7">
            <summary>
            Status, Eingang 7: Soft- NOT-AUS, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.EmergencyStop8">
            <summary>
            Status, Eingang 8: Soft- NOT-AUS, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SMCStatus.EmergencyStop9">
            <summary>
            Status, Eingang 9: Soft- NOT-AUS, Maschinenarbeit abgebrochen 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SMCStatusEventHandler">
            <summary>
            Typsicherer Zeiger (Delegate) SMCStatusEventHandler 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SMCStatusEventArgs">
            <summary>
            Übermittelt den Status der Steuerelektronik SMC5D per Nachricht
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCStatusEventArgs.#ctor(System.String,De.Boenigk.SMC5D.Basics.SMCStatus)">
            <summary>
            Konstruktor mit Angabe des Status und Test- Nachricht.
            </summary>
            <param name="aText">Text Nachricht</param>
            <param name="aStatus">Status der SMC5D Steuerung</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SMCStatusEventArgs.#ctor(De.Boenigk.SMC5D.Basics.SMCStatus)">
            <summary>
            Konstruktor mit Angabe des Status und Test- Nachricht.
            </summary>
            <param name="aStatus">Status der SMC5D Steuerung</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SMCStatusEventArgs.Text">
            <summary>
            Text Nachricht
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.SMCStatusEventArgs.Status">
            <summary>
            Status der Steuerelektronik SMC5D
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SpeedArea">
            <summary>
            Ermittelt minimale und maximale Geschwindigkeiten im Takt- Bereich
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SpeedArea.mySettings">
            <summary>
            Alle Einstellungen der Steuerelektronik SMC5D
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SpeedArea.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Standard Konstruktor
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SpeedArea.GetMaxSpeed(De.Boenigk.SMC5D.Basics.SpeedArea.Axis)">
            <summary>
            Rechnet die maximale Geschwindigkeit in Millimeter pro Sekunde für die angegebene Achsenauflösung aus
            </summary>
            <param name="aAxis">Achse deren die maximale Geschwindigkeit berechnet wird</param>
            <returns>Maximal Geschwindigkeit in Millimeter pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.SpeedArea.GetMaxSpeed(De.Boenigk.SMC5D.Basics.SpeedArea.Axis,System.Double,System.Byte)">
            <summary>
            Rechnet die maximale Geschwindigkeit in Millimeter pro Sekunde für die angegebene Achsenauflösung aus
            </summary>
            <param name="aAxis">Achse deren die maximale Geschwindigkeit berechnet wird</param>
            <param name="aAxisResolution">Achsenauflösung in Millimeter pro Schritt</param>
            <param name="aFrequence">Frequenz 1 bis 150</param>
            <returns>Maximal Geschwindigkeit in Millimeter pro Sekunde</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.SpeedArea.Axis">
            <summary>
            Achsen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SpeedArea.Axis.X">
            <summary>
            X Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SpeedArea.Axis.Y">
            <summary>
            Y Achse
            </summary>               
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SpeedArea.Axis.Z">
            <summary>
            Z Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SpeedArea.Axis.A">
            <summary>
            A Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.SpeedArea.Axis.B">
            <summary>
            B Achse
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.StartTime">
            <summary>
            Merkt sich die Startzeit.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StartTime.GetStartDateTime">
            <summary>
            Merkt sich die Startzeit. Die Startzeit wird bei Generierung des Objekts dieser Klasse gemerkt
            </summary>
            <returns>Startzeit</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.StepCalc">
            <summary>
            Berechnet Schritte pro Millimeter und Achsenauflösung
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetStepsX(De.Boenigk.SMC5D.Basics.Connector,System.Double)">
            <summary>
            Angegebene Millimeter werden nach Anzahl der Schritte für die Achse X berechnet
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aMM">Angegebene Länge in Millimeter</param>
            <returns>Anzahl Schritte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetStepsY(De.Boenigk.SMC5D.Basics.Connector,System.Double)">
            <summary>
            Angegebene Millimeter werden nach Anzahl der Schritte für die Achse Y berechnet
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aMM">Angegebene Länge in Millimeter</param>
            <returns>Anzahl Schritte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetStepsZ(De.Boenigk.SMC5D.Basics.Connector,System.Double)">
            <summary>
            Angegebene Millimeter werden nach Anzahl der Schritte für die Achse Z berechnet
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aMM">Angegebene Länge in Millimeter</param>
            <returns>Anzahl Schritte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetStepsA(De.Boenigk.SMC5D.Basics.Connector,System.Double)">
            <summary>
            Angegebene Millimeter werden nach Anzahl der Schritte für die Achse A berechnet
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aMM">Angegebene Länge in Millimeter</param>
            <returns>Anzahl Schritte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetStepsB(De.Boenigk.SMC5D.Basics.Connector,System.Double)">
            <summary>
            Angegebene Millimeter werden nach Anzahl der Schritte für die Achse B berechnet
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aMM">Angegebene Länge in Millimeter</param>
            <returns>Anzahl Schritte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetRotateSteps(System.Int32,System.Double,System.Double)">
            <summary>
            Millimeter für Drehachse werden nach Anzahl der Schritte berechnet
            </summary>
            <param name="aStepsTurn">Schritte pro Umdrehung der Achse</param>
            <param name="aDiameter">Durchmesser</param>
            <param name="aMM">Länge in Millimeter</param>
            <returns>Anzahl Schritte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetStepMM(System.Int32,System.Double)">
            <summary>
            Schritte pro Millimeter für Achse nach Millimeter umrechnen.
            </summary>
            <param name="aStepsTurn">Schritte pro Umdrehung</param>
            <param name="aWayTurn">Weg pro Umdrehung</param>
            <returns>Schritte pro Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetRotateStepMM(System.Int32,System.Double)">
            <summary>
            Schritte pro Millimeter für Dreh- Achsen nach Millimeter umrechnen.
            </summary>
            <param name="aStepsTurn">Schritte pro Umdrehung</param>
            <param name="aDiameter">Durchmesser</param>
            <returns>Schritte pro Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMM(System.Int32,System.Double,System.Int32)">
            <summary>
            Die angegebene Anzahl der Schritte wird nach Millimeter umgerechnet
            </summary>
            <param name="aStepsTurn">Schritte pro Umdrehung der Achse</param>
            <param name="aWayTurn">Weg pro Umdrehung der Achse</param>
            <param name="aSteps">Anzahl der Schritte</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMX(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Die Position der X Achse in Schritten wird nach Millimeter umgerechnet.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMX(De.Boenigk.SMC5D.Basics.Connector,System.Int32)">
            <summary>
            Rechnet die angegebene Schritte auf Millimeter für die X Achse um.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aStepsX">Schritte in Millimeter</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMY(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Die Position der Y Achse in Schritten wird nach Millimeter umgerechnet.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMY(De.Boenigk.SMC5D.Basics.Connector,System.Int32)">
            <summary>
            Rechnet die angegebene Schritte auf Millimeter für die Y Achse um.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aStepsY">Schritte in Millimeter</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMZ(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Die Position der Z Achse in Schritten wird nach Millimeter umgerechnet.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMZ(De.Boenigk.SMC5D.Basics.Connector,System.Int32)">
            <summary>
            Rechnet die angegebene Schritte auf Millimeter für die Z Achse um.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aStepsZ">Schritte in Millimeter</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMA(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Rechnet die angegebene Schritte auf Millimeter für die A Achse um.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMA(De.Boenigk.SMC5D.Basics.Connector,System.Int32)">
            <summary>
            Rechnet die angegebene Schritte auf Millimeter für die A Achse um.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aStepsA">Schritte in Millimeter</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMB(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Die Position der B Achse in Schritten wird nach Millimeter umgerechnet.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetMMB(De.Boenigk.SMC5D.Basics.Connector,System.Int32)">
            <summary>
            Rechnet die angegebene Schritte auf Millimeter für die B Achse um.
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
            <param name="aStepsB">Schritte in Millimeter</param>
            <returns>Länge der Schritte in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetSteps(System.Int32,System.Double,System.Double)">
            <summary>
            Millimeter werden nach Anzahl der Schritte berechnet
            </summary>
            <param name="aStepsTurn">Schritte pro Umdrehung der Achse</param>
            <param name="aWayTurn">Weg pro Umdrehung der Achse</param>
            <param name="aMM">Länge in Millimeter</param>
            <returns>Anzahl Schritte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetAxisLength(De.Boenigk.SMC5D.Settings.SMCAxis)">
            <summary>
            Gibt die Länge der Achse in Schritten zurück
            </summary>
            <param name="aSMCAxis">Einstellungen der Achse</param>
            <returns>Anzahl Schritte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetLength(De.Boenigk.SMC5D.Settings.SMCAxis,System.Double)">
            <summary>
            Gibt die Länge in Schritten zurück
            </summary>
            <param name="aSMCAxis">Einstellungen der Achse</param>
            <param name="aLength">Länge in Millimeter das nach Steps umgerechnet werden soll</param>
            <returns>Anzahl Schritte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.StepCalc.GetAxisResolution(System.Int32,System.Double)">
            <summary>
            Achsenauflösung für jeweilige Achse wird berechnet (mm/Schritt).
            </summary>
            <param name="aStepsTurn">Schritte pro Umdrehung</param>
            <param name="aWayTurn">Weg pro Umdrehung</param>
            <returns>Achsenauflösung in Millimeter pro Schritt</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Switch">
            <summary>
             Verwaltet die Ausgänge und Eingänge
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Switch.myConnector">
            <summary>
            Verbindung Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Switch.myCons">
            <summary>
            Enthält 2 Listen mit alle Eingänge und Ausgängen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindungsobjekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.SetPin(De.Boenigk.SMC5D.Basics.Output,System.Boolean,System.Boolean)">
            <summary>
            Ein Pin wird ein- oder ausgeschaltet
            </summary>
            <param name="aPin">Ausgang Pin</param>
            <param name="aOn">True, einschalten sonst ausschalten</param>
            <param name="aPlus">Drehzahl erhöhen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.SetPWMSpindle(System.Boolean)">
            <summary>
            Spindeldrehzahl erhöhen oder verkleinern
            </summary>
            <param name="aPlus">Drehzahl erhöhen, sonst verkleinern</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.SetPin(De.Boenigk.SMC5D.Basics.Output,System.Boolean,System.Byte)">
            <summary>
            Ein Pin wird ein- oder ausgeschaltet
            </summary>
            <param name="aPin">Ausgang Pin</param>
            <param name="aOn">True, einschalten sonst ausschalten</param>
            <param name="aPWM">Setzt PWM Signal. Wert 0 schaltet das Signal aus</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.SetPWM(System.Byte,System.Byte)">
            <summary>
            Schaltet PWM Signal
            </summary>
            <param name="aPWM">PWM Signal (0-255)</param>
            <param name="aNumber">PWM Nummer 0, 1 oder 2</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.SetPin(De.Boenigk.SMC5D.Basics.Output,System.Boolean)">
            <summary>
            Ein Pin wird ein- oder ausgeschaltet
            </summary>
            <param name="aPin">Ausgang Pin</param>
            <param name="aOn">True, einschalten sonst ausschalten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.InvertPin(De.Boenigk.SMC5D.Basics.Output)">
            <summary>
            Ein Pin wird ein- oder ausgeschaltet
            </summary>
            <param name="aPin">Ausgang Pin</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.IsOutputOn(De.Boenigk.SMC5D.Basics.Output,De.Boenigk.SMC5D.Basics.GlobPosition)">
            <summary>
            Prüft ob ein Ausgang im Objekt GlobPosition geschaltet ist
            </summary>
            <param name="aPin">Ausgang dass geprüft wird</param>
            <param name="aGlobPosition">GlobPosition in der GlobPosition.Out geprüft wird</param>
            <returns>True, Ausgang ist an</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.IsOutputOn(De.Boenigk.SMC5D.Basics.Output)">
            <summary>
            Prüft ob ein Ausgang geschaltet ist
            </summary>
            <param name="aPin">Ausgang dass geprüft wird</param>
            <returns>True, Ausgang ist an</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.ResetPins">
            <summary>
            Alle Pins werden zurückgesetzt.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.ResetAll">
            <summary>
            Alle Pins und PWM (Spindeldrehzahl wird auf 0 gesetzt) werden zurückgesetzt.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.ResetPWM">
            <summary>
            Spindeldrehzahl wird auf 0 gesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.ReadInputs">
            <summary>
            Status der Ausgänge und Eingänge vom Kontroller auslesen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.IsInputOn(De.Boenigk.SMC5D.Basics.Input,System.Boolean)">
            <summary>
            Zustand des Eingangs aPin wird ermitteln. Dabei wird der Status vom Kontroller nicht gelesen, sondern letzter ausgelesener geprüft.
            Um aktuellen Zustand zu bekommen, muss ReadInputs aufgerufen werden.
            </summary>
            <param name="aPin">Eingang</param>
            <param name="aInvert">Schalter invertieren</param>
            <returns>True, Eingang ist an</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.IsInputOn(De.Boenigk.SMC5D.Basics.Input,System.Boolean,System.Int32)">
            <summary>
            Zustand des Eingangs aPin wird nach einer Verzögerung in Millisekunden ermitteln. Dabei wird der Status vom Kontroller nicht gelesen, sondern letzter ausgelesener geprüft.
            Um aktuellen Zustand zu bekommen, muss ReadInputs aufgerufen werden.
            </summary>
            <param name="aPin">Eingang</param>
            <param name="aInvert">Schalter invertieren</param>
            <param name="aDelay">Verzögerung in Millisekunden</param>
            <returns>True, Eingang ist an</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.Switch.GetInputStatus">
            <summary>
            Werte der Eingänge werden angepasst
            </summary>
            <returns>Bool Array mit Zuständen der Eingänge</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.Switch.Inputs">
            <summary>
            Schalter Zustände
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.TxtFile">
            <summary>
            Die Klasse TxtFile liest ASCII Text Dateien
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.TxtFile.#ctor(System.String)">
            <summary>
            Standard Konstruktor 
            </summary>
            <param name="aFileString">Datei mit Pfadangabe</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.TxtFile.ReadToEnd">
            <summary>
            Eine ASCII Datei lesen und als char Array zurückgeben
            </summary>
            <returns>Inhalt der Datei wird als char array zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.TxtFile.Read(System.Int32)">
            <summary>
            Eine Anzahl Bytes aus ASCII Datei lesen und als char Array zurückgeben.
            Anschießend wird die Datei geschlossen.
            </summary>
            <param name="aBytes">Zu lesende Anzahl Bytes</param>
            <returns>Inhalt der Datei wird als char array zurückgegeben</returns>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.TxtFile.myBuffer">
            <summary>
            Puffer zum einlesen einen ganzen Datei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.TxtFile.myStringBuilder">
            <summary>
            Wird verwendet um ein Zeile zu erzeugen!
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.TxtFile.ReadPLine">
            <summary>
            Liest eine Zeile aus der Datei und speichert im Current ab. Die Eigenschaft Position zeigt die Zeilen Position. 
            Die Datei wird auf einmal in ein Puffer char array eingelesen und dann werden die Zeilen einzeln ausgegeben.
            </summary>
            <returns>TRUE, dann kein Dateiende erreicht und weitere Daten folgen</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.TxtFile.ReadLine">
            <summary>
            Liest eine Zeile aus der Datei und speichert im Current ab. Die Eigenschaft Position zeigt NICHT die Position 
            der Zeile beim Benutzen dieser Methode, sondern den Puffer. 
            
            WICHTIG: Wenn die Position der Zeile benötigt wird, dann muss die Methode ReadPLine() benutzt wird.
            </summary>
            <returns>TRUE, dann kein Dateiende erreicht und weitere Daten folgen</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.TxtFile.Open">
            <summary>
            Datei öffnen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.TxtFile.Close">
            <summary>
            Datei schließen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.TxtFile.ClearPLineBuffer">
            <summary>
            Puffer dass von ReadPLine angelegt wurde, wird gelöscht
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.TxtFile.Position">
            <summary>
            Lese Position innerhalb einer Datei verändern/lesen.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.TxtFile.Length">
            <summary>
            Gibt die Dateilänge zurück. Wenn die Methode .ReadPLine() verwendet wird, dann wird Pufferlänge zurückgegeben.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.TxtFile.Current">
            <summary>
            Die gelesene Zeile wird zurückgegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.TxtFile.Counter">
            <summary>
            Gibt die Anzahl der gelesenen Zeichen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.XYPointD">
            <summary>
            2D Punkt für double- Zahlen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.XYPointD.C_Length">
            <summary>
            Gibt die GESAMMTE Länge eines PointF4D Objektes in Bytes
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.XYPointD.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.XYPointD.#ctor(System.Double,System.Double)">
            <summary>
            Konstruktor mit Angabe der X,Y Koordinate
            </summary>
            <param name="aX">Zahl X</param>
            <param name="aY">Zahl Y</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.XYPointD.#ctor(System.Byte[],System.Int32)">
            <summary>
            Konstruktor mit Angabe der X,Y,Z,A Koordinaten als Byte Array
            </summary>
            <param name="aBytes">ArrayList mit Byte Objekten</param>
            <param name="aStartIndex">StartIndex</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.XYPointD.ToByteArray">
            <summary>
            PointF4D als Byte Array wird zurückgegeben
            </summary>
            <returns>Byte Array</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.XYPointD.Clone">
            <summary>
            Objekt flach klonen
            </summary>
            <returns>Eine flache Kopie dieses Objektes</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.XYPointD.X">
            <summary>
            Koordinate X
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.XYPointD.Y">
            <summary>
            Koordinate Y
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent">
            <summary>
            Schaltet Motorstrom nach einer bestimmten Zeit ab.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent.myConnector">
            <summary>
            Verbindung Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent.mySwitch">
            <summary>
            Schalter ein- oder ausschalten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent.myStatusSwitcher">
            <summary>
            Wechselt zwischen dem Status (Arbeit und nicht Arbeit)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent.myMillisec">
            <summary>
            Zeit in Millisekunden
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindung Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent.Check(System.UInt32)">
            <summary>
            Prüft ob die angegebene Zeit erreicht ist. Wenn ja dann wird Motorstrom abgesenkt.
            </summary>
            <param name="aMillisec">Zeit in Millisekunden, die im Timer abgelaufen ist</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent.Stop">
            <summary>
            Check wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent.Start">
            <summary>
            Check wird fortgesetzt
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Backlash">
            <summary>
            Fügt der Delta X,Y einen Umkehrspiel hinzu
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Backlash.mySettings">
            <summary>
            Alle Einstellungen der Steuerelektronik
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Backlash.myPlusX">
            <summary>
            Letzte Richtung der Delta
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Backlash.myStartBacklash">
            <summary>
            Start-Status des Umkehrspiels
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Backlash.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings,De.Boenigk.SMC5D.Basics.GlobPosition,De.Boenigk.SMC5D.Core.StartBacklash)">
            <summary>
            Konstruktor mit Angabe der Einstellungen
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik</param>
            <param name="aGlobPosition">Globale Position</param>
            <param name="aStartBacklash">Aktueller Start- Werte des Umkehrspiel aus Kontroller</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Backlash.GetDeltaX(System.Int64)">
            <summary>
            Wenn Umkehrspiel aktiv, dann wird Delta X um Umkehrspiel korrigiert.
            Ansonsten wird der Wert unverändert zurückgegeben.
            </summary>
            <param name="aDeltaX">Delta X in Steps</param>
            <returns>Neue Delta X</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Backlash.GetDeltaY(System.Int64)">
            <summary>
            Wenn Umkehrspiel aktiv, dann wird Delta Y um Umkehrspiel korrigiert.
            Ansonsten wird der Wert unverändert zurückgegeben.
            </summary>
            <param name="aDeltaY">Delta Y in mm</param>
            <returns>Neue Delta Y</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Backlash.GetDeltaZ(System.Int64)">
            <summary>
            Wenn Umkehrspiel aktiv, dann wird Delta Z um Umkehrspiel korrigiert.
            Ansonsten wird der Wert unverändert zurückgegeben.
            </summary>
            <param name="aDeltaZ">Delta Z in mm</param>
            <returns>Neue Delta Z</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Backlash.GetDeltaA(System.Int64)">
            <summary>
            Wenn Umkehrspiel aktiv, dann wird Delta A um Umkehrspiel korrigiert.
            Ansonsten wird der Wert unverändert zurückgegeben.
            </summary>
            <param name="aDeltaA">Delta A in mm</param>
            <returns>Neue Delta A</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Backlash.GetDeltaB(System.Int64)">
            <summary>
            Wenn Umkehrspiel aktiv, dann wird Delta A um Umkehrspiel korrigiert.
            Ansonsten wird der Wert unverändert zurückgegeben.
            </summary>
            <param name="aDeltaB">Delta B in mm</param>
            <returns>Neue Delta B</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.Cons">
            <summary>
            2 Listen mit Eingänge und Ausgängen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Cons.Inputs">
            <summary>
            Eingänge (8 an Con2, 8 an Con3 und 8 an Con 4)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Basics.Cons.Outputs">
            <summary>
            Ausgänge (5 an Con2, 8 an Con3 und 8 an Con 4)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.ConServices">
            <summary>
            Setzt die Daten in die INIT Struct. Bittet einfache Konvertierung für Ausgänge und Eingänge und andere einfache Hilfsfunktionen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ConServices.myPinValues">
            <summary>
            Werte,die in den Init geschrieben werden. Es sind Werte der Eingänge Input..
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.ConServices.GetInRef(System.Int32)">
            <summary>
            Konvertierung der Eingänge vom Benutzer Pin Bezeichnung nach Pic32 Init Bezeichnung.
            
            Pinnummer wird für Init zurückgegeben.
            </summary>
            <param name="aPin">Pinnummer</param>
            <returns>Gibt uint zurück dass in INIT_REFERENCJA_WEJSCIA.X_Referencja, INIT_REFERENCJA_WEJSCIA.Y_Referencja, ... eingetragen wird</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.ConServices.GetInput(System.Int32)">
            <summary>
            Konvertierung der Eingänge vom Benutzer Bezeichnung (Eingang- Nummer aus Dialog) nach Input Bezeichnung.
            Falls ein falscher Pin Wert angegeben wird, dann wird eine Exception geworfen.
            </summary>
            <param name="aPin">Pinnummer (1-32)</param>
            <returns>Input</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.ConServices.GetInput(De.Boenigk.SMC5D.Basics.Input)">
            <summary>
            Konvertierung der Ausgänge vom Output Bezeichnung nach Ausgang- Nummer aus Dialog.
            </summary>
            <param name="aPin">Output</param>
            <returns>Ausgang- Nummer aus Dialog</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.ConServices.GetOutput(System.Int32)">
            <summary>
            Konvertierung der Ausgänge vom Benutzer (Ausgang- Nummer aus Dialog) nach Output Bezeichnung.
            Falls ein falscher Pin Wert angegeben wird, dann wird eine Exception geworfen.
            </summary>
            <param name="aPin">Pinnummer (1-32)</param>
            <returns>Output</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.ConServices.GetOutput(De.Boenigk.SMC5D.Basics.Output)">
            <summary>
            Konvertierung der Ausgänge vom Output Bezeichnung nach Ausgang- Nummer aus Dialog.
            </summary>
            <param name="aPin">Output</param>
            <returns>Ausgang- Nummer aus Dialog</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.DecomposeByteArray">
            <summary>
            Zerlegt ein Byte Array in gewüschte kleinere Byte Arrays. Dabei wird die maximale Länge angegeben
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DecomposeByteArray.myMaxByteArrayLength">
            <summary>
            Maximale Länge des Byte Arrays.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DecomposeByteArray.myByteArray">
            <summary>
            Byte Array dass in kleinere Byte Arrays zerlegt wird (Quelle).
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DecomposeByteArray.myIndex">
            <summary>
            Aktuelle Position innerhalb des Byte Arrays.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.DecomposeByteArray.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.DecomposeByteArray.SetStart(System.Byte[],System.Int32)">
            <summary>
            Start wird gesetzt. Byte- Array dass in kleineren Byte Arrays zurückgeben werden soll wird angeben
            </summary>
            <param name="aArray">Byte- Array dass in kleineren Arerays zurücgegeben werden soll</param>
            <param name="aMaxByteArrayLength">Maximale Länge des Byte Arrays</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.DecomposeByteArray.SetStart(System.Byte[])">
            <summary>
            Start wird gesetzt. Byte- Array dass in kleineren Byte Arrays zurückgeben werden soll wird angeben
            </summary>
            <param name="aArray">Byte- Array dass in kleineren Arerays zurücgegeben werden soll</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.DecomposeByteArray.SetStart">
            <summary>
            Start wird gesetzt.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.DecomposeByteArray.GetNext">
            <summary>
            Teil Byte- Array wird zurückgegeben. Wenn der Index am Ende der Byte Array dann wird null zurückgegeben
            </summary>
            <returns>Teil Byte- Array oder NULL wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.DecomposeByteArray.IsNextArrayContain">
            <summary>
            Prüft ob weitere Byte- Array Daten enthalten sind.
            </summary>
            <returns>True, weitere Array- Byte Daten enthalten, sonst false für keine Danten mehr</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Counter">
            <summary>
            Counter (Licznik) der Achsen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Counter.X">
            <summary>
            X Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Counter.Y">
            <summary>
            Y Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Counter.Z">
            <summary>
            Z Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Counter.A">
            <summary>
            A Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Counter.B">
            <summary>
            B Achse
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Axis">
            <summary>
            Achsen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Axis.X">
            <summary>
            X Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Axis.Y">
            <summary>
            Y Achse
            </summary>               
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Axis.Z">
            <summary>
            Z Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Axis.A">
            <summary>
            A Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Axis.B">
            <summary>
            B Achse
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.AxisPlusDirection">
            <summary>
            Wert für positive Achsen- Richtung 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.AxisPlusDirection.X">
            <summary>
            X Plus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.AxisPlusDirection.Y">
            <summary>
            Y Plus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.AxisPlusDirection.Z">
            <summary>
            Z Plus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.AxisPlusDirection.A">
            <summary>
            A Plus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.AxisPlusDirection.B">
            <summary>
            B Plus
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.IP">
            <summary>
            IP Klasse, Konvertiert die IP Adresse
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IP.ToUInt(System.String)">
            <summary>
            IP Adresse wird nach uint konvertiert
            </summary>
            <param name="addr">IP Adresse als string</param>
            <returns>IP Adresse als string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IP.ToAddr(System.UInt32)">
            <summary>
            IP Adresse von uint nach string konvertieren
            </summary>
            <param name="address">IP Adresse als uint</param>
            <returns>IP Adresse als string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.CONNECT(System.String,System.Byte)">
            <summary>
            Verbindung mit PIC32 aufbauen
            </summary>
            <param name="aInstance">Nummer der Instanz (0 oder 1)</param>
            <param name="aLogFile">Lag Dateiname</param>
            <param name="aLogLevel">Log Level, 0 - kein, 1 - die wichtigsten Daten, 2 - alles was möglich ist</param>
            <returns>True, Verbindung vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.CONNECT">
            <summary>
            Verbindung mit PIC32 aufbauen
            </summary>
            <param name="aInstance">Nummer der Instanz (0 oder 1)</param>
            <returns>True, Verbindung vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.IS_CONNECTED">
            <summary>
            Prüft ob die Verbindung existiert
            </summary>
            <returns>True, Verbindung mit PIC32 vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.DIS_CONNECT">
            <summary>
            Verbindung mit USB Pic32 wird getrennt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.SET_UPDATE_MODE">
            <summary>
            Aktiviert Firmware-Update Modus
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_UPDATE_DATA_LINE(System.Byte[])">
            <summary>
            Daten werden in den PIC Speicher geschrieben.
            
            HINWEIS: Diese Methode darf erst nach Methoden Aufruf SET_WRITE_DATA aufgerufen werden.
            </summary>
            <returns>True, Daten an den Kontroller gesendet, false Keine Daten mehr zum senden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WriteLineToPicTester(System.String)">
            <summary>
            Schreibt Text in den PicTester
            </summary>
            <param name="aText">Text</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.ESC">
            <summary>
            Abbruch, Arbeit der CNC Maschine abbrechen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.REBOOT">
            <summary>
            Kontroller wird komplett zurückgesetzt (neu gestartet). Erst nach einem Fehler möglich. Wenn kein Fehler dann hat diese Funktion keine Auswirkung
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.RESET_INSPECTION_TIME">
            <summary>
            Zähler für Arbeitszeit zurücksetzen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.START">
            <summary>
            Start, Arbeit der CNC Maschine starten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.STOP">
            <summary>
            Stop, Manuell bewegen wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WAIT(System.Int32)">
            <summary>
            Verlängert aktuelle Wartezeit in Sekunden (nur wenn Job und wenn gerade Wartezeit ausgeführt wird)
            </summary>
            <param name="aTime">Wartezeit in Sekunden</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.STOP_JOB">
            <summary>
            Stopp, Arbeit der CNC Maschine wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.STOP_MEASURE">
            <summary>
            Stopp, Beim Fahren auf Schalter CNC Maschine anhalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.MANUAL_MOVE(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Posuw reczny
            </summary>
            <param name="aDOPISZ_DANE">Daten Struktur</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.MANUAL_MOVE_STEP(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Posuw reczny krok po kroku
            </summary>
            <param name="aDOPISZ_DANE">Daten Struct</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.READ_DATA">
            <summary>
            Liest ein Byte Array vom PiC32 aus und gibt es in einer Struktur zurück.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.INIT_WRITE_DATA">
            <summary>
            Werte zum Senden der Daten werden initialisiert (z.B.: 'myTwoBuffersFull' muss auf 0 gesetzt werden).
            Diese Methode muss vor jedem Job einmal aufgerufen werden.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_DATA(System.Byte[],System.Int32,System.Int32,System.String)">
            <summary>
            Daten werden in den PIC Speicher geschrieben.
            
            HINWEIS: Diese Methode darf erst nach Methoden Aufruf SET_WRITE_DATA aufgerufen werden.
            </summary>
            <param name="aBytes">Byte array dass an den Kontroller gesendet werden (Größe ist Puffergröße also Pic32Buffer.C_StructSizeInBuffer)</param>
            <param name="aSizeBuffer">Speichergröße, als Anzahl der Structuren pro Speicher (Unterschied zwischen Microcontroller- Typen wie C_PIC32MX460F512L oder C_PIC32MX795F512L)</param>
            <param name="aNumberOfStructsInPuffer">Anzahl Structuren in diesem Byte Array (Puffer). Dieser Parameter ist nur Information, und hat keine Funktion</param>
            <param name="aDeltaSum">Im Debug Modus wird die Summe der Deltas angegeben</param>
            <returns>True, Daten an den Kontroller gesendet, false Keine Daten mehr zum senden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_END_COMMAND">
            <summary>
            Keine Daten mehr verfügbar. 
            Eine leere Struktur 'DOPISZ_DANE' mit dem Befehl 'Keine Daten mehr zum senden' wird gesendet.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.RESET_DATA">
            <summary>
            Daten- Speicher wird gelöscht
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.REFERENCE_MOVE(De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA,System.Boolean)">
            <summary>
            Referenzfahrt ausführen
            </summary>
            <param name="aJAZDA_NA_I_OD_LACZNIKA">Daten Struct</param>
            <param name="aToSwitch">True, auf den Schalter, vom Schalter ist false</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.MOVE_TO_FROM_SWITCH(De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA,System.Boolean)">
            <summary>
            Führt eine Fahrt auf Schalter und vom Schalter aus
            </summary>
            <param name="aJAZDA_NA_I_OD_LACZNIKA">Daten Struct, enthält Informationen, die benötigt werden umd ein Fahrt auf/vom Schalter auszuführen</param>
            <param name="aToSwitch">True, auf Schalter sonst vom Schalter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.CHANGE_SPEED(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Ändern der Geschwindigkeit. Die Geschwindigkeit wird in 'DOPISZ_DANE' angegeben.
            </summary>
            <param name="aDOPISZ_DANE">Daten Struct 'DOPISZ_DANE' mit der neuen Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.CONTINUE_JOB">
            <summary>
            Arbeit der Maschine wird nach M00 (Pause) fortgesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_INIT_HANDWHEEL(De.Boenigk.SMC5D.Core.INIT_HANDWHEEL)">
            <summary>
            Einstellungen des Handrades initialisieren
            </summary>
            <param name="aINIT_HANDWHEEL">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_INIT_JOYSTICK(De.Boenigk.SMC5D.Core.INIT_JOYSTICK)">
            <summary>
            Einstellungen des Joysticks initialisieren
            </summary>
            <param name="aINIT_JOYSTICK">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_INIT(De.Boenigk.SMC5D.Core.INIT)">
            <summary>
            Einstellungen der Achsen initialisieren
            </summary>
            <param name="aINIT">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_INIT2(De.Boenigk.SMC5D.Core.INIT2)">
            <summary>
            Einstellungen der Achsen initialisieren
            </summary>
            <param name="aINIT2">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.READ_INIT">
            <summary>
            Einstellungen der Achsen lesen
            </summary>
            <returns>INIT</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_INIT_REFERENCJA_WEJSCIA(De.Boenigk.SMC5D.Core.INIT_REFERENCE)">
            <summary>
            Einstellungen der Referenz und Eingänge initialisieren
            </summary>
            <param name="aINIT">Daten Struct</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.READ_INIT_REFERENCJA_WEJSCIA">
            <summary>
            Einstellungen der Referenz und Eingänge lesen
            </summary>
            <returns>INIT_REFERENCE</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.SET_RELAY(System.UInt32,System.Byte)">
            <summary>
            Schaltet oder ausschaltet ein Relay mit PWM Signal
            </summary>
            <param name="aOut">32 Bit Zahl mit Relays</param>
            <param name="aPWMOut">PWM Signal (0-255)</param>
            <param name="aNumber">PWM Nummer 0, 1 oder 2</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.SET_RELAY(System.UInt32)">
            <summary>
            Schaltet oder ausschaltet ein Relay
            </summary>
            <param name="aOut">16 Bit Zahl mit Relays</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.SET_PWM(System.Byte,System.Byte)">
            <param name="aPWMOut">PWM Signal (0-255)</param>
            <param name="aNumber">PWM Nummer 0, 1 oder 2</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.CHANGE_PWM(System.Byte)">
            <summary>
            Wechselt das Aauslesen des PWM Signals
            </summary>
            <param name="aNumber">PWM Nummer 0, 1 oder 2</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.SET_COUNTER(De.Boenigk.SMC5D.Core.INIT,De.Boenigk.SMC5D.Core.Counter)">
            <summary>
            X,Y,Z,A und B Zähler werden gesetzt
            </summary>
            <param name="aINIT"> Struct Init in der die Koordinaten stehen</param>
            <param name="aXYZABCounter">Flag für die jeweilige Achse, die gesetzt wird z.B.: X Achse soll gesetzt werden dann Counter.X</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_FLASH(System.Byte[])">
            <summary>
            Byte Array der Länge von 64 Bytes in den Flash schreiben
            </summary>
            <returns>Byte Array der Länge von 64 Bytes (letzter Byte ist für Befehl reserviert)</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.READ_FLASH">
            <summary>
            Byte Array der Länge von 64 Bytes aus Flash auslesen
            </summary>
            <returns>Byte Array der Länge von 64 Bytes(letzter Byte ist für Befehl reserviert)</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.WRITE_INIT_LASER_GRANIT(De.Boenigk.SMC5D.Core.INIT_LASER)">
            <summary>
            Laser Einstellungen initialisieren
            </summary>
            <param name="aINIT">Daten Struktur</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.READ_BACKLASH_STATUS">
            <summary>
            Liest Backlash- Status aus
            </summary>
            <returns>OdczytajDane_Backlash_Status</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.READ_INIT_LASER">
            <summary>
            Laser Einstellungen lesen
            </summary>
            <returns>INIT_LASER</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.READ_LASER_ONLINE">
            <summary>
            Laser Status während der Arbeit lesen
            </summary>
            <returns>LASER_ODCZYTAJ_DANE</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.LASEROn_Off(System.Boolean)">
            <summary>
            Wlacz lub wylacz zmiane Lasera recznie na Power2
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.IsConnected">
            <summary>
            Prüft ob die Verbindung mit PIC 32 besteht. 
            
            Dabei wird mit READ_DATA() die Struct ODCZYTAJ_DANE ausgeselen und überprüft.
            Wenn die Struct ODCZYTAJ_DANE keine Daten enthält (nur 0 Werte) dann gibt es keine Verbindung.
            </summary>
            <returns>True, Verbindung mit Pic32 verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.IsConnected(De.Boenigk.SMC5D.Core.ReadData)">
            <summary>
            Prüft ob die Verbindung mit PIC 32 besteht. Dabei wird der Inhalt der Struct ODCZYTAJ_DANE überprüft.
            Wenn die Struct ODCZYTAJ_DANE keine Daten enthält (nur 0 Werte) dann gibt es keine Verbindung.
            </summary>
            <param name="aODCZYTAJ_DANE">Daten Struct die zuvor mit READ_DATA() ausgelesen wurde</param>
            <returns>True, Verbindung mit Pic32 verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.IsConnected(De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE)">
            <summary>
            Prüft ob die Verbindung mit Pic32 besteht. Dabei wird der Inhalt der Struct 'LASER_ODCZYTAJ_DANE' überprüft.
            Wenn die Struct 'LASER_ODCZYTAJ_DANE' keine Daten enthält (nur 0 Wert) dann gibt es keine Verbindung.
            </summary>
            <param name="aLASER_ODCZYTAJ_DANE">Daten Struct (für Leser) die zuvor mit READ_DATA() ausgelesen wurde</param>
            <returns>True, Verbindung mit Pic32 verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.JEDEN_KROK">
            <summary>
            Jeden krok
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.READ_DEBUG_JOB_DATA">
            <summary>
            DEBUG MODUS für JOB. Liest ein Byte Array vom PiC32 und gibt im Pictester aus
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.CONTINUE_DEBUG_JOB">
            <summary>
            Sendet Befehl an Pic32,  dass der Job fortgesetzt werden soll. Dieser Befehl ist für Job Debug Modus.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.JustXY(De.Boenigk.SMC5D.Core.JUST_XY)">
            <summary>
            Doppelantrieb justieren
            </summary>
            <param name="aJUST_XY">Doppelantrieb Struktur</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.BLOCK_INIT_OUTPUTS_ON">
            <summary>
            Ausgänge werden blockiert, d.h. Init Befehl ändert die Ausgänge nicht.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.BLOCK_INIT_OUTPUTS_OFF">
            <summary>
            Blockierung der Ausgänge wird aufgehoben.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.SET_UPGRADE_MODE(System.Byte[])">
            <summary>
            Schlüssel um Software von Standard auf Pro zu upgrade. Nach diesem Befehl kann Firmware für Pro Version geladen werden.
            </summary>
            <param name="aKey">Schlüssel als Byte array bis 63 bytes (darf nicht die Structur übersteigen)</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.CHANGE_PUFFER_SIZE(System.UInt16)">
            <summary>
            Ändern der Buffor- Größe. Die Buffor- Größe wird in 'DOPISZ_DANE' angegeben.
            </summary>
            <param name="aSize">Größe des Buffors in struckts</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.SET_TEST_CON2">
            <summary>
            Testmodus des Kontrollers aktivieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.IPic32.SET_LCOUNTER(System.UInt32)">
            <summary>
            Setzt den Job Counter auf einen bestimmten Start- Wert
            </summary>
            <param name="aIndex">Zähler Start- Wert</param>
        </member>
        <member name="E:De.Boenigk.SMC5D.Core.IPic32.Pic32Command">
            <summary>
            Event Befehl an Pic32 gesendet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.IPic32.BufforCounter">
            <summary>
            Gibt die Anzahl der gesendeten Puffers in den Pic Speicher
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.IPic32.IsUSB">
            <summary>
            True, USB Verbindung, False LAN
            </summary>
            <returns>True, USB, False LAN</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Basics.I_Connector">
            <summary>
            Connector Interface
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Basics.I_Connector.Abort">
            <summary>
            Abbruch
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Basics.I_Connector.Status">
            <summary>
            Der Status der Maschine wird zurückgegeben
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.LaserID">
            <summary>
            Erzeuge neue ID
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.LaserID.GetNewID(System.Collections.Generic.List{De.Boenigk.SMC5D.Settings.Laser.LaserMaterial})">
            <summary>
            Sucht eine neue ID
            </summary>
            <param name="aList">Liste mit LaserPowerSettings</param>
            <returns>Neue 4'stellige ID</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.LaserID.GetLaserPowerSettings(System.Collections.Generic.List{De.Boenigk.SMC5D.Settings.Laser.LaserMaterial},System.UInt16)">
            <summary>
            Sucht 'LaserPowerSettings' in der Liste und falls gefunden gibt sie zurück.
            </summary>
            <param name="aList">Liste mit LaserPowerSettings</param>
            <param name="aID">ID, die gesucht wird</param>
            <returns>LaserPowerSettings oder null wenn nichts gefunden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.LaserID.Remove(System.Collections.Generic.List{De.Boenigk.SMC5D.Settings.Laser.LaserMaterial},System.UInt16)">
            <summary>
            Löscht alle Einträge mit der angegebenen ID
            </summary>
            <param name="aList">Liste mit LaserPowerSettings</param>
            <param name="aID">ID dass gesucht wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.LaserID.Override(System.Collections.Generic.List{De.Boenigk.SMC5D.Settings.Laser.LaserMaterial},De.Boenigk.SMC5D.Settings.Laser.LaserMaterial,System.UInt16)">
            <summary>
            Material Einstellungen werden mit angegeben ID überschrieben
            </summary>
            <param name="aList">Liste mit LaserPowerSettings</param>
            <param name="aLaserPowerSettings">Material- Einstellungen</param>
            <param name="aID">ID dass gesucht wird</param>
            <returns>True, Einstellungen mit angegebenen ID wurden überschrieben</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.ManualMoveAxis">
            <summary>
            Enthält Konstanten für Manuell Bewegen. Diese Konstante wrd in die Pic32Struct.DOPISZ_DANE eingetragen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XPlus">
            <summary>
            X Plus, gilt auch für Doppelantrieb, wenn X2 eingeschaltet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XMinus">
            <summary>
            X Minus, gilt auch für Doppelantrieb, wenn X2 eingeschaltet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.YPlus">
            <summary>
            Y Plus, gilt auch für Doppelantrieb, wenn Y2 eingeschaltet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.YMinus">
            <summary>
            Y Minus, gilt auch für Doppelantrieb, wenn X2 eingeschaltet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.ZPlus">
            <summary>
            Z Plus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.ZMinus">
            <summary>
            Z Minus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.APlus">
            <summary>
            A Plus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.AMinus">
            <summary>
            A Minus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.BPlus">
            <summary>
            B Plus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.BMinus">
            <summary>
            B Minus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XPlusYPlus">
            <summary>
            X Plus und Y Plus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XPlusYMinus">
            <summary>
            X Plus und Y Minus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XMinusYPlus">
            <summary>
            X Plus und Y Plus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XMinusYMinus">
            <summary>
            X Plus und Y Minus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XY2Plus">
            <summary>
            XY2 Plus, bewege nur X2 oder Y2 Achse (doppelantrieb)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XY2Minus">
            <summary>
            XY2 Minus, bewege nur X2 oder Y2 Achse (doppelantrieb)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XYPlus">
            <summary>
            XY Plus, bewege nur X oder Y Achse (doppelantrieb)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ManualMoveAxis.XYMinus">
            <summary>
            XY Minus, bewege nur X oder Y Achse (doppelantrieb)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.Deflector">
            <summary>
            Leitet die Achse X oder Y nach Drehachse A um. 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Deflector.myBegin">
            <summary>
            Erster Step als Default Position einer Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Deflector.mySMCSettings">
            <summary>
            SMC5D Einstellungen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Deflector.#ctor(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Standard Konstruktor
            </summary>
            <param name="aBegin">Erster Step als Default Position einer Achse</param>
            <param name="aSettings">SMC5D Einstellungen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Deflector.GetXtoA(System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step})">
            <summary>
            X Achse wird nach A umgeleitet
            </summary>
            <param name="aStepList">List mit Step Objekten</param>
            <returns>Neue List mit veränderten Step- Objekten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Deflector.GetXtoA(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            X Achse wird nach A umgeleitet
            </summary>
            <param name="aStep">Step Objekt</param>
            <returns>Neuer Step</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Deflector.GetYtoA(System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step})">
            <summary>
            Y Achse wird nach A umgeleitet
            </summary>
            <param name="aStepList">List mit Step Objekten</param>
            <returns>Neue List mit veränderten Step- Objekten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Deflector.GetYtoA(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Y Achse wird nach A umgeleitet
            </summary>
            <param name="aStep">Step Objekt</param>
            <returns>Neuer Step</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DStruct">
            <summary>
            Struktur mit Delta Werten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.Nr">
            <summary>
            Nummerierung, nur zur Analyse!
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.DeltaX">
            <summary>
            Delta X
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.DeltaY">
            <summary>
            Delta Y
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.DeltaZ">
            <summary>
            Delta Z
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.DeltaA">
            <summary>
            Delta A
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.DeltaB">
            <summary>
            Delta B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.MaxSpeed">
            <summary>
            Geschwindigkeit in Schritten pro Sekunde
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.StartSpeed">
            <summary>
            EndStartgeschwindigkeit in Schritten pro Sekunde
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.Output">
            <summary>
            Ausgänge schalten oder ausschalten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.PWM">
            <summary>
            PWM- Signal (z.B. Spindeldrehzahl)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.Wait">
            <summary>
            Wartezeit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.Down">
            <summary>
            True, Fräsvorgang läuft, false Maschine fährt im Eilgang
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.LineIndex">
            <summary>
            Index des Vektors (für die Fortschritt- Anzeige und Pause).
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.Time">
            <summary>
            Gibt die aktuelle Arbeitszeit in Sekunden 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.Step">
            <summary>
            Der dazugehörige Step- Object
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.Alpha">
            <summary>
            Alpha zwischen den Vektoren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.Radius">
            <summary>
            Radius
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.dane_Status">
            <summary>
            Einstellungen setzen
            64 - reduce flip aktivieren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DStruct.ReduceFlip">
            <summary>
            Anzahl Steps dass nicht beschleunigt werden sollen (reduziert wackeln der Maschine)
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DStruct.IsDeltaZero">
            <summary>
            True, alle Delta Werte sind 0 (keine Fahrt!)
            </summary>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DStruct.GetCopy">
            <summary>
            Eine Kopier der DStruct wird zurückgegeben 
            </summary>
            <returns>DStruct Kopie</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DStruct.IsDeltaValue">
            <summary>
            Prüft ob irgendeine Delta Werte hat. Wenn ja dann wird True zurückgegeben.
            </summary>
            <returns>True, Delta hat Werte</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DStruct.GetTitle">
            <summary>
            DStruct Titel string ausgeben
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DStruct.ToString">
            <summary>
            DStruct als String ausgeben
            </summary>
            <returns>string</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.LargestDelta">
            <summary>
            Sucht die größte Delta
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.LargestDelta.GetLargestDelta(De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Sucht die größte Delta und gibt sie zurück. Außerdem wird boolean in der Eigenschaft 'Axis' für diese Delta auf true gesetzt.
            </summary>
            <param name="aDStruct">DStruct</param>
            <returns>Wert der größten Delta</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.LargestDelta.Axis">
            <summary>
            Gibt die Achse zurück, die die größte Delta hat
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.Puffer">
            <summary>
            Puffer, hat die Aufgabe Daten für den Pic Controller zu generieren. Die Daten werden in mehreren Schritten generiert.
            
            1. Die Quelle ist eine generische Liste mit 'Step' Strukturen.
            
            2. Im Schritt 1 wird eine Liste mit Delta Objekten 'DStruct' erzeugt.
            
            3. Schritt 2 bearbeitet die DStruct Liste. Es werden neue Start- und End- Geschwindigkeit abhängig vom Winkel 
               und Radius berechnet und den bestehenden 'DStruct' Objekten hinzugefügt. Für die Berechnung der Geschwindigkeiten
               wird der Winkel und der Radius benötigt (Klasse AngleBetweenVectors).
               
            4. Schritt 3 ist der Schwierigste. Hier werden die Geschwindigkeiten Beschleunigungsweg und Abbremsweg ermittelt 
               und die DStruct in 2 teile geteilt (eine DStruct mit Beschleunigungsweg und eine Abbremsweg DStruct).
               
            5. Rechnet die Arbeitszeit aus.
            
            6. Abschließend erzeugt Schritt 4 eine Liste mit 'DOPISZ_DANE' für den Controller Pic32.
            
            </summary>
            <summary>
            Ermittelt die Arbeitszeit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.mySettings">
            <summary>
            Einstellungen des Controllers
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.mySteps">
            <summary>
            Liste mit Step Objekten (Quelle)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myConnector">
            <summary>
            USB Verbindung- Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myReader">
            <summary>
            Datei Lesen mit Step Objekten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myStartStopSpeed">
            <summary>
            Rechnet StartStop Geschwindigkeit aus 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myPufferStepsData">
            <summary>
            Verwaltet Step Daten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myStep1Data">
            <summary>
            Verwalter globale Variable für Step 1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myStep2Data">
            <summary>
            Verwalter globale Variable für Step 1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myStep4Data">
            <summary>
            Verwalter globale Variable für Step 4
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myAngleBetweenVectors">
            <summary>
            Rechnet Alpha und Radius zwischen DeltaXYZAB aus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myDeltaSpeed">
            <summary>
            Rechnet die neue Geschwindigkeit aus (benötigt Alpha und Radius vom AngleBetweenVectors)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myLargestDelta">
            <summary>
            Sucht die größte Delta aus der angegebenen DStruct
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myDeltaMaxSpeed">
            <summary>
            Maximale Geschwindigkeit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myDeltaAccelerationBrakeSimple">
            <summary>
            Ermittelt Beschleunigung und Bremsweg
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myPic32Buffer">
            <summary>
            Generiert Byte[] Array für den Pic
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myDeltaPicStruct">
            <summary>
            Konvertiert Long DeltaX, DeltaY, DeltaZ, DeltaA, DeltaB aus DStruct nach DOPISZ_DANE Struktur
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myNext">
            <summary>
            Definiert ob Ende erreicht, True ist weitere Daten, false ist Ende
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myDeflector">
            <summary>
            Leitet für die Achse nach Drehachse um
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myBacklash">
            <summary>
            Backslash
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myVacuumCreator">
            <summary>
            Vacuum- Tisch- Steierung
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myTestStepsFile">
            <summary>
            Testdatei steps.txt mit Pfad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myTestStep1File">
            <summary>
            Testdatei step1.txt mit Pfad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myTestStep2File">
            <summary>
            Testdatei step2.txt mit Pfad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myTestStep3File">
            <summary>
            Testdatei step3.txt mit Pfad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myTestStep4File">
            <summary>
            Testdatei step4.txt mit Pfad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myCacheSize">
            <summary>
            Gibt die Größe des Caches
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myStep1LogFile">
            <summary>
            Step1 Logdatei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myStep2LogFile">
            <summary>
            Step2 Logdatei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myStep3LogFile">
            <summary>
            Step3 Logdatei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myStep4LogFile">
            <summary>
            Step4 Logdatei
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.#ctor(De.Boenigk.SMC5D.Basics.Connector,De.Boenigk.SMC5D.Core.StartBacklash)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">USB Verbindung- Objekt</param>
            <param name="aStartBacklash">Enthält Umkehrspiel- Startwerte. Wenn keine Verfügbar, dann kann auch null angegeben werden</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.SetList(System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step},System.Int32)">
            <summary>
            Liste mit Step Objekten, die abgefahren werden sollen
            </summary>
            <param name="aList">Liste mit Step Objekten</param>
            <param name="aTxx">Werkzeugnummer der angegeben Daten. Die Werkzeugnummer wird für "Tangentialmesser für eine Werkzeugnummer" verwendet. 
            Wenn keine "Tangentialmesser- Funktion für ein Werkzeugnummer" aktiv ist, dann wird dieser Parameter ignoriert.</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.SetList(System.String,System.Int32)">
            <summary>
            Liste mit Step Objekten, die abgefahren werden sollen
            </summary>
            <param name="aFile">Datei mit Pfad dass Step Objekte enthält (Datei erzeugt mit StepWriter)</param>
            <param name="aTxx">Werkzeugnummer der angegeben Daten. Die Werkzeugnummer wird für "Tangentialmesser für eine Werkzeugnummer" verwendet. 
            Wenn keine "Tangentialmesser- Funktion für ein Werkzeugnummer" aktiv ist, dann wird dieser Parameter ignoriert.</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.Deflector(System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step})">
            <summary>
            Tauscht die Achsen
            </summary>
            <param name="aStepList">ArrayList mit Step Objekten</param>
            <returns>ArrayList mit getauschten Step Objekten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.Deflector(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Tauscht die Achsen
            </summary>
            <param name="aStep">Step Objekt</param>
            <returns>ArrayList mit getauschten Step Objekten</returns>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Puffer.myLineIndex">
            <summary>
            Index des letzten Vektors
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.GetCurrentWorkData">
            <summary>
            Gibt die aktuellen Objekt dass abgearbeitet wird
            </summary>
            <returns>Arbeitszeit in Sekunden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.ClearData">
            <summary>
            Puffer wird geschlossen, Daten gelöscht und Dateien geschlossen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.Charge">
            <summary>
            Daten für SMC5D Job/Simulation generieren
            </summary>
            <returns>True, Daten generiert</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.GetPufferData">
            <summary>
            Erzeugt Byte Array, volle Speicher- Länge oder wenn Ende dann null.
            </summary>
            <returns>Byte Array, volle Speicher- Länge oder wenn Ende dann null.</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.GetSimPufferData">
            <summary>
            Gibt die Liste mit P32OutputData Objekten oder wenn Ende dann null. Diese Methode wird für die Simulation verwendet.
            </summary>
            <returns>Byte Array, volle Speicher- Länge oder wenn Ende dann null.</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.ResetSimPufferData">
            <summary>
            DeltaPic Liste wird gelöscht
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.GetCurrentWorkSimData(System.Int32)">
            <summary>
            Gibt die aktuellen Objekt dass abgearbeitet wird (nur Simulation)
            </summary>
            <param name="aLWert">Aktuelle Position (Vektornummer)</param>
            <returns>Arbeitszeit in Sekunden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.ChargeFromList">
            <summary>
            Daten für SMC5D Job/Simulation generieren
            </summary>
            <returns>True, Daten generiert</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.SetCacheSize(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Setzt die Größe des Caches ein
            </summary>
            <param name="aConnector">Connector</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.ChargeFromFile">
            <summary>
            Daten für SMC5D Job/Simulation generieren
            </summary>
            <returns>True, Daten generiert</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.CreateTestDataDir">
            <summary>
            Erzeugt Test- Daten Verzeichnis
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.Init">
            <summary>
            Objekte werden angelegt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.ClearDeltaList">
            <summary>
            Delta List für die Berechnung der wird verkleinert.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.CreateDeltaList">
            <summary>
            Erzeugt eine Liste mit Delta Objekten und speichert sie im 'myPufferStep1Data'. Die Step Objekte werden aus der Liste genommen.
            </summary>
            <returns>True, Dateiende nicht erreicht, weitere Daten werden folgen, False Ende keine weiteren Step Objekte mehr</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.CreateDeltaList(System.Int32)">
            <summary>
            Erzeugt eine Liste mit Delta Objekten und speichert sie im 'myPufferStep1Data'. Die Step Objekte werden aus Datei genommen.
            </summary>
            <param name="aSteps">Anzahl Steps, die auf einmal nach DStruct umgewandelt werden sollten</param>
            <returns>True, Dateiende nicht erreicht, weitere Daten werden folgen, False Ende keine weiteren Step Objekte mehr</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.CreateDStruct(De.Boenigk.SMC5D.Move.Step,System.Int32)">
            <summary>
            Ein Step Objekt wird abgearbeitet
            </summary>
            <param name="aStep">Step Objekt</param>
            <param name="aIndex">Aktueller Index</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.CreateCoordinate(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Koordinaten werden nach Schritte umgerechnet
            </summary>
            <param name="aStep">Step</param>
            <returns>Neuer Step wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.CreateSpeedList(System.Boolean)">
            <summary>
            Neue Geschwindigkeit wird abhängig vom Winkel und Radius berechnet.
            </summary>
            <param name="aLast">True, die letzten Daten, Ende erreicht</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.SmoothList(System.Int32)">
            <summary>
            Schaltet die Beschleunigung auf sehr kurzen Strecken ab (bis 2mm)
            </summary>
            <param name="aStartIndex">Startindex</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.GetNexttDelta(System.Int32)">
            <summary>
            Sucht eine Delta, die eine Strecke hat. Die Methode CalculateAlphaAndRadius kann nicht mit Delta 0 rechnen
            </summary>
            <param name="aStartIndex">StartIndex, ab da wird rückwärts berechnet</param>
            <returns>Delta mit Werten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.CreateAccelerationBrake(System.Boolean)">
            <summary>
            Deltas an EndGeschwinidgkeiten, Winkel und Radius anpassen
            </summary>
            <param name="aLastData">Liste komplette, keine weiteren Daten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.Acceleration(System.Collections.Generic.List{De.Boenigk.SMC5D.Core.Mill.DStruct},System.Int32,System.UInt32)">
            <summary>
            Fügt die Beschleunigung hinzu.
            </summary>
            <param name="aDStructList">Liste mit DStruct Objekten</param>
            <param name="aIndex">Aktueller Index</param>
            <param name="aStartSpeed">Aktuelle Start Geschwindigkeit</param>
            <returns>Gibt den neuen aktuellen Index</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.Brake(System.Collections.Generic.List{De.Boenigk.SMC5D.Core.Mill.DStruct},System.Int32)">
            <summary>
            Fügt die Bremsen hinzu.
            </summary>
            <param name="aDStructList">Liste mit DStruct Objekten</param>
            <param name="aIndex">Aktueller Index</param>
            <returns>Gibt den neuen aktuellen Index</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.InitSetTime">
            <summary>
            Time Ermittlung wird generiert
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.CalcTime(De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Deltas an EndGeschwinidgkeiten, Winkel und Radius anpassen
            </summary>
            <param name="aDStruct">DStruct deren Zeit addiert wird</param>
            <returns>DStruct mit Zeit</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Puffer.CreateDeltaPicList(System.Boolean,System.Int32)">
            <summary>
            Erzeugt eine Liste mit DOPISZ_DANE Objekten
            </summary>
            <param name="aLast">True, die letzten Daten, Ende erreicht</param>
            <param name="aCount">Anzahl der Elemente, die erzeugt werden sollen</param>
            <returns>Anzahl Strukturen</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Puffer.UseDeflectorA">
            <summary>
            Drehachse nach A Achse umleiten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Puffer.LastLineIndex">
            <summary>
            Gibt die Anzahl der Step Objekte in der Liste (Datei oder Speicher)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Puffer.NumberOfStructsInPuffer">
            <summary>
            Anzahl der Strukturen, die nach Byte- Array konvertiert wurden.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Puffer.DeltaSum">
            <summary>
            Die Summe der Deltas wird zurückgegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Puffer.NextCreatedStep">
            <summary>
            Letzter erzeugter Step Objekt oder null
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Puffer.TotalWorkTime">
            <summary>
            Gesamte Arbeitszeit in Sekunden. Diese Arbeitszeit bezieht sich auf Daten, die bisher berechnet wurden. Weitere Daten, die noch nicht berechnet wurden, werden nicht berücksichtigt!
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Puffer.MaxSpeed">
            <summary>
            Gibt die maximale Geschwindigkeit in Schritten pro Sekunde zurück
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data">
            <summary>
            Enthält globale Parameter für Puffer.Step1 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor 
            </summary>
            <param name="aSettings">Kontroller Einstellungen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.Init(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Daten werden initialisiert (nur beim Start am Anfang).
            </summary>
            <param name="aConnector">Connector Verbindung- Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.GetFirstStep(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Generiert den ersten Step. Erster Step enthält aktuelle Position der Maschine
            </summary>
            <returns>Step</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.SetNewStep1(De.Boenigk.SMC5D.Basics.Connector,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Setzt neue Step Koordinaten als Start Position
            </summary>
            <param name="aConnector">aConnector</param>
            <param name="aStepMM">Neue </param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.DeltaList">
            <summary>
            Delta List
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.Step1">
            <summary>
            Step1
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.Step2">
            <summary>
            Step2
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.DeltaListFileIndex">
            <summary>
            Index aus der Datei
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.Delta">
            <summary>
            Zugriff auf Delta
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep1Data.Speed">
            <summary>
            Zugriff auf Speed
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferStep2Data.Init">
            <summary>
            Daten werden initialisiert (nur beim Start am Anfang).
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep2Data.DeltaListIndex">
            <summary>
            Aktueller Index (Position) in der DeltaList
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.PufferStep3Data">
            <summary>
            Verwaltet Daten um die Daten temporär zum Fräsen zu generieren 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferStep3Data.Init(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Daten werden initialisert (nur beim Start am Anfang).
            </summary>
            <param name="aConnector">Connector Verbindung- Objekt</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep3Data.InsertAccelerationBrakeIndex">
            <summary>
            Aktuelle Position beim Setzen der Beschleunigung und Bremsen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep3Data.StartSpeed">
            <summary>
            Start Geschwindigkeit, Variable, wird für die Zeitermittlung benötigt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferStep4Data.Init">
            <summary>
            Daten werden initialisiert
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep4Data.DeltaPicListIndex">
            <summary>
            Aktuelle Position (Step4)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferStep4Data.StartSpeedSet">
            <summary>
            Setzt Startgeschwindigkeit in der ersten Struktur
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.ResetSum">
            <summary>
            Summe löschen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.AddSum(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Summe wird geprüft
            </summary>
            <param name="aDOPISZ_DANE">aDOPISZ_DANE</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.DeltaSum">
            <summary>
            Aktuelle Summe wird als String zurückgegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.WriteToConsoleInterval">
            <summary>
            Schreibe Interval wird zurückgegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.DeltaSumX">
            <summary>
            DeltaX Summe
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.DeltaSumY">
            <summary>
            Delta Y Summe
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.DeltaSumZ">
            <summary>
            Delta Z Summe
            </summary>       
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.DeltaSumA">
            <summary>
            Delta A Summe
            </summary>       
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PufferSumTester.DeltaSumB">
            <summary>
            Delta B Summe
            </summary>       
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.StartStopSpeed.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">Alle Einstellungen des Controllers</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.StartStopSpeed.GetBegin(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Gibt die Start-Stopp Geschwindigkeit in Schritten pro Sekunde für angegebene DOPISZ_DANE zurück. 
            Dabei wird die kleinste Geschwindigkeit gesucht.
            
            Hinweis! Diese Methode nur für den Start verwenden
            
            </summary>
            <param name="aDopiszDane">DOPISZ_DANE für die Start/Stopp ermittelt wird</param>
            <returns>Start-Stopp Geschwindigkeit in Schritten pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.StartStopSpeed.Get(De.Boenigk.SMC5D.Core.Mill.DStruct,De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Gibt die Start-Stopp Geschwindigkeit in Schritten pro Sekunde für angegebene DStruct zurück. 
            Dabei wird die kleinste Geschwindigkeit gesucht.
            </summary>
            <param name="aDstruct">Delta für die Start/Stopp ermittelt wird</param>
            <param name="aNextDStruct">Nächste Delta für die Start/Stopp ermittelt wird</param>
            <returns>Start-Stopp Geschwindigkeit in Schritten pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.StartStopSpeed.Get">
            <summary>
            Gibt die Start-Stopp Geschwindigkeit in Schritten pro Sekunde für alle aktiven Achsen zurück. Dabei wird die kleinste Geschwindigkeit gesucht
            </summary>
            <returns>Start-Stopp Geschwindigkeit in Schritten pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.StartStopSpeed.GetStartStoppSpeed(System.Collections.Generic.List{De.Boenigk.SMC5D.Basics.SMCAxisType})">
            <summary>
            Ermittelt die Start/Stopp Geschwindigkeit für die angegebene Achsen
            </summary>
            <param name="aAxes">Liste mit Achsen</param>
            <returns>Start/Stopp Geschwindigkeit in Schritten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.StartStopSpeed.GetAxisResolution(De.Boenigk.SMC5D.Basics.SMCAxisType)">
            <summary>
            Gibt die Achsenauflösung der Achse zurück
            </summary>
            <param name="aSMCAxisType">SMCAxisType</param>
            <returns>Achsenauflösung</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.StartStopSpeed.GetStartStop(De.Boenigk.SMC5D.Basics.SMCAxisType)">
            <summary>
            Gibt StartStop- Geschwindigkeit der Achse zurück
            </summary>
            <param name="aSMCAxisType">SMCAxisType</param>
            <returns>StartStop- Geschwindigkeit</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.ByteArray">
            <summary>
            Variablen werden nach Byte Array Konvertiert
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.Set(System.Int32,System.Single,System.Byte[])">
            <summary>
            Float wird nach Byte Array konvertiert 
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aValue">Float Wert</param>
            <param name="aBytes">Byte Array in den kopiert wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.Set(System.Int32,System.Double,System.Byte[])">
            <summary>
            Double wird nach Byte Array konvertiert 
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aValue">Float Wert</param>
            <param name="aBytes">Byte Array in den kopiert wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.Set(System.Int32,System.Int32,System.Byte[])">
            <summary>
            Int wird nach Byte Array konvertiert
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aValue">Int Wert</param>
            <param name="aBytes">Byte Array in den kopiert wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.Set(System.Int32,System.UInt32,System.Byte[])">
            <summary>
            UInt wird nach Byte Array konvertiert
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aValue">UInt Wert</param>
            <param name="aBytes">Byte Array in den kopiert wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.Set(System.Int32,System.Boolean,System.Byte[])">
            <summary>
            Boolean wird nach Byte Array konvertiert
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aValue">Float Wert</param>
            <param name="aBytes">Byte Array in den kopiert wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.Set(System.Int32,System.String,System.Byte[])">
            <summary>
            String wird nach Byte Array konvertiert
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aValue">Float Wert</param>
            <param name="aBytes">Byte Array in den kopiert wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.Set(System.Int32,System.String,System.Byte[],System.Int32)">
            <summary>
            String wird nach Byte Array konvertiert
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aValue">Float Wert</param>
            <param name="aBytes">Byte Array in den kopiert wird</param>
            <param name="aLength">Anzahl der Bytes, die gefüllt werden</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.StringToByteArray(System.String)">
            <summary>
            String nach Byte Array konvertieren
            </summary>
            <param name="aStr">String dass konvertiert wird</param>
            <returns>byte array</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.ByteArrayToString(System.Byte[])">
            <summary>
            Byte array nach string konvertieren
            </summary>
            <param name="aArray">Byte array nach string konvertieren</param>
            <returns>string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.Set(System.Int32,System.Byte[],System.Byte[])">
            <summary>
            Array wird nach Byte Array kopiert
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aOutBytes">Byte Array, dass in aInBytes kopiert wird</param>
            <param name="aInBytes">Byte Array in den geschrieben wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.ByteArray.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Ein String wird aus einer Byte Array erzeugt.
            </summary>
            <param name="aBytes">Byte Array</param>
            <param name="aStartIndex">Startindex</param>
            <param name="aLength">Länge</param>
            <returns>Gibt den erzeugten string</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.C_VarLength">
            <summary>
            Enthält Konstant- Längen der Variablen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.C_VarLength.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.Delta">
            <summary>
            Delta(Strecke) X,Y,Z,A
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Delta.myDStruct">
            <summary>
            Daten. Struktur
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Delta.myTangentialDelta">
            <summary>
            Delta Anpassung für Tangential
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Delta.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">Einstellungen des Kontrollers</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Delta.CreateDelta(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Delta XYZA wird berechnet und das Ergebnis in der Eigenschaft 'DStruct' gespeichert
            </summary>
            <param name="aLast">letzter Step</param>
            <param name="aNew">neuer Step</param>
            <returns>True, Neue Delta Werte, false alle Delta Werte sind 0</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Delta.DStruct">
            <summary>
            Struktur mit Delta Objekten
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.PointD5D">
            <summary>
            4D Punkt für double- Zahlen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PointD5D.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PointD5D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Konstruktor mit Angabe der X,Y,Z,A,B Koordinate
            </summary>
            <param name="aX">Zahl X</param>
            <param name="aY">Zahl Y</param>
            <param name="aZ">Zahl Z</param>
            <param name="aA">Zahl A</param>
            <param name="aB">Zahl B</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.PointD5D.Clone">
            <summary>
            Objekt flach klonnen
            </summary>
            <returns>Eine flache Kopie dieses Objektes</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PointD5D.X">
            <summary>
            Koordinate X
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PointD5D.Y">
            <summary>
            Koordinate Y
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PointD5D.Z">
            <summary>
            Koordinate Z
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PointD5D.A">
            <summary>
            Koordinate A
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.PointD5D.B">
            <summary>
            Koordinate B
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectors">
            <summary>
            Rechnet Alpha und Radius zwischen DeltaXYZAB aus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectors.myRadiusCalc">
            <summary>
            Rechnet Radius und Winkel aus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectors.myFirstStep">
            <summary>
            Erster Punkt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectors.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">SMC5D Einstellungen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectors.CalculateAlphaAndRadius(De.Boenigk.SMC5D.Core.Mill.DStruct,De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
             Rechnet Winkel und Radius zwischen DeltaXYZAB aus
            </summary>
            <param name="aOldDStruct">Erste Struktur DOPISZ_DANE</param>
            <param name="aDStruct">Zweite Struktur DOPISZ_DANE</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectors.Radius">
            <summary>
            Radius zwischen Vektoren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectors.Alpha">
            <summary>
            Alpha zwischen den Vektoren
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DeltaSpeed">
            <summary>
            Rechnet neue Geschwindigkeit mit Hilfe Alpha und Radius (Klasse AngleBetweenVectors) aus 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaSpeed.mySettings">
            <summary>
            Alle Einstellungen des Controllers
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaSpeed.myStartStopSpeed">
            <summary>
            Start-Stop Geschwindigkeit
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaSpeed.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">Alle Einstellungen des Controllers</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaSpeed.GetSpeed(De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectors,De.Boenigk.SMC5D.Core.Mill.DStruct,De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Rechnet neu Geschwindigkeit aus
            </summary>
            <param name="aAngleBetweenVectors">Winker und Radius</param>
            <param name="aDelta">Delta für die die Geschwindigkeit berechnet wird</param>
            <param name="aNextDelta">Nächste Delta für die die Geschwindigkeit berechnet wird</param>
            <returns>Neue angepasste Geschwindigkeit in Schritte pro Sekunde abgängig vom Radius und Alpha</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.RadiusCalc">
            <summary>
            Berechnet Radius und Winkel
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.RadiusCalc.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">SMC5d Einstellungen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.RadiusCalc.Create(De.Boenigk.SMC5D.Core.Mill.DStruct,De.Boenigk.SMC5D.Core.Mill.DStruct,De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Berechnet Radius aus 3 Punkten bzw. aus 2 Vekoren
            </summary>
            <param name="a1">Punkt 1</param>
            <param name="a2">Punkt 2</param>
            <param name="a3">Punkt 2</param>
            <returns>Berechneter Radius</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.RadiusCalc.CreateDelta(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Delta wird berechnet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.RadiusCalc.CreateParam">
            <summary>
            Param wird berechnet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.RadiusCalc.CreateK(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            K wird berechnet
            </summary>
            <returns>K</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.RadiusCalc.Radius">
            <summary>
            Radius zwischen 3 Punkten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.RadiusCalc.Alpha">
            <summary>
            Alpha zwischen 3 Punkten
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.AccelerationBrakeWay">
            <summary>
            Rechnet Beschleunigung und Bremsweg in Schritten aus.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.AccelerationBrakeWay.GetBrakeWay(De.Boenigk.SMC5D.Core.INIT,System.UInt32,System.UInt32)">
            <summary>
            Rechnet Bremsweg aus
            </summary>
            <param name="aInit">INIT Struktur</param>
            <param name="aActuallySpeed">Aktuelle Geschwindigkeit</param>
            <param name="aStopSpeed">Start-Stopp Geschwindigkeit</param>
            <returns>Bremsweg in Schritten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.AccelerationBrakeWay.GetAccelerationBrakeWay(De.Boenigk.SMC5D.Core.INIT,De.Boenigk.SMC5D.Core.Mill.DStruct,System.Int64)">
            <summary>
            Rechnet Beschleunigungsweg oder Bremsweg aus
            </summary>
            <param name="aInit">INIT Struktur</param>
            <param name="aDStruct">DStruct</param>
            <param name="aLargestDelta">Größte Delta innerhalb der Struktur als Absoluter Wert</param>
            <returns>Beschleunigungsweg oder Bremsweg in Schritten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.AccelerationBrakeWay.GetAccelerationBrakeWay(De.Boenigk.SMC5D.Core.INIT,System.UInt32,System.UInt32,System.Int64)">
            <summary>
            Rechnet Beschleunigungsweg oder Bremsweg aus für die angegebene Delta
            </summary>
            <param name="aInit">INIT Struktur</param>
            <param name="aStartSpeed">Start- Geschwindigkeit</param>
            <param name="aMaxSpeed">Maximale Geschwindigkeit</param>
            <param name="aLargestDelta">Größte Delta innerhalb der Struktur als Absoluter Wert</param>
            <returns>Beschleunigungsweg oder Bremsweg in Schritten</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple">
            <summary>
            Diese Klasse zerlegt eine 'DStruct' Delta in 2 'DStruct' Deltas 
            (nur wenn Beschleunigungsweg und Abbremsweg innerhalb der angegeben Delta möglich ist, FALL I, II).
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.C_SpeedConstValue">
            <summary>
            Geschwindigkeit Konstante
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.mySettings">
            <summary>
            Controller Einstellungen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.myAccelerationBrakeWay">
            <summary>
            Rechnet Beschleunigung und Bremsweg in Schritten aus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.myLargestDelta">
            <summary>
            Findet die Größte Delta aus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.myDeltaMerger">
            <summary>
            Fügt Deltas zusammen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.myDeltaMaxSpeed">
            <summary>
            Rechnet maximale Geschwindigkeit für Delta
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.myMergeStruct">
            <summary>
            MergeStruct 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.myReduceJerkingStepValue">
            <summary>
            Reduziert wackeln der Maschine umgerechnet nach Steps
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">Controller Einstellungen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.CanMerge(De.Boenigk.SMC5D.Core.Mill.DStruct,System.UInt32,System.Boolean)">
            <summary>
            Prüft ob die Beschleunigungsweg und Abbremsweg in Schritten für angegebene Delta möglich sind.
            </summary>
            <param name="aDStruct">DStruct Objekt</param>
            <param name="aStartSpeed">Startgeschwindigkeit</param>
            <param name="aAcceleration">True ist Beschleunigung, False ist Bremsweg</param>
            <returns>True, DStruct wurde in zwei zerlegt Beschleunigung und Abbremsen, False keine Änderung an DStruct, Beschleunigung zu lang</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.GetMergeData(De.Boenigk.SMC5D.Core.Mill.DStruct,System.UInt32,System.Boolean)">
            <summary>
            Sucht den Beschleunigungsweg und Abbremsweg in Schritten für angegebene Delta. Wenn möglich, 
            dann wird DeltaPart mit den Informationen die zum Teilen einer DStruct benötigt zurückgegeben.
            
            Wenn nicht möglich, dann wird null zurückgegeben.
            </summary>
            <param name="aDStruct">Struktur 'DStruct' dass zerlegt werden soll</param>
            <param name="aStartSpeed">Startgeschwindigkeit</param>
            <param name="aAcceleration">True ist Beschleunigung, false ist Bremsweg</param>
            <returns>DeltaPart enthält Daten, die zum Teilen einer DStruct in 2 (Beschleunigung und Abbremsen) benötigt werden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.CreateForSpeedInVector(De.Boenigk.SMC5D.Core.Mill.DStruct,System.UInt32)">
            <summary>
            Fall, Beschleunigung passt im Vektor
            </summary>
            <param name="aDStruct">Aktuelle Struktur 'DStruct'</param>
            <param name="aStartSpeed">Startgeschwindigkeit</param>
            <returns>Struktur 'PartDelta' mit neuen Werten (Beschleunigungsweg, Bremsweg, Geschwindigkeit)</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.Merge(System.Collections.Generic.List{De.Boenigk.SMC5D.Core.Mill.DStruct},System.Int32,System.UInt32,System.Boolean)">
            <summary>
            Sucht den Beschleunigungsweg und Abbremsweg in Schritten für angegebene Delta. Wenn das möglich (Rückgabe true) ist (Methode CanMerge), 
            dann wird die 'DStruct' Delta in 2 'DStruct' Deltas zerlegt (Beschleunigung DStruct und Bremsen DStruct) und in die DStruct Liste geschrieben.
            Die alte 'DStruct' Delta wird überschrieben.
            </summary>
            <param name="aDStructList">Liste mit DStruct Objekten</param>
            <param name="aIndex">Index der Struktur 'DStruct'</param>
            <param name="aStartSpeed">Startgeschwindigkeit</param>
            <param name="aAcceleration">True ist Beschleunigung, false ist Bremsweg</param>
            <returns>Anzahl der DStructs dass hinzugefügt worden sind. 0- keine Aufteilung (Beschleunigung zu lang) 1- kein Abbremsen nötig (eine DStruct hat leere Deltas), 2 - In Beschleunigung und Abbremsen aufgeteilt</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.MergeStruct">
            <summary>
            Intern berechnete Werte
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.MergeStruct.LargestDelta">
            <summary>
            Größte Delta
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.MergeStruct.AWay">
            <summary>
            Beschleunigungweg
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple.MergeStruct.BWay">
            <summary>
            Bremsweg
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DeltaMaxSpeed">
            <summary>
            Rechnet die maximale mögliche Beschleunigung für die angegebene Delta (meistens die größte Delta in der DStruct) aus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaMaxSpeed.mySettings">
            <summary>
            Controller Einstellungen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaMaxSpeed.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">Controller Einstellungen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaMaxSpeed.Get(System.Int64,System.UInt32)">
            <summary>
            Rechnet maximale Geschwindigkeit in Schritten pro Sekunde für Delta aus
            </summary>
            <param name="aDelta">Größte Delta der 'DStruct' (berechnet zuvor)</param>
            <param name="aEndStartSpeed">Start- Geschwindigkeit ab der beschleunigt wird</param>
            <returns>Geschwindigkeit in Schritten pro Sekunde</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DeltaMerger">
            <summary>
            Erzeugt aus einer DStruct 2 Dstructs (Beschleunigen und abbremsen) und überschreibt sie.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaMerger.myLargestDelta">
            <summary>
            Sucht die größte Delta
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaMerger.myToStructList">
            <summary>
            Die Structs, die hinzugefügt werden müssen (Beschleunigung oder Bremsweg)
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaMerger.Merge(System.Collections.Generic.List{De.Boenigk.SMC5D.Core.Mill.DStruct},System.Int32,De.Boenigk.SMC5D.Core.Mill.DeltaPart)">
            <summary>
            Erzeugt aus einer DStruct 2 DStructs (Beschleunigen und Abbremsen) und überschreibt sie.
            </summary>
            <param name="aDStructList">Liste mit DStruct Objekten</param>
            <param name="aIndex">Index der DStruct dass in zwei zerlegt wird</param>
            <param name="aDeltaPart">Enthält Informationen, die für die Zerlegung benötigt werden</param>
            <returns>Anzahl der DStructs dass hinzugefügt worden sind</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaMerger.ClearDStructWithZeroDelta(System.Collections.Generic.List{De.Boenigk.SMC5D.Core.Mill.DStruct})">
            <summary>
            Löscht leere Deltas
            </summary>
            <param name="aList">Liste mit 2 DStructs (Beschleunigen und bremsen)</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaMerger.GetTwoDStructs(De.Boenigk.SMC5D.Core.Mill.DStruct,De.Boenigk.SMC5D.Core.Mill.DeltaPart)">
            <summary>
            Erzeugt aus einer DStruct 2 Dstructs (Beschleunigen und abbremsen) und gibt sie als Liste zurück.
            </summary>
            <param name="aDstruct">DStruct, dass in Beschleunigen und Abbremsen zerlegt wird</param>
            <param name="aDeltaPart">Enthält Informationen, die für die Zerlegung benötigt werden</param>
            <returns>Liste mit 2 Dstruct Objekten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaMerger.CreateFactor(De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Rechnet den Faktor aus.
            </summary>
            <param name="aDStruct">DStruct</param>
            <returns>Factor</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaMerger.CreateTwoDStructs(De.Boenigk.SMC5D.Core.Mill.DStruct,De.Boenigk.SMC5D.Core.Mill.DeltaPart,De.Boenigk.SMC5D.Core.Mill.DeltaMerger.Factor)">
            <summary>
            Erzeugt 2 DStruct (Beschleunigung und Abbremsen) 
            </summary>
            <param name="aDStruct">DStruct dass in zwei geteilt wird</param>
            <param name="aDeltaPart">DeltaPart, </param>
            <param name="aFactor">Faktor</param>
            <returns>Gibt 2 DStructs zurück</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DeltaMerger.Factor">
            <summary>
            Struct 'Faktor'
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DeltaPart">
            <summary>
            DeltaPart enthält Informationen, die zum Teilen einer DStruct in 2 DStructs (Beschleunigung und Abbremsen) benötigt werden
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaPart.Brake">
            <summary>
            Bremsweg in Schritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaPart.AccelerationAndWayWithConstantSpeed">
            <summary>
            Beschleunigungsweg und Weg mit konstanten Geschwindigkeit in Schritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaPart.Speed">
            <summary>
            Geschwindigkeit in Millimeter pro Sekunde
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaPart.ReduceFlipValue">
            <summary>
            Step Strecke bei der keine beschl. ausgeführt wird 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DataOfAxes">
            <summary>
            Daten für die Achsen X bis B werden ermittelt und als ushort zurückgegeben.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DataOfAxes.Set(De.Boenigk.SMC5D.Core.Mill.DStruct,De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Daten für die Achsen X bis B werden ermittelt und in der Eigenschaft 'Dane_osi' dieser Klasse gespeichert. 
            Auch die größte Delta wird in Eigenschaft 'LargestDelta' gespeichert.
            </summary>
            <param name="aDStruct">Struktur DStruct</param>
            <param name="aDopiszDane">Ausgabe Struktur für den Kontroller</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DataOfAxes.Get(De.Boenigk.SMC5D.Core.DOPISZ_DANE,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Daten für die Achsen X bis B werden ermittelt in 'DOPISZ_DANE.dane_osi' gespeichert und zurückgegeben.
            </summary>
            <param name="aDopiszDane">Struktur DOPISZ_DANE</param>
            <param name="aXDirection">True positive Richtung X</param>
            <param name="aYDirection">True positive Richtung Y</param>
            <param name="aZDirection">True positive Richtung Z</param>
            <param name="aADirection">True positive Richtung A</param>
            <param name="aBDirection">True positive Richtung B</param>
            <returns>DOPISZ_DANE</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DataOfAxes.GetLargestAxis(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Gibt die Achse, die die längste Delta hat (os wiodoca)
            </summary>
            <param name="aDopiszDane">Daten</param>
            <returns>Achse, die am längsten ist</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DataOfAxes.DirectionOfAxis(De.Boenigk.SMC5D.Core.DOPISZ_DANE,De.Boenigk.SMC5D.Core.Axis)">
            <summary>
            Prüft die Richtung der Achse
            </summary>
            <param name="aDopiszDane">Struktur DOPISZ_DANE in der die die Richtung der Achse überprüft</param>
            <param name="aEnumAxis">Achse die überprüft wird</param>
            <returns>True, Fahrt- Richtung der Achse ist positiv</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.DataOfAxes.Dane_osi">
            <summary>
            Daten für die Achsen werden zurückgegeben (Struktur: DOPISZ_DANE.dane_osi)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DeltaDivider">
            <summary>
            Rechnet Teiler und die entsprechen Deltas für die Achsen X,Y,Z,A,B aus.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaDivider.myComma">
            <summary>
            Ein Array dass die Nachkomma Werte für Achsen X,Y,Z,A,B verwaltet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaDivider.GetDelta(De.Boenigk.SMC5D.Core.Mill.DStruct,De.Boenigk.SMC5D.Core.Axis)">
            <summary>
            Delta für angegebene Achse wird ermittelt
            </summary>
            <param name="aDStruct">DStruct</param>
            <param name="aAxis">Achse für die die Delta berechnet wird</param>
            <returns>Ushort Delta für die Struktur DOPISZ_DANE</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaDivider.CreateDelta(System.Int64,System.Int32)">
            <summary>
            Rechnet Delta aus 
            </summary>
            <param name="aDelta">Delta von DStruct</param>
            <param name="aAxis">Achse 0-X, 1-Y, 2-Z, 3-A, 4-B (Entspricht Index im Array myComma</param>
            <returns>Ushort Delta für die Struktur DOPISZ_DANE</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaDivider.InitDivider(System.Int64)">
            <summary>
            Ermittelt den Teiler für größte Delta und für maximalen Wert ushort
            </summary>
            <param name="aLargestDelta">Größte Delta</param>
            <returns>Der ermittelte Teiler</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.DeltaDivider.Divider">
            <summary>
            Teiler, dann am Anfang ermittelt wurde
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.DeltaPicStruct">
            <summary>
            Konvertiert Long DeltaX, DeltaY, DeltaZ, DeltaA, DeltaB aus DStruct nach DOPISZ_DANE Struktur
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaPicStruct.myDataOfAxes">
            <summary>
            Daten für die Achsen X bis B werden ermittelt und als ushort zurückgegeben.
            </summary>        
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaPicStruct.myDeltaDivider">
            <summary>
            Rechnet Teiler und die entsprechen Deltas für die Achsen X,Y,Z,A,B aus.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.DeltaPicStruct.myLargestDelta">
            <summary>
            Ermittelt den Wert der längsten Delta
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.DeltaPicStruct.Convert(De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Eine DStruct wird nach DOPISZ_DANE Struktur konvertiert
            </summary>
            <param name="aDStruct">Struktur</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.DeltaPicStruct.DeltaStructList">
            <summary>
            Enthält Liste mit DOPISZ_DANE Struktur Objekten
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.P32OutputData">
            <summary>
            Enthält alle Daten für den Pic
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.P32OutputData.DOPISZ_DANE">
            <summary>
            Struktur, die an den Pic32 verschickt wird
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.P32OutputData.Step">
            <summary>
            Dazugehöriger Step- Objekt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.P32OutputData.LineIndex">
            <summary>
            Index des Vektors (für die Fortschritt- Anzeige und Pause).
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.P32OutputData.Time">
            <summary>
            Gibt die aktuelle Arbeitszeit in Sekunden
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator">
            <summary>
            Anpassung der StepList für Tangentialmesser
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.C_AddExt">
            <summary>
            Erweiterung für neue Datei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.mySettings">
            <summary>
            Alle Einstellungen der Steuerelektronik SMC5D
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.myStepList">
            <summary>
            ArrayList mit Step Objekten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.myStepFile">
            <summary>
            Dateiname mit Pfad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.myLastAlpha">
            <summary>
            Letzte Alpha
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.myTangentialIndex">
            <summary>
            TangentialIndex verwaltet letzten PU und PD Index
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.myStepReader">
            <summary>
            Liest eine binäre Datei, die Step Objekte enthält
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.myStepWriter">
            <summary>
            Schreibt Step Objekte in eine binäre Datei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.myEmbossingPenRelay">
            <summary>
            Prägestift Relais, wenn Default dann keine Prägestift Funktion
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings,System.String,System.Single)">
            <summary>
            Standard Konstruktor
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik</param>
            <param name="aStepFile">Dateiname mit Pfad</param>
            <param name="aLastAlpha">Letzte Alpha, GlobPosition A Achse</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings,System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step},System.Single)">
            <summary>
            Standard Konstruktor
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik</param>
            <param name="aStepList">ArrayList mit Step Objekten</param>
            <param name="aLastAlpha">Letzte Alpha, GlobPosition A Achse</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.Create">
            <summary>
            StepList wird für Tangenialmesser generiert
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.InitEmbossingPenRelay">
            <summary>
            Sucht Prägestift Relay. Wenn keine Prägestift- Funktion, dann bleibt die Relay -1
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.IsEmbossingPenData(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Prüft ob der Step für Prägestift bestimmt ist. Wenn ja dann wird true zurückgegeben.
            HINWEIS: Für Prägestift Daten keine Tangential -Korrektur!
            </summary>
            <param name="aStep">Step, dass geprüft wird</param>
            <returns>True, Prägestift Daten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.Loop">
            <summary>
            Daten werden bearbeitet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.Init">
            <summary>
            Generiert Zugriff auf temporäre Dateien, StepList wird mit Daten angelegt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.SetFinish">
            <summary>
            Die restlichen Step Objekte werden gespeichert, 
            Dateien werden geschlossen, die ArrayList gelöscht
            und die Dateien umbenannt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.InsertStep(De.Boenigk.SMC5D.Move.Step,System.Single,System.Int32)">
            <summary>
            Ein Step wird hinzugefügt
            </summary>
            <param name="aLast">Step dass hinzugefügt wird</param>
            <param name="aAlpha">Alpha als A im Step</param>
            <param name="aIndex">Position an der der Step hinzugefügt wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.InsertTangSeq(System.Int32,System.Single,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Sequenz für die Korrektur des Tangentialmessers wird eingefügt
            </summary>
            <param name="aIndex">Index ab der die Step Sequenz eingefügt wird</param>
            <param name="aAlphaTang">Alpha Tangens dass eingesetzt wird</param>
            <param name="aLastPU">Letzter Step dass PU ist. Dass ist notwendig um Relais für PU zu setzen</param>
            <returns>Anzahl der hinzugefügten Elemente wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.SetOutBytes(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            OutBytes werden aus dem letzten PU in den neuen Übertragen
            </summary>
            <param name="aNew">Neuer Step, dass OutBytes bekommt</param>
            <param name="aLastPU">Letzter PU Step</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.SetAlphaTang(System.Int32,System.Int32,System.Single)">
            <summary>
            Alpha Tangens wird korrigiert
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aEndIndex">End-Index</param>
            <param name="aAlphaTang">Alpha Tangens dass eingesetzt wird</param>
            <returns>Anzahl der hinzugefügten Elemente wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.Radian(System.Double)">
            <summary>
            Winkel in Grad nach Radian umrechnen
            </summary>
            <param name="aAngle">Winkel in Grad</param>
            <returns>Winkel in Radian</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.GetAlphaTangDoubleEdged(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Alpha wird für zweischneidige Messer berechnet
            </summary>
            <param name="aLast">Erster Punkt des Vektors</param>
            <param name="aNext">Zweiter Punkt des Vektors</param>
            <returns>Alpha</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator.GetAlphaTangSingleEdged(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Alpha wird für einschneidige Messer berechnet
            </summary>
            <param name="aLast">Erster Punkt des Vektors</param>
            <param name="aNext">Zweiter Punkt des Vektors</param>
            <returns>Alpha</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB">
            <summary>
            Anpassung der StepList für Tangentialmesser
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.C_AddExt">
            <summary>
            Erweiterung für neue Datei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.mySettings">
            <summary>
            Alle Einstellungen der Steuerelektronik SMC5D
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.myStepList">
            <summary>
            ArrayList mit Step Objekten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.myStepFile">
            <summary>
            Dateiname mit Pfad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.myLastAlpha">
            <summary>
            Letzte Alpha
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.myTangentialIndex">
            <summary>
            TangentialIndex verwaltet letzten PU und PD Index
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.myStepReader">
            <summary>
            Liest eine binäre Datei, die Step Objekte enthält
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.myStepWriter">
            <summary>
            Schreibt Step Objekte in eine binäre Datei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.myEmbossingPenRelay">
            <summary>
            Prägestift Relais, wenn Default dann keine Prägestift Funktion
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings,System.String,System.Single)">
            <summary>
            Standard Konstruktor
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik</param>
            <param name="aStepFile">Dateiname mit Pfad</param>
            <param name="aLastAlpha">Letzte Alpha, GlobPosition A Achse</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings,System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step},System.Single)">
            <summary>
            Standard Konstruktor
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik</param>
            <param name="aStepList">ArrayList mit Step Objekten</param>
            <param name="aLastAlpha">Letzte Alpha, GlobPosition A Achse</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.Create">
            <summary>
            StepList wird für Tangenialmesser generiert
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.InitEmbossingPenRelay">
            <summary>
            Sucht Prägestift Relay. Wenn keine Prägestift- Funktion, dann bleibt die Relay -1
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.IsEmbossingPenData(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Prüft ob der Step für Prägestift bestimmt ist. Wenn ja dann wird true zurückgegeben.
            HINWEIS: Für Prägestift Daten keine Tangential -Korrektur!
            </summary>
            <param name="aStep">Step, dass geprüft wird</param>
            <returns>True, Prägestift Daten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.Loop">
            <summary>
            Daten werden bearbeitet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.Init">
            <summary>
            Generiert Zugriff auf temporäre Dateien, StepList wird mit Daten angelegt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.SetFinish">
            <summary>
            Die restlichen Step Objekte werden gespeichert, 
            Dateien werden geschlossen, die ArrayList gelöscht
            und die Dateien umbenannt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.InsertStep(De.Boenigk.SMC5D.Move.Step,System.Single,System.Int32)">
            <summary>
            Ein Step wird hinzugefügt
            </summary>
            <param name="aLast">Step dass hinzugefügt wird</param>
            <param name="aAlpha">Alpha als A im Step</param>
            <param name="aIndex">Position an der der Step hinzugefügt wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.InsertTangSeq(System.Int32,System.Single,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Sequenz für die Korrektur des Tangentialmessers wird eingefügt
            </summary>
            <param name="aIndex">Index ab der die Step Sequenz eingefügt wird</param>
            <param name="aAlphaTang">Alpha Tangens dass eingesetzt wird</param>
            <param name="aLastPU">Letzter Step dass PU ist. Dass ist notwendig um Relais für PU zu setzen</param>
            <returns>Anzahl der hinzugefügten Elemente wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.SetOutBytes(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            OutBytes werden aus dem letzten PU in den neuen Übertragen
            </summary>
            <param name="aNew">Neuer Step, dass OutBytes bekommt</param>
            <param name="aLastPU">Letzter PU Step</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.SetAlphaTang(System.Int32,System.Int32,System.Single)">
            <summary>
            Alpha Tangens wird korrigiert
            </summary>
            <param name="aStartIndex">Start Index</param>
            <param name="aEndIndex">End-Index</param>
            <param name="aAlphaTang">Alpha Tangens dass eingesetzt wird</param>
            <returns>Anzahl der hinzugefügten Elemente wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.Radian(System.Double)">
            <summary>
            Winkel in Grad nach Radian umrechnen
            </summary>
            <param name="aAngle">Winkel in Grad</param>
            <returns>Winkel in Radian</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.GetAlphaTangDoubleEdged(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Alpha wird für zweischneidige Messer berechnet
            </summary>
            <param name="aLast">Erster Punkt des Vektors</param>
            <param name="aNext">Zweiter Punkt des Vektors</param>
            <returns>Alpha</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB.GetAlphaTangSingleEdged(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Alpha wird für einschneidige Messer berechnet
            </summary>
            <param name="aLast">Erster Punkt des Vektors</param>
            <param name="aNext">Zweiter Punkt des Vektors</param>
            <returns>Alpha</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialDelta">
            <summary>
            Zusammenfassung für TangentialDelta.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialDelta.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Standard Konstruktor
            </summary>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialDelta.GetDeltaA(System.Double)">
            <summary>
            Delta für Tangential A wird angepasst
            </summary>
            <param name="aDelta">Delta</param>
            <returns>Angepasste Delta wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialDelta.GetMMA(System.Double)">
            <summary>
            Millimeter für Tangential A wird angepasst
            </summary>
            <param name="aMMA">A in Millimeter</param>
            <returns>Angepasste A in Millimeter wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialDelta.GetDeltaB(System.Double)">
            <summary>
            Delta für Tangential B wird angepasst
            </summary>
            <param name="aDelta">Delta</param>
            <returns>Angepasste Delta wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialDelta.GetMMB(System.Double)">
            <summary>
            Millimeter für Tangential B wird angepasst
            </summary>
            <param name="aMMB">B in Millimeter</param>
            <returns>Angepasste B in Millimeter wird zurückgegeben</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialIndex">
            <summary>
            Letzter Down Index wird gespeichert
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialIndex.myLastPD">
            <summary>
            Letzter Step mit Down = true. Wenn der nächster Down = true und x und y
            Koordinate gleich, dann wird der Index verschoben.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialIndex.myFirst">
            <summary>
            Anzahl der PD mit gleichen X,Y Werten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialIndex.SetIndex(De.Boenigk.SMC5D.Move.Step,System.Int32)">
            <summary>
            Letzter PU und PD Index wird gesetzt
            </summary>
            <param name="aStep">Step Objekt</param>
            <param name="aIndex">Aktueller Index</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialIndex.Reset">
            <summary>
            PU und PD Index
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialIndex.LastPUIndex">
            <summary>
            Letzter PU Index, wenn -1 dann kein Index gesetzt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialIndex.LastPDIndex">
            <summary>
            Letzter PD Index, wenn -1 dann kein Index gesetzt
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.Time">
            <summary>
            Enthält Algorithmen zum Berechnen der Arbeitszeit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Time.mySettings">
            <summary>
            Einstellungen des Kontrollers
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Time.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">Einstellungen werden angegeben</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Time.GetAccelerationTime(System.UInt32,System.UInt32)">
            <summary>
            Rechnet dauer (Zeit) der Beschleunigung
            </summary>
            <param name="aEndStartSpeed">Start Geschwindigkeit</param>
            <param name="aMaxSpeed">Maximale Geschwindigkeit</param>
            <returns>Zeit in Sekunden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Time.GetConstantSpeedTime(System.Int64,System.UInt32)">
            <summary>
            Rechnet dauer (Zeit) des Wegs mit konstanten Geschwindigkeit
            </summary>
            <param name="aMaxDelta">Maximale Delta</param>
            <param name="aMaxSpeed">Maximale Geschwindigkeit</param>
            <returns>Zeit in Sekunden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Time.GetBrakeTime(System.UInt32,System.UInt32)">
            <summary>
            Rechnet dauer (Zeit) des Bremswegs
            </summary>
            <param name="aEndStartSpeed">Start Geschwindigkeit</param>
            <param name="aMaxSpeed">Maximale Geschwindigkeit</param>
            <returns>Zeit in Sekunden</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator">
            <summary>
            Vacuum Tisch in den angegbenen Bereichen schalten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.mySettings">
            <summary>
            Einstellungen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.myLastStep">
            <summary>
            Letzter Step Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.myUsedAreas">
            <summary>
            Verwaltet Bereich, die schön mal geschaltet worden sind (für SetPermanentlyIfInArea(..)).
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">SMC Einstellungen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.Set(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Ausgang für Vacuum setzen
            </summary>
            <param name="aStep">Step Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.SetPermanentlyIfInArea(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Setzt alle Ausgänge für Vacuum- Bereiche ein mal an.
            </summary>
            <param name="aStep">Step Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.SetVariable(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Setzt Ausgänge für den Step dass im Bereich liegt.
            </summary>
            <param name="aStep">Step Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.SetPermanently(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Setzt alle Ausgänge und schaltet sie nicht aus
            </summary>
            <param name="aStep">Step Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.LineInArray(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Settings.VacuumArea)">
            <summary>
            Prüfung ob die angegebene Linie im Zeichnungsbereich
            </summary>
            <param name="aFirst">erster Punkt</param>
            <param name="aLast">zweiter Punkt</param>
            <param name="aArea">Vacuum- Bereich</param>
            <returns>true, Linie im Zeichnungsbereich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator.GetPointValue(De.Boenigk.SMC5D.Move.Step,De.Boenigk.SMC5D.Settings.VacuumArea)">
            <summary>
             Punkt- Berechnung für die Prüfung ob eine Linie im Zeichnungsbereich
            </summary>
            <param name="aPoint">Punkt der Linie</param>
            <param name="aArea">Vacuum- Bereich</param>
            <returns>Ergebnis der Berechnung (muß mit dem anderem Punkt verglichen werden)</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.OutputDirection">
            <summary>
            Setzt 'Kierunek osi' für jede Achse, Motorstromabsenkung und Ausgänge 
            auf die Ausgangswerte. Diese Ausgänge werden vom Pic32 am Anfang gesetzt,
            damit z.B.: die Spindel nicht am Anfang angeht.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.OutputDirection.GetCon2(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Generiert INIT Parameter 'Kierunki_Osi'. Im 'Kierunki_Osi' Fahrt Richtungen der Achsen sowie Motorstromabsenkung definiert.
            
            0 - nicht invertiert
            1 - invertiert
            
            0000000000000000 1111111111111111
            |||||||||||||||| ||||||||||||||||--- (1)     kierunek X              
            |||||||||||||||| |||||||||||||||---- (2)     Y
            |||||||||||||||| ||||||||||||||----- (4)     Z
            |||||||||||||||| |||||||||||||------ (8)     A
            |||||||||||||||| ||||||||||||------- (16)    B
            |||||||||||||||| |||||||||||-------- (32)    kierunek referencji X
            |||||||||||||||| ||||||||||--------- (64)    Y
            |||||||||||||||| |||||||||---------- (128)   Z
            |||||||||||||||| ||||||||----------- (256)   A
            |||||||||||||||| |||||||------------ (512)   B
            |||||||||||||||| ||||||------------- (1024)  inwertowanie impulsow wyjsciowych (Tact)
            |||||||||||||||| |||||-------------- (2048)  inwertowanie wyjscia Rel1
            |||||||||||||||| ||||--------------- (4096)  invertowanie wyjscia Rel2
            |||||||||||||||| |||---------------- (8192)  inwertowanie wyjscia Rel3
            |||||||||||||||| ||----------------- (16384) invertowanie wyjscia Rel4
            |||||||||||||||| |------------------ (32768) inwertowanie ograniczenia pradu silnikow Rel 9 (reserviert für 32768)
            </summary>
            <param name="aSettings">Alle Einstellungen des Controllers</param>
            <returns>Parameter 'Kierunek osi'</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.OutputDirection.GetRelCon2(De.Boenigk.SMC5D.Basics.Output,System.UInt32)">
            <summary>
            Gibt Wert (als Position abhängig vom Ausgang für entsprechende Funktion) dass invertiert werden soll.
            </summary>
            <param name="aOutput">Ausgang</param>
            <param name="aCON2">Aktuelle Werte 'CON2'</param>
            <returns>Wert dass ein Bit setzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.OutputDirection.GetCon3(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Generiert INIT Parameter 'Con3'.
            
            0000000000000000 1111111111111111
            |||||||||||||||| ||||||||||||||||--- (1)     inwertowanie wyjscia Rel5
            |||||||||||||||| |||||||||||||||---- (2)     inwertowanie wyjscia Rel6
            |||||||||||||||| ||||||||||||||----- (4)     inwertowanie wyjscia Rel7
            |||||||||||||||| |||||||||||||------ (8)     inwertowanie wyjscia Rel8
            |||||||||||||||| ||||||||||||------- (16)    inwertowanie wyjscia Rel9
            |||||||||||||||| |||||||||||-------- (32)    inwertowanie wyjscia Rel10
            |||||||||||||||| ||||||||||--------- (64)    inwertowanie wyjscia Rel11
            |||||||||||||||| |||||||||---------- (128)   inwertowanie wyjscia Rel12
            |||||||||||||||| ||||||||----------- (256)   inwertowanie wyjscia Rel13
            |||||||||||||||| |||||||------------ (512)   inwertowanie wyjscia Rel14
            |||||||||||||||| ||||||------------- (1024)  frei
            |||||||||||||||| |||||-------------- (2048)  frei
            |||||||||||||||| ||||--------------- (4096)  frei
            |||||||||||||||| |||---------------- (8192)  frei
            |||||||||||||||| ||----------------- (16384) frei
            |||||||||||||||| |------------------ (32768) frei
            </summary>
            <param name="aSettings">Alle Einstellungen des Controllers</param>
            <returns>Parameter 'Kierunek osi'</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.OutputDirection.GetCon4(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Generiert INIT Parameter 'Con4'.
            
            0000000000000000 1111111111111111
            |||||||||||||||| ||||||||||||||||--- (1)     inwertowanie wyjscia Rel5
            |||||||||||||||| |||||||||||||||---- (2)     inwertowanie wyjscia Rel6
            |||||||||||||||| ||||||||||||||----- (4)     inwertowanie wyjscia Rel7
            |||||||||||||||| |||||||||||||------ (8)     inwertowanie wyjscia Rel8
            |||||||||||||||| ||||||||||||------- (16)    inwertowanie wyjscia Rel9
            |||||||||||||||| |||||||||||-------- (32)    inwertowanie wyjscia Rel10
            |||||||||||||||| ||||||||||--------- (64)    inwertowanie wyjscia Rel11
            |||||||||||||||| |||||||||---------- (128)   inwertowanie wyjscia Rel12
            |||||||||||||||| ||||||||----------- (256)   inwertowanie wyjscia Rel13
            |||||||||||||||| |||||||------------ (512)   inwertowanie wyjscia Rel14
            |||||||||||||||| ||||||------------- (1024)  frei
            |||||||||||||||| |||||-------------- (2048)  frei
            |||||||||||||||| ||||--------------- (4096)  frei
            |||||||||||||||| |||---------------- (8192)  frei
            |||||||||||||||| ||----------------- (16384) frei
            |||||||||||||||| |------------------ (32768) frei
            </summary>
            <param name="aSettings">Alle Einstellungen des Controllers</param>
            <returns>Parameter 'Kierunek osi'</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.OutputDirection.IsOutputInvertInInit(De.Boenigk.SMC5D.Basics.Output,De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt die Einstellungen eines Ausgangs aus dem INIT zurück
            </summary>
            <param name="aOutput">Ausgang</param>
            <param name="aSettings">Einstellungen</param>
            <returns>True, Ausgang gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.OutputDirection.IsOutputInvertInSettings(De.Boenigk.SMC5D.Basics.Output,De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt die Einstellungen eines Ausgangs zurück
            </summary>
            <param name="aOutput">Ausgang</param>
            <param name="aSettings">Einstellungen</param>
            <returns>True, Ausgang gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.OutputDirection.SetOutputsInvertToSettings(De.Boenigk.SMC5D.Basics.Output,System.Boolean,De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Setzt die Ausgänge in die Einstellungen
            </summary>
            <param name="aOutput">Ausgang</param>
            <param name="aInvert">True, Ausgang wird invertiert</param>
            <param name="aSettings">Einstellungen</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.C_SendBytesArrayLength">
            <summary>
            Länge des Sende- ByteArrays
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.C_JobEnd">
            <summary>
            Konstante markiert Daten- Ende für Job in der struct DOPISZ_DANE.Rezerwa1 (erster Bit Wert 1 für Ende, Wert 0 für weiter)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.C_LaserAllowed">
            <summary>
            LASER- Konstante, markiert Daten für Laser. Wenn C_LaserAllowed dann Laser einschalten (als fräsen)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.myODCZYTAJ_DANEStructLength">
            <summary>
            Länge des Schreibe- ByteArrays
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.myINITStructLength">
            <summary>
            Länge der Init Struct (nur zum INIT lesen benötigt) in Bytes
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Commands.Pic32Delegate">
            <summary>
            Pic32DLL Delegate
            </summary>
            <param name="aText">Text</param>
            <param name="aCommand63">Befehl</param>
            <param name="aBytes">Inhalt des Befehls</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Commands.Command">
            <summary>
            Interne smc5d-p32 Befehle
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.Command.LASER_GRANIT_INIT">
            <summary>
            Laser- INIT schreiben
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.Command.LASER_READ_INIT">
            <summary>
            Laser- INIT lesen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.Command.LASER_READ_DATA">
            <summary>
            Laser- Daten lesen online (z.b. je 50 ms)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.Command.LASER_ON">
            <summary>
            Laser an
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Commands.Command.LASER_OFF">
            <summary>
            Laser aus
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Pic32Buffer">
            <summary>
            Verwaltet Struktur Liste zum Senden an den PIC
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.C_PIC32MX460F512L">
            <summary>
            PIC32 32 KBytes Version
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.C_PIC32MX795F512L">
            <summary>
            PIC32 128 KBytes Version
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.C_ContentLength">
            <summary>
            Ushort, Kompression Wert, markiert neue Werte mit 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.myStructLength">
            <summary>
            Struktur Länge
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.myStart">
            <summary>
            True, erste "P32OutputData"
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.myConnector">
            <summary>
            USB Verbindung- Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.myPosition">
            <summary>
            Letzte Position der Daten, die zum smc5d-p32 geschickt worden sind
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.myDeltaPic">
            <summary>
            Cache
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">USB Verbindung Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.AddRange(System.Collections.Generic.List{De.Boenigk.SMC5D.Core.Mill.P32OutputData})">
            <summary>
            Daten zum Cache hinzufügen 
            </summary>
            <param name="aData">Liste mit neune Daten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.Clear">
            <summary>
            Cache wird komplett gelöscht
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.SetDataEnd">
            <summary>
            Markiert das Ende des Puffers
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.GetSizeBuffer(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Größe des Buffers im Pic
            </summary>
            <param name="aConnector">USB Verbindung Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.GetSim">
            <summary>
            Gibt die Liste mit P32OutputData Objekten oder wenn Ende dann null. Diese Methode wird für die Simulation verwendet.
            </summary>
            <returns>Byte Array, volle Speicher- Länge oder wenn Ende dann null.</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.GetCurrentWorkData">
            <summary>
            Gibt die aktuelle Daten-Struktur
            </summary>
            <returns>P32OutputData</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.Get">
            <summary>
            Erzeugt ein Byte Array aus Strukturen (immer nur ein Puffer mit der Länge 'Pic32Buffer.GetSizeBuffer(myConnector)' ). 
            Wenn alle Struktur- Objekte zurückgegeben sind dann wird null zurückgegeben.
            </summary>
            <returns>Byte Array das erste mal volle Speicher- Länge dann immer halbe Länge am Ende null.</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.GetNotCompressed(System.Byte[])">
            <summary>
            Erzeugt ein Byte Array aus Structuren (immer nur ein Puffer mit der Länge C_StructSizeInBuffer = 450). 
            Wenn alle Struct- Objekte zurückgegeben sind dann wird null zurückgegeben.
            </summary>
            <param name="aBytes">Puffer das gefüllt wird</param>
            <returns>Byte Array das erste mal volle Speicher- Länge dann immer halbe Länge am Ende null.</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.GetCompressed(System.Byte[])">
            <summary>
            Erzeugt ein Byte Array aus Strukturen (immer nur ein Puffer mit der Länge C_StructSizeInBuffer = 450). 
            Wenn alle Struktur- Objekte zurückgegeben sind dann wird null zurückgegeben.
            </summary>
            <param name="aBytes">Puffer das gefüllt wird</param>
            <returns>Byte Array das erste mal volle Speicher- Länge dann immer halbe Länge am Ende null.</returns>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.myLastDopiszDane">
            <summary>
            Letzte geladen DOPISZ_DANE Struktur
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.C_MaxCache">
            <summary>
            Größe des Cache, definiert zu löschende Größe
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Buffer.myDelPosCounter">
            <summary>
            Anzahl der gelöschten Daten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Buffer.DelOldData">
            <summary>
            Löscht alte Daten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32Buffer.TotalCount">
            <summary>
            Anzahl der Elemente in der Liste (Total)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32Buffer.Count">
            <summary>
            Anzahl der Elemente, die noch nicht an die Maschine geschickt worden sind
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32Buffer.Number_Of_Structs">
            <summary>
            Anzahl der Struktur, die nach Byte- Array konvertiert wurden.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32Buffer.DeltaSum">
            <summary>
            Die Summe der Deltas als string wird zurückgegeben
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Pic32LAN">
            <summary>
            Die Klasse beschreibt Zugriff auf PIC32 und ist die einzige Klasse, die über DLLImport auf Pic32 zugreift. 
            Der Zugriff erfolgt serialisiert!
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32LAN.myODCZYTAJ_DANEStructLength">
            <summary>
            Länge des Schreibe- ByteArrays
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32LAN.myINITStructLength">
            <summary>
            Länge der Init Struct (nur zum INIT lesen benötigt) in Bytes
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.#ctor(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Konstruktor
            </summary>
            <param name="aHostname">Hostname</param>
            <param name="aConnectPort">Verbinden mit Anschluss Port</param>
            <param name="aIP">IP Adresse</param>
            <param name="aTimeout">Der Timeoutwert für den Sendevorgang/Empfangvorgang in Millisekunden</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32LAN.myLogLevel">
            <summary>
            Level der Logdaten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32LAN.myLogDir">
            <summary>
            Logdatei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32LAN.myThisLock">
            <summary>
            Privater Objekt für serialisierten Zugriff
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.CONNECT(System.String,System.Byte)">
            <summary>
            Verbindung mit LAN PIC32 aufbauen
            </summary>
            <param name="aLogDir">Log Verzeichnis</param>
            <param name="aLogLevel">Log Level, 0 - kein, 1 - die wichtigsten Daten, 2 - alles was möglich ist</param>
            <returns>True, Verbindung vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.CONNECT">
            <summary>
            Verbindung mit LAN PIC32 aufbauen
            </summary>
            <returns>True, Verbindung vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.OnPic32Command(System.String,System.Int16,System.Byte[])">
            <summary>
            Befehl ausgeführt
            </summary>
            <param name="aText">Text</param>
            <param name="aCommand63">Befehl</param>
            <param name="aBytes">Array</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.IS_CONNECTED">
            <summary>
            Prüft ob die Verbindung existiert
            </summary>
            <returns>True, Verbindung mit PIC32 vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.DIS_CONNECT">
            <summary>
            Verbindung mit USB Pic32 wird getrennt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SET_UPDATE_MODE">
            <summary>
            Aktiviert Firmware-Update Modus
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.BLOCK_INIT_OUTPUTS_ON">
            <summary>
            Ausgänge werden blockiert, d.h. Init Befehl ändert die Ausgänge nicht.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.BLOCK_INIT_OUTPUTS_OFF">
            <summary>
            Blockierung der Ausgänge wird aufgehoben.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_UPDATE_DATA_LINE(System.Byte[])">
            <summary>
            Daten werden in den PIC Speicher geschrieben.
            
            HINWEIS: Diese Methode darf erst nach Methoden Aufruf SET_WRITE_DATA aufgerufen werden.
            </summary>
            <returns>True, Daten an den Kontroller gesendet, false Keine Daten mehr zum senden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WriteLineToPicTester(System.String)">
            <summary>
            Schreibt Text in den PicTester
            </summary>
            <param name="aText">Text</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.ESC">
            <summary>
            Abbruch, Arbeit der CNC Maschine abbrechen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.REBOOT">
            <summary>
            Kontroller wird komplett zurückgesetzt (neu gestartet). Erst nach einem Fehler möglich. Wenn kein Fehler dann hat diese Funktion keine Auswirkung
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.RESET_INSPECTION_TIME">
            <summary>
            Zähler für Arbeitszeit zurücksetzen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.START">
            <summary>
            Start, Arbeit der CNC Maschine starten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.STOP">
            <summary>
            Stop, Manuell bewegen wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WAIT(System.Int32)">
            <summary>
            Verlängert aktuelle Wartezeit in Sekunden (nur wenn Job und wenn gerade Wartezeit ausgeführt wird)
            </summary>
            <param name="aTime">Wartezeit in Sekunden</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.STOP_JOB">
            <summary>
            Stopp, Arbeit der CNC Maschine wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.STOP_MEASURE">
            <summary>
            Stopp, Beim Fahren auf Schalter CNC Maschine anhalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.MANUAL_MOVE(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Posuw reczny
            </summary>
            <param name="aDOPISZ_DANE">Daten Struktur</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.MANUAL_MOVE_STEP(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Posuw reczny krok po kroku
            </summary>
            <param name="aDOPISZ_DANE">Daten Struct</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.READ_DATA">
            <summary>
            Liest ein Byte Array vom PiC32 aus und gibt es in einer Struktur zurück.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SEND_COMMAND(De.Boenigk.SMC5D.Core.Commands.Command,System.String,System.String)">
            <summary>
            Setzt Befehl zum Senden der Daten an den Pic. Dabei wird nur eine leere Struktur 'DOPISZ_DANE' mit dem Befehl 'C_DOPISZ_DANE' verschickt.
            Diese Methode wird intern genutzt um auf senden zuschalten!!
            </summary>
            <param name="aCommand">SMC5D Befehl</param>
            <param name="aMessage">Textnachricht</param>
            <param name="aErrorMessage">Textnachricht im Fehlerfall</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SEND_COMMAND(De.Boenigk.SMC5D.Core.Commands.Command,System.String)">
            <summary>
            Setzt Befehl zum Senden der Daten an den Pic. Dabei wird nur eine leere Struktur 'DOPISZ_DANE' mit dem Befehl 'C_DOPISZ_DANE' verschickt.
            Diese Methode wird intern genutzt um auf senden zuschalten!!
            </summary>
            <param name="aCommand">SMC5D Befehl</param>
            <param name="aErrorMessage">Textnachricht im Fehlerfall</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32LAN.myTwoBuffersFull">
            <summary>
            Zählt 2 Buffer, die am Anfang aufgefüllt werden sollen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.INIT_WRITE_DATA">
            <summary>
            Werte zum Senden der Daten werden initialisiert (z.B.: 'myTwoBuffersFull' muss auf 0 gesetzt werden).
            Diese Methode muss vor jedem Job einmal aufgerufen werden.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_DATA(System.Byte[],System.Int32,System.Int32,System.String)">
            <summary>
            Daten werden in den PIC Speicher geschrieben.
            
            HINWEIS: Diese Methode darf erst nach Methoden Aufruf SET_WRITE_DATA aufgerufen werden.
            </summary>
            <param name="aBytes">Byte array dass an den Kontroller gesendet werden (Größe ist Puffergröße also Pic32Buffer.C_StructSizeInBuffer)</param>
            <param name="aSizeBuffer">Speichergröße, als Anzahl der Structuren pro Speicher (Unterschied zwischen Microcontroller- Typen wie C_PIC32MX460F512L oder C_PIC32MX795F512L)</param>
            <param name="aNumberOfStructsInPuffer">Anzahl Structuren in diesem Byte Array (Puffer). Dieser Parameter ist nur Information, und hat keine Funktion</param>
            <param name="aDeltaSum">Im Debug Modus wird die Summe der Deltas angegeben</param>
            <returns>True, Daten an den Kontroller gesendet, false Keine Daten mehr zum senden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_END_COMMAND">
            <summary>
            Keine Daten mehr verfügbar. 
            Eine leere Struktur 'DOPISZ_DANE' mit dem Befehl 'Keine Daten mehr zum senden' wird gesendet.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.RESET_DATA">
            <summary>
            Daten- Speicher wird gelöscht
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.REFERENCE_MOVE(De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA,System.Boolean)">
            <summary>
            Referenzfahrt ausführen
            </summary>
            <param name="aJAZDA_NA_I_OD_LACZNIKA">Daten Struct</param>
            <param name="aToSwitch">True, auf den Schalter, vom Schalter ist false</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.MOVE_TO_FROM_SWITCH(De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA,System.Boolean)">
            <summary>
            Führt eine Fahrt auf Schalter und vom Schalter aus
            </summary>
            <param name="aJAZDA_NA_I_OD_LACZNIKA">Daten Struct, enthält Informationen, die benötigt werden umd ein Fahrt auf/vom Schalter auszuführen</param>
            <param name="aToSwitch">True, auf Schalter sonst vom Schalter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.CHANGE_SPEED(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Ändern der Geschwindigkeit. Die Geschwindigkeit wird in 'DOPISZ_DANE' angegeben.
            </summary>
            <param name="aDOPISZ_DANE">Daten Struct 'DOPISZ_DANE' mit der neuen Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.CHANGE_PUFFER_SIZE(System.UInt16)">
            <summary>
            Ändern der Buffor- Größe. Die Buffor- Größe wird in 'DOPISZ_DANE' angegeben.
            </summary>
            <param name="aSize">Größe des Buffors in structs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SET_UPGRADE_MODE(System.Byte[])">
            <summary>
            Schlüssel um Software von Standard auf Pro zu upgrade. Nach diesem Befehl kann Firmware für Pro Version geladen werden.
            </summary>
            <param name="aKey">Schlüssel als Byte array bis 63 bytes (darf nicht die Structur übersteigen)</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.CONTINUE_JOB">
            <summary>
            Arbeit der Maschine wird nach M00 (Pause) fortgesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_INIT_HANDWHEEL(De.Boenigk.SMC5D.Core.INIT_HANDWHEEL)">
            <summary>
            Einstellungen des Handrades initialisieren
            </summary>
            <param name="aINIT_HANDWHEEL">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_INIT_JOYSTICK(De.Boenigk.SMC5D.Core.INIT_JOYSTICK)">
            <summary>
            Einstellungen des Handrades initialisieren
            </summary>
            <param name="aINIT_HANDWHEEL">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_INIT(De.Boenigk.SMC5D.Core.INIT)">
            <summary>
            Einstellungen der Achsen initialisieren
            </summary>
            <param name="aINIT">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_INIT2(De.Boenigk.SMC5D.Core.INIT2)">
            <summary>
            Einstellungen der Achsen initialisieren
            </summary>
            <param name="aINIT2">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.READ_INIT">
            <summary>
            Einstellungen der Achsen lesen
            </summary>
            <returns>INIT</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_INIT_REFERENCJA_WEJSCIA(De.Boenigk.SMC5D.Core.INIT_REFERENCE)">
            <summary>
            Einstellungen der Referenz und Eingänge initialisieren
            </summary>
            <param name="aINIT">Daten Struct</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.READ_INIT_REFERENCJA_WEJSCIA">
            <summary>
            Einstellungen der Referenz und Eingänge lesen
            </summary>
            <returns>INIT_REFERENCE</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.READ_BACKLASH_STATUS">
            <summary>
            Liest Backlash- Status aus
            </summary>
            <returns>OdczytajDane_Backlash_Status</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SET_RELAY(System.UInt32,System.Byte)">
            <summary>
            Schaltet oder ausschaltet ein Relay mit PWM Signal
            </summary>
            <param name="aOut">32 Bit Zahl mit Relais</param>
            <param name="aPWMOut">PWM Signal (0-255)</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.CHANGE_PWM(System.Byte)">
            <summary>
            Wechselt das Aauslesen des PWM Signals
            </summary>
            <param name="aNumber">PWM Nummer 0, 1 oder 2</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SET_PWM(System.Byte,System.Byte)">
            <summary>
            Schaltet PWM Signal
            </summary>
            <param name="aPWMOut">PWM Signal (0-255)</param>
            <param name="aNumber">PWM Nummer 0, 1 oder 2</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SET_RELAY(System.UInt32)">
            <summary>
            Schaltet oder ausschaltet ein Relay
            </summary>
            <param name="aOut">16 Bit Zahl mit Relais</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SET_COUNTER(De.Boenigk.SMC5D.Core.INIT,De.Boenigk.SMC5D.Core.Counter)">
            <summary>
            X,Y,Z,A und B Zähler werden gesetzt
            </summary>
            <param name="aINIT"> Struct Init in der die Koordinaten stehen</param>
            <param name="aXYZABCounter">Flag für die jeweilige Achse, die gesetzt wird z.B.: X Achse soll gesetzt werden dann Counter.X</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SET_LCOUNTER(System.UInt32)">
            <summary>
            Setzt den Job Counter auf einen bestimmten Start- Wert
            </summary>
            <param name="aIndex">Zähler Start- Wert</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.JustXY(De.Boenigk.SMC5D.Core.JUST_XY)">
            <summary>
            Doppelantrieb justieren
            </summary>
            <param name="aJUST_XY">Struktur mit Daten zum justieren</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_FLASH(System.Byte[])">
            <summary>
            Byte Array der Länge von 64 Bytes in den Flash schreiben
            </summary>
            <returns>Byte Array der Länge von 64 Bytes (letzter Byte ist für Befehl reserviert)</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.READ_FLASH">
            <summary>
            Byte Array der Länge von 64 Bytes aus Flash auslesen
            </summary>
            <returns>Byte Array der Länge von 64 Bytes(letzter Byte ist für Befehl reserviert)</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.WRITE_INIT_LASER_GRANIT(De.Boenigk.SMC5D.Core.INIT_LASER)">
            <summary>
            Laser Einstellungen initialisieren
            </summary>
            <param name="aINIT">Daten Struktur</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.READ_INIT_LASER">
            <summary>
            Laser Einstellungen lesen
            </summary>
            <returns>INIT_LASER</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.READ_LASER_ONLINE">
            <summary>
            Laser Status während der Arbeit lesen
            </summary>
            <returns>LASER_ODCZYTAJ_DANE</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.LASEROn_Off(System.Boolean)">
            <summary>
            Wlacz lub wylacz zmiane Lasera recznie na Power2
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.IsConnected">
            <summary>
            Prüft ob die Verbindung mit PIC 32 besteht. 
            
            Dabei wird mit READ_DATA() die Struct ODCZYTAJ_DANE ausgeselen und überprüft.
            Wenn die Struct ODCZYTAJ_DANE keine Daten enthält (nur 0 Werte) dann gibt es keine Verbindung.
            </summary>
            <returns>True, Verbindung mit Pic32 verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.IsConnected(De.Boenigk.SMC5D.Core.ReadData)">
            <summary>
            Prüft ob die Verbindung mit PIC 32 besteht. Dabei wird der Inhalt der Struct ODCZYTAJ_DANE überprüft.
            Wenn die Struct ODCZYTAJ_DANE keine Daten enthält (nur 0 Werte) dann gibt es keine Verbindung.
            </summary>
            <param name="aODCZYTAJ_DANE">Daten Struct die zuvor mit READ_DATA() ausgelesen wurde</param>
            <returns>True, Verbindung mit Pic32 verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.IsConnected(De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE)">
            <summary>
            Prüft ob die Verbindung mit Pic32 besteht. Dabei wird der Inhalt der Struct 'LASER_ODCZYTAJ_DANE' überprüft.
            Wenn die Struct 'LASER_ODCZYTAJ_DANE' keine Daten enthält (nur 0 Wert) dann gibt es keine Verbindung.
            </summary>
            <param name="aLASER_ODCZYTAJ_DANE">Daten Struct (für Leser) die zuvor mit READ_DATA() ausgelesen wurde</param>
            <returns>True, Verbindung mit Pic32 verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.SET_TEST_CON2">
            <summary>
            Testmodus des Kontrollers aktivieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.JEDEN_KROK">
            <summary>
            Jeden krok
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.READ_DEBUG_JOB_DATA">
            <summary>
            DEBUG MODUS für JOB. Liest ein Byte Array vom PiC32 und gibt im Pictester aus
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32LAN.CONTINUE_DEBUG_JOB">
            <summary>
            Sendet Befehl an Pic32,  dass der Job fortgesetzt werden soll. Dieser Befehl ist für Job Debug Modus.
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Core.Pic32LAN.Pic32Command">
            <summary>
            Event Befehl an Pic32 gesendet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32LAN.ConnectPort">
            <summary>
            Port
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32LAN.Hostname">
            <summary>
            Hostname
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32LAN.BufforCounter">
            <summary>
            Gibt die Anzahl der gesendeten Buffors in den Pic Spüeicher
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32LAN.IsUSB">
            <summary>
            True, USB Verbindung, False LAN
            </summary>
            <returns>True, USB, False LAN</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Pic32LAN.Pic32Delegate">
            <summary>
            Pic32DLL Delegate
            </summary>
            <param name="aText">Text</param>
            <param name="aCommand63">Befehl</param>
            <param name="aBytes">Inhalt des Befehls</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32Speed.C_Pic32Hz">
            <summary>
            Frequenz des Pic32 Controllers
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Speed.GetStepSpeedInSec(System.UInt32)">
            <summary>
            Rechnet den ausgelesenen Pic Wert (Geschwindigkeit) nach Schritte pro Sekunde um.
            </summary>
            <param name="aPicValue">Ausgelesener Pic Wert (okres odczytany z pic)</param>
            <returns>Geschwindigkeit in Schritten pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32Speed.GetPicPeriodSpeed(System.UInt32)">
            <summary>
            Rechnet die Geschwindigkeit Schritte Pro Sekunde nach Pic Geschwindigkeit (okres dla pic) um.
            </summary>
            <param name="aStepInSec">Geschwindigkeit Schritte pro Sekunde</param>
            <returns>Pic Geschwindigkeit (okres dla pic)</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.DOPISZ_DANE">
            <summary>
            Schreibe Struct (sa uzywane do posuwu recznego i do dosylania danych do bufora)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.X">
            <summary>
            Daten für X Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.Y">
            <summary>
            Daten für Y Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.Z">
            <summary>
            Daten für Z Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.A">
            <summary>
            Daten für A Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.B">
            <summary>
            Daten für B Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.dane_osi">
            <summary>
            kierunki i os wiodaca: 8bit: bitnummer od 7 do 3 okresla kierunek w danej osi (7= os X, 6 os Y, 5 os Z, 4 os A, 3 os B),
            od 2 do 0 okresla os wiodaca wartsci (1 = X, 2 = Y, 3 = Z, 4 = A, 5 = B)
            
            W wypadku jazdy recznej informacja zawiera nastepujace dane (siehe Klasse mit Kontanten: C_ManualMove.....):
            X+    1
            X-    2
            Y+    3
            Y-    4
            Z+    5
            Z-    6
            A+    7
            A-    8
            B+    9
            B-    10
            X+Y+  11
            X+Y-  12
            X-Y+  13
            X-Y-  14
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.StartSpeed">
            <summary>
            Start Geschwindigkeit (wird nur am Anfang beim Start verwendet)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.Speed">
            <summary>
            Geschwindigkeit in Pic Einheit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.WYJSCIA">
            <summary>
            Pins Schalten (Con2, Con3,...)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.PWM_spindle">
            <summary>
            Regulacja obrotow wrzeciona
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.dane_Status">
            <summary>
            Status der Daten (Konstanten C_JobEnd und C_JobChangeOfSpeedAllowed, C_SendPenultimatePackage)
            1 - Koniec danych Befehl - Pic32DLL.C_JobEnd
            2 - Zmiana szybkosci dozwolona (w szybkosci jalowej zmiana szybkosci podczas pracy jest nie dozwolona) - Befehl Pic32DLL.C_JobChangeOfSpeedAllowed
            4 - --------------------------------- leer -> keine Verwendung ---------------------------------
             dieser flag ist abgeschaltet -> 8 - Informacja ze dana szybkosc jest nizsza od szybkosci startstop co oznacza ze niema rampy
            16 - Wlacza PWM 2
            32 - Wlacza PWM 3
            64 - wlacz reduce flip
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.Czekaj">
            <summary>
            Wartezeit in Millisekunden
            
             0 - keine Funktion
             1 - 32767 Wartezeit in Millisekunden (bis etwa 32 sekunden)
            -1 - Befehl M00, Maschine wird angehalten
            
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DOPISZ_DANE.ReduceFlip">
            <summary>
            Anzahl Steps dass nicht beschleunigt werden sollen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.DOPISZ_DANE.GetTitle">
            <summary>
            DStruct Titel string ausgeben
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.DOPISZ_DANE.ToString">
            <summary>
            Struct als string zurückgeben
            </summary>
            <returns>struct als string</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.JUST_XY">
            <summary>
            Doppelantrieb justieren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.JUST_XY.dane_osi">
            <summary>
            kierunki i os wiodaca: 8bit: bitnummer od 7 do 3 okresla kierunek w danej osi (7= os X, 6 os Y, 5 os Z, 4 os A, 3 os B),
            od 2 do 0 okresla os wiodaca wartsci (1 = X, 2 = Y, 3 = Z, 4 = A, 5 = B)
            
            W wypadku jazdy recznej informacja zawiera nastepujace dane (siehe Klasse mit Kontanten: C_ManualMove.....):
            X+    1
            X-    2
            Y+    3
            Y-    4
            Z+    5
            Z-    6
            A+    7
            A-    8
            B+    9
            B-    10
            X+Y+  11
            X+Y-  12
            X-Y+  13
            X-Y-  14
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA">
            <summary>
            Structura do jazdy i do odjezdzania od lacznika
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA.Speed">
            <summary>
            Geschwindigkeit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA.WEJSCIE">
            <summary>
            Pins Schalten (Con2, Con3,...) od 1 do 20
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA.INWERTUJ">
            <summary>
            Eingang als Öffner/Schliesser definieren. Wenn die gleiche Pin- Nummer gesetzt, dann wird invertiert.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA.dane_osi">
            <summary>
            kierunki i os wiodaca: 8bit: bitnummer od 7 do 3 okresla kierunek w danej osi (7= os X, 6 os Y, 5 os Z, 4 os A, 3 os B),
            od 2 do 0 okresla os wiodaca wartsci (1 = X, 2 = Y, 3 = Z, 4 = A, 5 = B)
            
            W wypadku jazdy recznej informacja zawiera nastepujace dane (siehe Klasse mit Kontanten: C_ManualMove.....):
            X+    1
            X-    2
            Y+    3
            Y-    4
            Z+    5
            Z-    6
            A+    7
            A-    8
            B+    9
            B-    10
            X+Y+  11
            X+Y-  12
            X-Y+  13
            X-Y-  14
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.ReadData">
            <summary>
            Lese Struct (czyta pozycje maszyny, status pinow, szybkosc pracy)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.X">
            <summary>
            Absolute X Koordinate
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.Y">
            <summary>
            Absolute Y Koordinate
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.Z">
            <summary>
            Absolute Z Koordinate
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.A">
            <summary>
            Absolute A Koordinate
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.B">
            <summary>
            Absolute B Koordinate
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.Speed">
            <summary>
            Geschwindigkeit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.L_Wekt">
            <summary>
            Position Zähler
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.WEJSCIA">
            <summary>
            Eingänge (przekazniki i wylaczniki krancowe)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.WYJSCIA">
            <summary>
            Ausgänge Pins (przekazniki)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.JobMode">
            <summary>
            Job Status der Maschine
            Bit Nr. 1 Wartosc 1 - bit zapalony, Puffer leer weitere Daten senden
            Bit Nr. 3 Wartosc 4 - bit zapalony to jedzie maszyna 0 to stoi
            Bit 15, Wert 128, Wert 32768 dann Buffer der Größe 900, sonst 450                                        
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.JoystickVersion">
            <summary>
            Joystick- Firmware Version
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.PWM_Number">
            <summary>
            Nummer des aktiven PWM Ausgangs (zwischen 0 bis 2)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.TimeTotal">
            <summary>
            Gesamte Arbeitszeit des Controllers
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.Options">
            <summary>
            Bit 0 für Doppelantrieb                         Wert 0 = X2 oder Y2 referenziert
                                                            Wert 1 = X oder Y referenziert
            
            Bit 1 für M00                                   Wert 2 = Maschine wartet auf Benutzer (angehalten und fortfahren) 
             
            Bit 2 für Debug Modus für Job                   Wert 4 (Bit gesetzt) Daten können gelesen werden
            
            Bit 3 für Firmware Handrad(Schritt 1)           Wert 8 (Bit gesetzt) Firmware- Daten können für Handrad gesendet werden
            
            Bit 4 für Firmware Handrad                      Wert 16 (Bit gesetzt) Firmware- Daten sind komplett durch. Smc5d-u2 spielt Firmware aufs Handrad drauf
            
            Bit 5 Sicherheiteinstellung                     Wert 32 (Bit gesetzt) Wenn Eingang 8 nicht an (con2), dann Kontroller gestoppt!
            
            Bit 6 für Firmware Joystick                     Wert 64 (Bit gesetzt) Firmware- Daten können für Joystick gesendet werden
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.Error">
            <summary>
            Hier werden Fehlermeldungen vom Pic32 gemeldet.
            
            ab Nummer 200 Laser Fehler. 
            Hinweis! Wenn Fehler dann im AD1 und AD2 ist Error Code. Diese beiden AD1 und AD2 müssen zu uint zusammengefügt werden
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.Version">
            <summary>
            Bit 0 bis Bit 3 Wert 0 = Pro Version, 1 = EAS ECO, 2 = ncBASIC ST, 3 = cncGraF Standard 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.AD1">
            <summary>
            Analoger Input 1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.AD2">
            <summary>
            Analoger Input 2
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.Update">
            <summary>
            Bit 15 - wenn gesetzt, dann weitere Daten senden, 0 warten
            Bit 16 - wenn gesetzt, system wird neu gestartet
            
            Bit 1-14 numer wersji firmware
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.PWM_spindle">
            <summary>
            Regulacja obrotow wrzeciona
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.Backlash">
            <summary>
            Umkehrspiel- Info
            Bit 0 = X (wenn an, dann letzte Fahrt in Plus)
            Bit 1 = Y
            Bit 2 = Z
            Bit 3 = A
            Bit 4 = B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.InspectionTime">
            <summary>
            Arbeitszeit der Maschine
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.HardwareKey">
            <summary>
            Handrad
            128 - Handrad ist aktiv
              1 - F1 Taste
              2 - F2 Taste
              ....
              ....
              ....
              ....
              7  - F7 Taste
              12 - F12 Taste
              20 - Move Reference
              21 - Move Zero
              22 - Move Park
              23 - Spindel on/off
              24 - Set X
              25 - Set Y
              26 - Set Z
              27 - Pump on/off
              28 - Start
              29 - Continue
              30 - Pause
              31 - ESC
              32 - OK
              33 - Software- NOT-AUS!
              34 - Plus für Spindeldrehzahl (nur wenn Job läuft)
              35 - Minus für Spindeldrehzahl (nur wenn Job läuft)
            
             Joystick
              41 - F1 Taste
              42 - F2 Taste 
              43 - F3 Taste
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.HandwheelVersion">
            <summary>
            Handrad- Firmware Version
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.SpeedPercent">
            <summary>
            Job Geschwindigkeit in Wert 1 bis 255 (nach Prozent umrechnen).
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.ReadData.Wait">
            <summary>
            Wartezeit in Sekunden (bis 255 Sekunden)
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.ReadData.ToString">
            <summary>
            Struct als string zurückgeben
            </summary>
            <returns>struct als string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.ReadData.Clear">
            <summary>
            Alle Werte werden auf 0 gesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.ReadData.GetInToBytes">
            <summary>
            IN (ushort) nach byte arrray konvertieren
            </summary>
            <returns>Byte Array</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.ReadData.GetOutToBytes">
            <summary>
            OUT (ushort) nach byte arrray konvertieren
            </summary>
            <returns>Byte Array</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.OdczytajDane_Extra_Axes">
            <summary>
            Lese Struct (czyta pozycje maszyny, status pinow, szybkosc pracy)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.OdczytajDane_Extra_Axes.E1">
            <summary>
            Absolute E1 Koordinate
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.OdczytajDane_Extra_Axes.E2">
            <summary>
            Absolute E2 Koordinate
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.OdczytajDane_Extra_Axes.E3">
            <summary>
            Absolute E3 Koordinate
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.OdczytajDane_Extra_Axes.E4">
            <summary>
            Absolute E4 Koordinate
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.OdczytajDane_Extra_Axes.E5">
            <summary>
            Absolute E5 Koordinate
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Read_Backlash_Status">
            <summary>
            Lese Struct (czyta aktualne wartsoci luzow)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Read_Backlash_Status.BacklashX">
            <summary>
            Altueller X Umkehrspiel- Wert in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Read_Backlash_Status.BacklashY">
            <summary>
            Altueller Y Umkehrspiel- Wert in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Read_Backlash_Status.BacklashZ">
            <summary>
            Altueller Z Umkehrspiel- Wert in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Read_Backlash_Status.BacklashA">
            <summary>
            Altueller A Umkehrspiel- Wert in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Read_Backlash_Status.BacklashB">
            <summary>
            Altueller B Umkehrspiel- Wert in Steps
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.INIT">
            <summary>
            INIT Struct (dane startowe dla os, parametry ustawienia)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.max_X">
            <summary>
            Verfahrweg X in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.max_Y">
            <summary>
            Verfahrweg Y in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.max_Z">
            <summary>
            Verfahrweg Z in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.max_A">
            <summary>
            Verfahrweg A in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.max_B">
            <summary>
            Verfahrweg B in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.V_start_stopX">
            <summary>
            StartStop Geschwindigkeit X
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.V_start_stopY">
            <summary>
            StartStop Geschwindigkeit Y
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.V_start_stopZ">
            <summary>
            StartStop Geschwindigkeit Z
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.V_start_stopA">
            <summary>
            StartStop Geschwindigkeit A
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.V_start_stopB">
            <summary>
            StartStop Geschwindigkeit B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Speed_Increment">
            <summary>
             Beschleunigung, die Erhöhung der Geschwindigkeit im Verhältnis zu den Schritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.CON2_OUTPUTS">
            <summary>
            Ausgangswerte (Schließer/Öffner) für Ausgänge CON2
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.CON3_OUTPUTS">
            <summary>
            Ausgangswerte (Schließer/Öffner) für Ausgänge CON3
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.CON4_OUTPUTS">
            <summary>
            Ausgangswerte (Schließer/Öffner) für Ausgänge CON4
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Free">
            <summary>
            Beschleunigung, die Erhöhung der Geschwindigkeit im Verhältnis zu den Schritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Increment_Slope">
            <summary>
            Beschleunigung, die Steigung der Rampe (Default Wert ist 10)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Security_Z_Heigth">
            <summary>
            Minimale Z Höhe, die die CNC Maschine anfahren darf
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Reset_Absolut_Axis_Counter">
            <summary>
            Reset Achsen
            
             X = 1
             Y = 2
             Z = 4
             A = 8
             B = 16
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Manual_Moving_Axis_Monitoring">
            <summary>
            Überwachung der Achsen für Manuell bewegen (zapalony bit to nadzorowanie wlaczone)
            </summary>
             00000000 
                ||||| X
                ||||  Y
                |||   Z
                ||    A
                |     B
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Enabling_X2_Y2">
            <summary>
            Bit 1 Einschalten oder ausschalten der X2/Y2 Funktion.
            Bit 2 Y2 wird eingeschaltet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Slope">
            <summary>
            Kurvenverlauf
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Debug">
            <summary>
            Bit 1 Job läuft in Debug Modus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.Options">
            <summary>
            Bit 1 -> aktiviert zu schaltbare Achsen (bis 5 Achsen)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT.SecurityTime">
            <summary>
            Abfrage zw. 0,5 und 2 Sekunden bis eine Arbeit unterbrochen wird. Wert 5-20, 5/10 ergibt 0,5 Sekunden. Wenn 0 dann wird automatisch auf Wert 20 (2 Sekunden) gesetzt. 
            255 schaltet die Überwachung aus.
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.INIT2">
            <summary>
            INIT Struct (dane startowe dla os, parametry ustawienia)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.BacklashX">
            <summary>
            X Umkehrspiel in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.BacklashY">
            <summary>
            Y Umkehrspiel in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.BacklashZ">
            <summary>
            Z Umkehrspiel in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.BacklashA">
            <summary>
            A Umkehrspiel in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.BacklashB">
            <summary>
            B Umkehrspiel in Steps
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.Options">
            <summary>
            Bit 1 -> (Wert 1) Aktiviert Umkehrspiel
            Bit 2 -> (Wert 2) Job-Test-Modus (keine Daten werden gesendet)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.PauseSlope">
            <summary>
            Von 1 bis 10, langsam 1, schnell 10
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.MaxFreq">
            <summary>
            Wert 1 -bis 150 Herz, 150 ist maximal
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.Free2">
            <summary>
            Frei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.MaxSpeed">
            <summary>
            Maximale Geschwindigkeit innerhalb Jobs. Dieser Parameter wird für Geschwindigkeit-Änderung benötigt .
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.IP">
            <summary>
            IP Adresse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.Mask">
            <summary>
            Mask (Default 255.255.255.0)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.DefaultGateway">
            <summary>
            Default Gateway (default 192.168.0.1)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.Out8kHz">
            <summary>
            Ausgang 8 kHz
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.Free">
            <summary>
            Faktor- Parameter zwischen 1 und 10
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.SpeedChangerLevel">
            <summary>
            Geschwindigkeit- Änderung (Wert zwischen 1 bis 16, 1 - schnell, 16 -langsam). 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT2.StepDirectionTime">
            <summary>
            Step-Direction Time Delay, Wert zwischen 0 ms bis 255 ms
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL">
            <summary>
            INIT Handrad Struktur
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps01X">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für X Achse und für die Funktion 0,1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps01Y">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für Y Achse und für die Funktion 0,1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps01Z">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für Z Achse und für die Funktion 0,1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps01A">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für A Achse und für die Funktion 0,1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps01B">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für B Achse und für die Funktion 0,1
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps001X">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für X Achse und für die Funktion 0,01
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps001Y">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für Y Achse und für die Funktion 0,01
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps001Z">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für Z Achse und für die Funktion 0,01
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps001A">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für A Achse und für die Funktion 0,01
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.Steps001B">
            <summary>
            Geschwindigkeit Schritte in der Sekunde für B Achse und für die Funktion 0,01
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.V_MaxXY">
            <summary>
            Maximale Geschwindigkeit XY für Manuell Bewegen über das Handrad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.V_MaxZ">
            <summary>
            Maximale Geschwindigkeit Z für Manuell Bewegen über das Handrad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.V_MaxA">
            <summary>
            Maximale Geschwindigkeit A für Manuell Bewegen über das Handrad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.V_MaxB">
            <summary>
            Maximale Geschwindigkeit B für Manuell Bewegen über das Handrad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_HANDWHEEL.PitchWheel">
            <summary>
            Radsteigung (1 langsamm, 255 schnell)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.INIT_JOYSTICK">
            <summary>
            INIT Handrad Struktur
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free1">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free2">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free3">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free4">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free5">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free6">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free7">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free8">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free9">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free10">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.V_MaxXY">
            <summary>
            Maximale Geschwindigkeit XY für Manuell Bewegen über das Handrad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.V_MaxZ">
            <summary>
            Maximale Geschwindigkeit Z für Manuell Bewegen über das Handrad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free11">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.Free12">
            <summary>
            unbenutzt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_JOYSTICK.PitchWheel">
            <summary>
            Radsteigung (1 langsamm, 255 schnell)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.INIT_EXTRA_AXES">
            <summary>
            INIT Struct (dane startowe dla os, parametry ustawienia)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_EXTRA_AXES.Z">
            <summary>
            1 = Z
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_EXTRA_AXES.A">
            <summary>
            1 = Z
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_EXTRA_AXES.B">
            <summary>
            1 = Z
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_EXTRA_AXES.Dumy">
            <summary>
            1 = Z
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_EXTRA_AXES.Reset_Absolut_Axtra_Axis_Counter">
            <summary>
            Reset Achsen
            
             E1 = 1
             E2 = 2
             E3 = 4
             E4 = 8
             E5 = 16
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.INIT_REFERENCE">
            <summary>
            INIT Struct (dane startowe dla referencji i wejsc)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.X_REFERENCE">
             <summary>
             X Referenzschalter 
             
             für Achsen          X,Y,Z,A,B,X2,DL,SCANN	  Pins im Controller
            
             PinNummer für Benutzer      Ausgang des Controller          Wartosc HEX (decimal)
             1 ------------------------- (19) -------------------------- 0x01        (1)  
             2                           (21)                            0x02        (2)
             3 ------------------------- (23) -------------------------- 0x04        (4)   
             4                           (25)                            0x80        (128)  
             5 ------------------------- (20) -------------------------- 0x08        (8)
             6                           (4)                             0x10        (16)
             7 ------------------------- (12) -------------------------- 0x20        (32)
             8                           (22)                            0x40        (64)
             </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.Y_REFERENCE">
             <summary>
             Y Referenzschalter 
             
              für Achsen         X,Y,Z,A,B,X2,DL,SCANN	  Pins im Controller
            
             PinNummer für Benutzer      Ausgang des Controller          Wartosc HEX (decimal)
             1 ------------------------- (19) -------------------------- 0x01        (1)  
             2                           (21)                            0x02        (2)
             3 ------------------------- (23) -------------------------- 0x04        (4)   
             4                           (25)                            0x80        (128)  
             5 ------------------------- (20) -------------------------- 0x08        (8)
             6                           (4)                             0x10        (16)
             7 ------------------------- (12) -------------------------- 0x20        (32)
             8                           (22)                            0x40        (64)
             </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.Z_REFERENCE">
             <summary>
             Z Referenzschalter 
             
             für Achsen          X,Y,Z,A,B,X2,DL,SCANN	  Pins im Controller
            
             PinNummer für Benutzer      Ausgang des Controller          Wartosc HEX (decimal)
             1 ------------------------- (19) -------------------------- 0x01        (1)  
             2                           (21)                            0x02        (2)
             3 ------------------------- (23) -------------------------- 0x04        (4)   
             4                           (25)                            0x80        (128)  
             5 ------------------------- (20) -------------------------- 0x08        (8)
             6                           (4)                             0x10        (16)
             7 ------------------------- (12) -------------------------- 0x20        (32)
             8                           (22)                            0x40        (64)
             </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.A_REFERENCE">
             <summary>
             A Referenzschalter 
             
             für Achsen          X,Y,Z,A,B,X2,DL,SCANN	  Pins im Controller
            
             PinNummer für Benutzer      Ausgang des Controller          Wartosc HEX (decimal)
             1 ------------------------- (19) -------------------------- 0x01        (1)  
             2                           (21)                            0x02        (2)
             3 ------------------------- (23) -------------------------- 0x04        (4)   
             4                           (25)                            0x80        (128)  
             5 ------------------------- (20) -------------------------- 0x08        (8)
             6                           (4)                             0x10        (16)
             7 ------------------------- (12) -------------------------- 0x20        (32)
             8                           (22)                            0x40        (64)
             </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.B_REFERENCE">
             <summary>
             B Referenzschalter 
             
             für Achsen          X,Y,Z,A,B,X2,DL,SCANN	  Pins im Controller
            
             PinNummer für Benutzer      Ausgang des Controller          Wartosc HEX (decimal)
             1 ------------------------- (19) -------------------------- 0x01        (1)  
             2                           (21)                            0x02        (2)
             3 ------------------------- (23) -------------------------- 0x04        (4)   
             4                           (25)                            0x80        (128)  
             5 ------------------------- (20) -------------------------- 0x08        (8)
             6                           (4)                             0x10        (16)
             7 ------------------------- (12) -------------------------- 0x20        (32)
             8                           (22)                            0x40        (64)
             </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.X2_REFERENCE">
            <summary>
            X2 Referenzschalter 
            
            PinNummer für Benutzer      Ausgang des Controller          Wartosc HEX (decimal)
            1 ------------------------- (19) -------------------------- 0x01        (1)  
            2                           (21)                            0x02        (2)
            3 ------------------------- (23) -------------------------- 0x04        (4)   
            4                           (25)                            0x80        (128)  
            5 ------------------------- (20) -------------------------- 0x08        (8)
            6                           (4)                             0x10        (16)
            7 ------------------------- (12) -------------------------- 0x20        (32)
            8                           (22)                            0x40        (64)        
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.V_REFERENCE_XY">
            <summary>
            Referenzgeschwindigkeit XY
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.V_REFERENCE_Z">
            <summary>
            Referenzgeschwindigkeit Z
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.V_REFERENCE_A">
            <summary>
            Referenzgeschwindigkeit A
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.V_REFERENCE_B">
            <summary>
            Referenzgeschwindigkeit B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.ReferencePoint">
            <summary>
            0 = XMinYMin, XMinYMax = 1, XMaxYMax = 2, XMaxYMin = 3
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.Increment_Slope">
            <summary>
            Beschleunigung, die Steigung der Rampe (Default Wert ist 10)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.MOVE_FROM_X">
            <summary>
            Nach Referenzfahrt X vom Schalter wegfahren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.MOVE_FROM_Y">
            <summary>
            Nach Referenzfahrt Y vom Schalter wegfahren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.MOVE_FROM_Z">
            <summary>
            Nach Referenzfahrt Z vom Schalter wegfahren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.MOVE_FROM_A">
            <summary>
            Nach Referenzfahrt A vom Schalter wegfahren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.OpenCloseSwitch">
            <summary>
            Öffner/Schließer definieren (1 ist Schließer, 0 ist Öffner)
            
            Beispiel: X Achse hat Pinnummer 4 (Benutzer), Wert 128, und wenn als Schließer dann OpenCloseSwitch += 128 (Bit 7 gesetzt)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.Speed_Increment">
            <summary>
            Beschleunigung, die Erhöhung der Geschwindigkeit im Verhältnis zu den Schritten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.OnOffAxes">
            <summary>
            Achsen werden aktiviert oder deaktiviert (X = 1, Y = 2, Z = 4, A = 8, B = 16)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.MOVE_FROM_B">
            <summary>
            Nach Referenzfahrt B vom Schalter wegfahren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_REFERENCE.StatusReference">
            <summary>
            1 = Referenz darf ausgeführt werden
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.INIT_LASER">
            <summary>
            INIT_LASER Struct (dane dla lasera)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.StartPower">
            <summary>
            Start Power in Prozent (Wert 1 bis 1000 eine Stelle nach dem Komma) von 1% bis 60%
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.MaxPower">
            <summary>
            Maximale Power in Prozent (Wert 1 bis 1000 eine Stelle nach dem Komma) 1% bis 100%
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.Duty">
            <summary>
            nie uzywane
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.OutputGranit">
            <summary>
            minimalny okres impulsow w trybie Period 10-6000
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.LengthOfOutputGranit">
            <summary>
            Länge wie lange der Ausgang geschaltet wird (Wert 1 - 250) * 100
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.OptionsGranit">
            <summary>
            dlugosc impulsu w trybie Period  3-1000
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.MaxSpeed">
            <summary>
            Maximale Geschwindigkeit in Period-Einheit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.Manual_Duty_max">
            <summary>
            Maximale Duty für manuel bewegen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.ID">
            <summary>
            Eindeutige ID 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.Output">
            <summary>
            Relay für Laser
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.INIT_LASER.Options">
            <summary>
            Bit 1:
            0 - 'Period' ist aktiv -> Bit 1 wird nicht verwendet
            1 - 'Duty' ist aktiv   -> Bit 1 wird nicht verwendet
            
            Bit 2 - Laser eingeschaltet oder ausgeschaltet
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE">
            <summary>
            LASER_ODCZYTAJ_DANE Struct (dane dla lasera sa czytane podczas pracy lasera 'online')
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE.XY_freq">
            <summary>
            XY Frequenz in Hz
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE.Pwm_period">
            <summary>
            Period
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE.Pwm_duty">
            <summary>
            Duty
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE.Status">
            <summary>
            Status des Lesers wobei:
            
            00000000  00000000
                             1 - USB Verbindung besteht
                             2 - Laser ist on
                             4 - Manualna regulacja jest mozliwa
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE.LaserPowerOffset">
            <summary>
            Zeigt die Abweichung der Leistung, geändert durch Potentiometer
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE.Clear">
            <summary>
            Alle Werte werden auf 0 gesetzt
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.DEBUG_JOB">
            <summary>
            Schreibe Struct (sa uzywane do posuwu recznego i do dosylania danych do bufora)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.X">
            <summary>
            Daten für X Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.Y">
            <summary>
            Daten für Y Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.Z">
            <summary>
            Daten für Z Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.A">
            <summary>
            Daten für A Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.B">
            <summary>
            Daten für B Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.dane_osi">
            <summary>
            kierunki i os wiodaca: 8bit: bitnummer od 7 do 3 okresla kierunek w danej osi (7= os X, 6 os Y, 5 os Z, 4 os A, 3 os B),
            od 2 do 0 okresla os wiodaca wartsci (1 = X, 2 = Y, 3 = Z, 4 = A, 5 = B)
            
            W wypadku jazdy recznej informacja zawiera nastepujace dane (siehe Klasse mit Kontanten: C_ManualMove.....):
            X+    1
            X-    2
            Y+    3
            Y-    4
            Z+    5
            Z-    6
            A+    7
            A-    8
            B+    9
            B-    10
            X+Y+  11
            X+Y-  12
            X-Y+  13
            X-Y-  14
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.StartSpeed">
            <summary>
            Start Geschwindigkeit (wird nur am Anfang beim Start verwendet)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.Speed">
            <summary>
            Geschwindigkeit in Pic Einheit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.WYJSCIA">
            <summary>
            Pins Schalten (Con2, Con3,...)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.PWM_spindle">
            <summary>
            Regulacja obrotow wrzeciona
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.dane_Status">
            <summary>
            Status der Daten (Konstanten C_JobEnd und C_JobChangeOfSpeedAllowed, C_SendPenultimatePackage)
            1 - Koniec danych Befehl - Pic32DLL.C_JobEnd
            2 - Zmiana szybkosci dozwolona (w szybkosci jalowej zmiana szybkosci podczas pracy jest nie dozwolona) - Befehl Pic32DLL.C_JobChangeOfSpeedAllowed
            4 - --------------------------------- leer -> keine Verwendung ---------------------------------
             dieser flag ist abgeschaltet -> 8 - Informacja ze dana szybkosc jest nizsza od szybkosci startstop co oznacza ze niema rampy
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.Czekaj">
            <summary>
            Wartezeit in Millisekunden
            
             0 - keine Funktion
             1 - 32767 Wartezeit in Millisekunden (bis etwa 32 sekunden)
            -1 - Befehl M00, Maschine wird angehalten
            
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.VSpeed">
            <summary>
            Geschwindigkeit in Pic Einheit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.VSpeedActual">
            <summary>
            Aktuelle Geschwindigkeit
            </summary>       
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.WParam">
            <summary>
            WParam
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.Period">
            <summary>
            Periond
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.DEBUG_JOB.PR45">
            <summary>
            PR45
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.DEBUG_JOB.ToString">
            <summary>
            Struct als string zurückgeben
            </summary>
            <returns>struct als string</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Pic32USB">
            <summary>
            Die Klasse beschreibt Zugriff auf PIC32 und ist die einzige Klasse, die über DLLImport auf Pic32 zugreift. 
            Der Zugriff erfolgt serialisiert!
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32USB.myUsbSettings">
            <summary>
            USB Einstellungen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32USB.myODCZYTAJ_DANEStructLength">
            <summary>
            Länge des Schreibe- ByteArrays
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32USB.myINITStructLength">
            <summary>
            Länge der Init Struct (nur zum INIT lesen benötigt) in Bytes
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32USB.mySN">
            <summary>
            Kontroller- SN auf die zugegriffen werden soll
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.#ctor(De.Boenigk.SMC5D.Settings.USBSettings,System.String)">
            <summary>
            Konstruktor dass mit Kontroller- SN  Verbindung aufbaut.
            </summary>
            <param name="aUsbSettings">USB Einstellungen</param>
            <param name="aSN">Seriennummer des Kontrollers mit dem Verbindung aufgebaut werden soll</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.#ctor(De.Boenigk.SMC5D.Settings.USBSettings)">
            <summary>
            Konstruktor dass die Verbindung mit erstem gefundenen Kontroller aufbaut.
            </summary>
            <param name="aUsbSettings">USB Einstellungen</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32USB.ThisLock">
            <summary>
            Privater Objekt für serialisierten Zugriff
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32USB.myLogLevel">
            <summary>
            Level der Logdaten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32USB.myLogDir">
            <summary>
            Logdatei
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.CONNECT(System.String,System.Byte)">
            <summary>
            Verbindung mit USB PIC32 aufbauen
            </summary>
            <param name="aLogDir">Log Verzeichnis</param>
            <param name="aLogLevel">Log Level, 0 - kein, 1 - die wichtigsten Daten, 2 - alles was möglich ist</param>
            <returns>True, Verbindung vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.CONNECT">
            <summary>
            Verbindung mit USB PIC32 aufbauen
            </summary>
            <returns>True, Verbindung vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.OnPic32Command(System.String,System.Int16,System.Byte[])">
            <summary>
            Befehl ausgeführt
            </summary>
            <param name="aText">Text</param>
            <param name="aCommand63">Befehl</param>
            <param name="aBytes">Array</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.IS_CONNECTED">
            <summary>
            Prüft ob die Verbindung existiert
            </summary>
            <returns>True, Verbindung mit PIC32 vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.DIS_CONNECT">
            <summary>
            Verbindung mit USB Pic32 wird getrennt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SET_UPDATE_MODE">
            <summary>
            Aktiviert Firmware-Update Modus
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.BLOCK_INIT_OUTPUTS_ON">
            <summary>
            Ausgänge werden blockiert, d.h. Init Befehl ändert die Ausgänge nicht.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.BLOCK_INIT_OUTPUTS_OFF">
            <summary>
            Blockierung der Ausgänge wird aufgehoben.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_UPDATE_DATA_LINE(System.Byte[])">
            <summary>
            Daten werden in den PIC Speicher geschrieben.
            
            HINWEIS: Diese Methode darf erst nach Methoden Aufruf SET_WRITE_DATA aufgerufen werden.
            </summary>
            <returns>True, Daten an den Kontroller gesendet, false Keine Daten mehr zum senden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WriteLineToPicTester(System.String)">
            <summary>
            Schreibt Text in den PicTester
            </summary>
            <param name="aText">Text</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.ESC">
            <summary>
            Abbruch, Arbeit der CNC Maschine abbrechen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.REBOOT">
            <summary>
            Kontroller wird komplett zurückgesetzt (neu gestartet). Erst nach einem Fehler möglich. Wenn kein Fehler dann hat diese Funktion keine Auswirkung
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.RESET_INSPECTION_TIME">
            <summary>
            Zähler für Arbeitszeit zurücksetzen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.START">
            <summary>
            Start, Arbeit der CNC Maschine starten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.STOP">
            <summary>
            Stop, Manuell bewegen wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WAIT(System.Int32)">
            <summary>
            Verlängert aktuelle Wartezeit in Sekunden (nur wenn Job und wenn gerade Wartezeit ausgeführt wird)
            </summary>
            <param name="aTime">Wartezeit in Sekunden</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.STOP_JOB">
            <summary>
            Stopp, Arbeit der CNC Maschine wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.STOP_MEASURE">
            <summary>
            Stopp, Beim Fahren auf Schalter CNC Maschine anhalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.MANUAL_MOVE(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Posuw reczny
            </summary>
            <param name="aDOPISZ_DANE">Daten Struktur</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.MANUAL_MOVE_STEP(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Posuw reczny krok po kroku
            </summary>
            <param name="aDOPISZ_DANE">Daten Struct</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.READ_DATA">
            <summary>
            Liest ein Byte Array vom PiC32 aus und gibt es in einer Struktur zurück.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SEND_COMMAND(De.Boenigk.SMC5D.Core.Commands.Command,System.String,System.String)">
            <summary>
            Setzt Befehl zum Senden der Daten an den Pic. Dabei wird nur eine leere Struktur 'DOPISZ_DANE' mit dem Befehl 'C_DOPISZ_DANE' verschickt.
            Diese Methode wird intern genutzt um auf senden zuschalten!!
            </summary>
            <param name="aCommand">SMC5D Befehl</param>
            <param name="aMessage">Textnachricht</param>
            <param name="aErrorMessage">Textnachricht im Fehlerfall</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SEND_COMMAND(De.Boenigk.SMC5D.Core.Commands.Command,System.String)">
            <summary>
            Setzt Befehl zum Senden der Daten an den Pic. Dabei wird nur eine leere Struktur 'DOPISZ_DANE' mit dem Befehl 'C_DOPISZ_DANE' verschickt.
            Diese Methode wird intern genutzt um auf senden zuschalten!!
            </summary>
            <param name="aCommand">SMC5D Befehl</param>
            <param name="aErrorMessage">Textnachricht im Fehlerfall</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Pic32USB.myTwoBuffersFull">
            <summary>
            Zählt 2 Buffer, die am Anfang aufgefüllt werden sollen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.INIT_WRITE_DATA">
            <summary>
            Werte zum Senden der Daten werden initialisiert (z.B.: 'myTwoBuffersFull' muss auf 0 gesetzt werden).
            Diese Methode muss vor jedem Job einmal aufgerufen werden.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_DATA(System.Byte[],System.Int32,System.Int32,System.String)">
            <summary>
            Daten werden in den PIC Speicher geschrieben.
            
            HINWEIS: Diese Methode darf erst nach Methoden Aufruf SET_WRITE_DATA aufgerufen werden.
            </summary>
            <param name="aBytes">Byte array dass an den Kontroller gesendet werden (Größe ist Puffergröße also Pic32Buffer.C_StructSizeInBuffer)</param>
            <param name="aSizeBuffer">Speichergröße, als Anzahl der Structuren pro Speicher (Unterschied zwischen Microcontroller- Typen wie C_PIC32MX460F512L oder C_PIC32MX795F512L)</param>
            <param name="aNumberOfStructsInPuffer">Anzahl Structuren in diesem Byte Array (Puffer). Dieser Parameter ist nur Information, und hat keine Funktion</param>
            <param name="aDeltaSum">Im Debug Modus wird die Summe der Deltas angegeben</param>
            <returns>True, Daten an den Kontroller gesendet, false Keine Daten mehr zum senden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_END_COMMAND">
            <summary>
            Keine Daten mehr verfügbar. 
            Eine leere Struktur 'DOPISZ_DANE' mit dem Befehl 'Keine Daten mehr zum senden' wird gesendet.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.RESET_DATA">
            <summary>
            Daten- Speicher wird gelöscht
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.REFERENCE_MOVE(De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA,System.Boolean)">
            <summary>
            Referenzfahrt ausführen
            </summary>
            <param name="aJAZDA_NA_I_OD_LACZNIKA">Daten Struct</param>
            <param name="aToSwitch">True, auf den Schalter, vom Schalter ist false</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.MOVE_TO_FROM_SWITCH(De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA,System.Boolean)">
            <summary>
            Führt eine Fahrt auf Schalter und vom Schalter aus
            </summary>
            <param name="aJAZDA_NA_I_OD_LACZNIKA">Daten Struct, enthält Informationen, die benötigt werden umd ein Fahrt auf/vom Schalter auszuführen</param>
            <param name="aToSwitch">True, auf Schalter sonst vom Schalter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.CHANGE_SPEED(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Ändern der Geschwindigkeit. Die Geschwindigkeit wird in 'DOPISZ_DANE' angegeben.
            </summary>
            <param name="aDOPISZ_DANE">Daten Struct 'DOPISZ_DANE' mit der neuen Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.CHANGE_PUFFER_SIZE(System.UInt16)">
            <summary>
            Ändern der Buffor- Größe. Die Buffor- Größe wird in 'DOPISZ_DANE' angegeben.
            </summary>
            <param name="aSize">Größe des Buffors in structs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SET_UPGRADE_MODE(System.Byte[])">
            <summary>
            Schlüssel um Software von Standard auf Pro zu upgrade. Nach diesem Befehl kann Firmware für Pro Version geladen werden.
            </summary>
            <param name="aKey">Schlüssel als Byte array bis 63 bytes (darf nicht die Structur übersteigen)</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.CONTINUE_JOB">
            <summary>
            Arbeit der Maschine wird nach M00 (Pause) fortgesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_INIT_JOYSTICK(De.Boenigk.SMC5D.Core.INIT_JOYSTICK)">
            <summary>
            Einstellungen des Joysticks initialisieren
            </summary>
            <param name="aINIT_JOYSTICK">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_INIT_HANDWHEEL(De.Boenigk.SMC5D.Core.INIT_HANDWHEEL)">
            <summary>
            Einstellungen des Handrades initialisieren
            </summary>
            <param name="aINIT_HANDWHEEL">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_INIT(De.Boenigk.SMC5D.Core.INIT)">
            <summary>
            Einstellungen der Achsen initialisieren
            </summary>
            <param name="aINIT">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_INIT2(De.Boenigk.SMC5D.Core.INIT2)">
            <summary>
            Einstellungen der Achsen initialisieren
            </summary>
            <param name="aINIT2">Daten Struktur</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.READ_INIT">
            <summary>
            Einstellungen der Achsen lesen
            </summary>
            <returns>INIT</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_INIT_REFERENCJA_WEJSCIA(De.Boenigk.SMC5D.Core.INIT_REFERENCE)">
            <summary>
            Einstellungen der Referenz und Eingänge initialisieren
            </summary>
            <param name="aINIT">Daten Struct</param>
            <returns>True, Write erfolgreich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.READ_INIT_REFERENCJA_WEJSCIA">
            <summary>
            Einstellungen der Referenz und Eingänge lesen
            </summary>
            <returns>INIT_REFERENCE</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.READ_BACKLASH_STATUS">
            <summary>
            Liest Backlash- Status aus
            </summary>
            <returns>OdczytajDane_Backlash_Status</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SET_RELAY(System.UInt32,System.Byte)">
            <summary>
            Schaltet oder ausschaltet ein Relay mit PWM Signal
            </summary>
            <param name="aOut">32 Bit Zahl mit Relays</param>
            <param name="aPWMOut">PWM Signal (0-255)</param>
            <param name="aNumber">PWM Nummer 0, 1 oder 2</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.CHANGE_PWM(System.Byte)">
            <summary>
            Wechselt das Aauslesen des PWM Signals
            </summary>
            <param name="aNumber">PWM Nummer 0, 1 oder 2</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SET_PWM(System.Byte,System.Byte)">
            <summary>
            Schaltet PWM Signal
            </summary>
            <param name="aPWMOut">PWM Signal (0-255)</param>
            <param name="aNumber">PWM Nummer 0, 1 oder 2</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SET_RELAY(System.UInt32)">
            <summary>
            Schaltet oder ausschaltet ein Relay
            </summary>
            <param name="aOut">16 Bit Zahl mit Relays</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SET_LCOUNTER(System.UInt32)">
            <summary>
            Setzt den Job Counter auf einen bestimmten Start- Wert
            </summary>
            <param name="aIndex">Zähler Start- Wert</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SET_COUNTER(De.Boenigk.SMC5D.Core.INIT,De.Boenigk.SMC5D.Core.Counter)">
            <summary>
            X,Y,Z,A und B Zähler werden gesetzt
            </summary>
            <param name="aINIT"> Struct Init in der die Koordinaten stehen</param>
            <param name="aXYZABCounter">Flag für die jeweilige Achse, die gesetzt wird z.B.: X Achse soll gesetzt werden dann Counter.X</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.JustXY(De.Boenigk.SMC5D.Core.JUST_XY)">
            <summary>
            Doppelantrieb justieren
            </summary>
            <param name="aJUST_XY">Struktur mit Daten zum justieren</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_FLASH(System.Byte[])">
            <summary>
            Byte Array der Länge von 64 Bytes in den Flash schreiben
            </summary>
            <returns>Byte Array der Länge von 64 Bytes (letzter Byte ist für Befehl reserviert)</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.READ_FLASH">
            <summary>
            Byte Array der Länge von 64 Bytes aus Flash auslesen
            </summary>
            <returns>Byte Array der Länge von 64 Bytes(letzter Byte ist für Befehl reserviert)</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.WRITE_INIT_LASER_GRANIT(De.Boenigk.SMC5D.Core.INIT_LASER)">
            <summary>
            Laser Einstellungen initialisieren
            </summary>
            <param name="aINIT">Daten Struktur</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.READ_INIT_LASER">
            <summary>
            Laser Einstellungen lesen
            </summary>
            <returns>INIT_LASER</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.READ_LASER_ONLINE">
            <summary>
            Laser Status während der Arbeit lesen
            </summary>
            <returns>LASER_ODCZYTAJ_DANE</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.LASEROn_Off(System.Boolean)">
            <summary>
            Wlacz lub wylacz zmiane Lasera recznie na Power2
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.IsConnected">
            <summary>
            Prüft ob die Verbindung mit PIC 32 besteht. 
            
            Dabei wird mit READ_DATA() die Struct ODCZYTAJ_DANE ausgeselen und überprüft.
            Wenn die Struct ODCZYTAJ_DANE keine Daten enthält (nur 0 Werte) dann gibt es keine Verbindung.
            </summary>
            <returns>True, Verbindung mit Pic32 verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.IsConnected(De.Boenigk.SMC5D.Core.ReadData)">
            <summary>
            Prüft ob die Verbindung mit PIC 32 besteht. Dabei wird der Inhalt der Struct ODCZYTAJ_DANE überprüft.
            Wenn die Struct ODCZYTAJ_DANE keine Daten enthält (nur 0 Werte) dann gibt es keine Verbindung.
            </summary>
            <param name="aODCZYTAJ_DANE">Daten Struct die zuvor mit READ_DATA() ausgelesen wurde</param>
            <returns>True, Verbindung mit Pic32 verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.IsConnected(De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE)">
            <summary>
            Prüft ob die Verbindung mit Pic32 besteht. Dabei wird der Inhalt der Struct 'LASER_ODCZYTAJ_DANE' überprüft.
            Wenn die Struct 'LASER_ODCZYTAJ_DANE' keine Daten enthält (nur 0 Wert) dann gibt es keine Verbindung.
            </summary>
            <param name="aLASER_ODCZYTAJ_DANE">Daten Struct (für Leser) die zuvor mit READ_DATA() ausgelesen wurde</param>
            <returns>True, Verbindung mit Pic32 verfügbar</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.SET_TEST_CON2">
            <summary>
            Testmodus des Kontrollers aktivieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.JEDEN_KROK">
            <summary>
            Jeden krok
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.READ_DEBUG_JOB_DATA">
            <summary>
            DEBUG MODUS für JOB. Liest ein Byte Array vom PiC32 und gibt im Pictester aus
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Pic32USB.CONTINUE_DEBUG_JOB">
            <summary>
            Sendet Befehl an Pic32,  dass der Job fortgesetzt werden soll. Dieser Befehl ist für Job Debug Modus.
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Core.Pic32USB.Pic32Command">
            <summary>
            Event Befehl an Pic32 gesendet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32USB.BufforCounter">
            <summary>
            Gibt die Anzahl der gesendeten Buffors in den Pic Spüeicher
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Pic32USB.IsUSB">
            <summary>
            True, USB Verbindung, False LAN
            </summary>
            <returns>True, USB, False LAN</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Pic32USB.Pic32Delegate">
            <summary>
            Pic32DLL Delegate
            </summary>
            <param name="aText">Text</param>
            <param name="aCommand63">Befehl</param>
            <param name="aBytes">Inhalt des Befehls</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Set`1">
            <summary>
            This class is a Collection of Enums, it can be used to group Enum items,
            a lot of operations are possible like Join, Intersect and many more
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.#ctor(`0[])">
            <summary>
            Creates a Set Class
            This one allows you to fill the new Object with the desired items.
            </summary>
            <param name="enumitems">a list of enum items to add (optional)</param>
            <example><code>s = new Set&lt;T&gt;(Day.Friday, Day.Monday);</code></example>
            <exception cref="T:System.ArgumentException">Thrown when the type isnt an Enum</exception>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Set`1.enumtype">
            <summary>
            Internal: the type of the used Enum
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Set`1.setenums">
            <summary>
            Internal: to store the added Enum items
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.CheckEnumParams(`0[])">
            <summary>
            Internal: to test the given params
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Contains(`0[])">
            <summary>
            Use this function to check if an item or a list of items are in the set
            </summary>
            <param name="enumitems">List of items to check (may be also one item)</param>
            <returns>True if at least the given item(s) are in the set</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <c>value</c> or an item is null</exception>
            <exception cref="T:System.ArgumentException">Thrown when an item of <c>value</c> has the wrong type</exception>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.ContainsExact(`0[])">
            <summary>
            Use this to check the complete content of the set
            </summary>
            <param name="enumitems">List of items to check (may be also one item or even an empty list)</param>
            <returns>True if the current content of the set matches the given list of items exact (order is not important)</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <c>value</c> or an item is null</exception>
            <exception cref="T:System.ArgumentException">Thrown when an item of <c>value</c> has the wrong type</exception>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.IsEmpty">
            <summary>
            Checks if the set is empty
            </summary>
            <returns>True if set is empty</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Add(`0[])">
            <summary>
            Adds items to the set
            </summary>
            <param name="enumitems">a list of enum items to add</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <c>value</c> or an item is null</exception>
            <exception cref="T:System.ArgumentException">Thrown when an item of <c>value</c> has the wrong type</exception>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Remove(`0[])">
            <summary>
            removes items from the set
            </summary>
            <param name="enumitems">a list of enum items to remove</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <c>value</c> or an item is null</exception>
            <exception cref="T:System.ArgumentException">Thrown when an item of <c>value</c> has the wrong type</exception>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Complement">
            <summary>
            This changes the set so that all missing items are now added and all existing items are removed
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Clear">
            <summary>
            Clears the content of the set
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.AddAll">
            <summary>
            This will add all possible Enum items to the set
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Join(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            This will join two sets and return the result (the calling set will not be modified) 
            </summary>
            <param name="OtherSet">the set to join</param>
            <returns>The result of the Join - will contain all the items of <c>this</c> set and all items of the <c>otherset</c></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Minus(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            This will remove the itmes in <c>Otherset</c> from this set and return the result (the calling set will not be modified)
            </summary>
            <param name="OtherSet">the set which items are removed from the set</param>
            <returns>result set</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Intersect(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            This will return a set which contains only the items that are in both sets <c>this, Otherset</c> icluded (the calling set will not be modified)
            </summary>
            <param name="OtherSet">Second set</param>
            <returns>the result - only the sets that are in both sets included</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.XOR(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            XOR operation of the both sets (the calling set will not be modified)
            </summary>
            <param name="OtherSet">Second set</param>
            <returns>returns a set which contains only the items that are in <c>this</c> set and not in <c>OtherSet</c> or
            not in <c>this</c> set and are in <c>OtherSet</c></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Clone">
            <summary>
            Clones a set
            </summary>
            <returns>returns a new object that has the same items than <c>this</c> set</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.IsOverlapping(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            Checks if the both set are overlapping each other which means they have at least one item that is in both sets
            </summary>
            <param name="OtherSet">second set</param>
            <returns>True when overlapping</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.IsSubsetOf(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            Checks if <c>this</c> set is a subset of <c>OtherSet</c> which means that all items of <c>this</c> are in <c>OtherSet</c>
            </summary>
            <param name="OtherSet">second set (superset)</param>
            <returns>true when <c>this</c> set is a subset of <c>OtherSet</c></returns>
            <seealso cref="M:De.Boenigk.SMC5D.Core.Set`1.IsStrictSubsetOf(De.Boenigk.SMC5D.Core.Set{`0})"/>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.IsStrictSubsetOf(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            same like <see>IsSubsetOf</see> but result is only true if the <c>OtherSet</c> is the superset and is not equal to <c>this</c> set 
            </summary>
            <param name="OtherSet">second set (superset)</param>
            <returns>true when <c>this</c> set is a subset of <c>OtherSet</c> and they are not equal</returns>
            <seealso cref="M:De.Boenigk.SMC5D.Core.Set`1.IsSubsetOf(De.Boenigk.SMC5D.Core.Set{`0})"/>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.IsSupersetOf(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            Checks if <c>this</c> set is a superset of <c>OtherSet</c> which means that all items of <c>OtherSet</c> are in <c>&gt;this</c> set
            </summary>
            <param name="OtherSet">second set (subset)</param>
            <returns>true when <c>this</c> set is a superset of <c>OtherSet</c></returns>
            <seealso cref="M:De.Boenigk.SMC5D.Core.Set`1.IsStrictSupersetOf(De.Boenigk.SMC5D.Core.Set{`0})"/>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.IsStrictSupersetOf(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            same like <see>IsSupersetOf</see> but result is only true if the <c>OtherSet</c> is the subset and is not equal to <c>this</c> set 
            </summary>
            <param name="OtherSet">second set (subset)</param>
            <returns>true when <c>this</c> set is a superset of <c>OtherSet</c> and they are not equal</returns>
            <seealso cref="M:De.Boenigk.SMC5D.Core.Set`1.IsSubsetOf(De.Boenigk.SMC5D.Core.Set{`0})"/>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Equals(System.Object,System.Object)">
            <summary>
            Checks if both sets are equal
            </summary>
            <param name="objA">Should be a <c>Set</c></param>
            <param name="objB">Should be a <c>Set</c></param>
            <returns>True if both objects are of type <c>Set</c> and their content is equal</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Equals(System.Object)">
            <summary>
            Checks if the given set has the same content than <c>this</c> set
            </summary>
            <param name="obj">Second set</param>
            <returns>True if <c>obj</c>is of type <c>Set</c> and their content is equal</returns>
            <seealso cref="M:De.Boenigk.SMC5D.Core.Set`1.Equals(System.Object,System.Object)"/>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.GetHashCode">
            <summary>
            This method is not useful, because you cannot calculate a int hashvalue for a set (set can contain more than 32 bit).
            It is only written to supress a warning.
            </summary>
            <returns>returns the base Hashcode</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.Parse(System.String)">
            <summary>
            Parses a string that contains enum items
            </summary>
            <remarks>Don't use the type here (<c>Day.Monday"</c>) use just <c>"Monday"</c>'</remarks>
            <param name="value">a string that contains enum items (',' separated)</param>
            <returns>an array with the parsed enum items</returns>
            <seealso cref="M:De.Boenigk.SMC5D.Core.Set`1.ParseAdd(System.String)"/>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.FromString(System.String)">
            <summary>
            Creates a new set from parsing a string
            </summary>
            <param name="value">the enum items separated by comma</param>
            <returns>a new instance of Set</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.FromRange(`0,`0)">
            <summary>
            Creates an Enum Set, populated from low to high (including)
            </summary>
            <param name="low">low item, will be first item in result</param>
            <param name="high">high item, will be last item in result</param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.ParseAdd(System.String)">
            <summary>
            Parses a string that contains enum items and adds it to the set
            </summary>
            <remarks>Don't use the type here (<c>Day.Monday"</c>) use just <c>"Monday"</c>'</remarks>
            <param name="value">a string that contains enum items (',' separated)</param>
            <seealso cref="M:De.Boenigk.SMC5D.Core.Set`1.Parse(System.String)"/>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.CheckFlagged">
            <summary>
            Checks if the type T has the Flags Attribute
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Thrown when the type has not the FlagsAttribute</exception>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.IsFlags">
            <summary>
            Looks if the type T has the FlagsAttribute
            </summary>
            <returns>true if the attribute Flags is defined</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.ToFlaggedEnum">
            <summary>
            This function is useful if you want to pass the "original-style" set to another method
            The bits of the return value are set corresponding to the items in the Set
            </summary>
            <returns>An Enum</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.FromFlaggedEnum(`0)">
            <summary>
            Creates a new Set based on the given value
            This is only valid when the type T is an Enum which has the FlagsAttribute
            </summary>
            <param name="value">An Enum</param>
            <returns>A new Set filled with the given items</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_Implicit(De.Boenigk.SMC5D.Core.Set{`0})~System.String">
            <summary>
            Manages the conversion to String
            </summary>
            <param name="s">set</param>
            <returns>the set's items as string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.ToString">
            <summary>
            Manages the conversion to String
            </summary>
            <returns>the set's items as string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_Equality(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.Equals(System.Object,System.Object)"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_Inequality(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.Equals(System.Object,System.Object)"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_LessThan(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.IsStrictSubsetOf(De.Boenigk.SMC5D.Core.Set{`0})"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_LessThanOrEqual(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.IsSubsetOf(De.Boenigk.SMC5D.Core.Set{`0})"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_GreaterThan(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.IsStrictSupersetOf(De.Boenigk.SMC5D.Core.Set{`0})"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_GreaterThanOrEqual(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.IsSupersetOf(De.Boenigk.SMC5D.Core.Set{`0})"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_Addition(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.Join(De.Boenigk.SMC5D.Core.Set{`0})"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_Subtraction(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.Minus(De.Boenigk.SMC5D.Core.Set{`0})"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_Multiply(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.Intersect(De.Boenigk.SMC5D.Core.Set{`0})"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_ExclusiveOr(De.Boenigk.SMC5D.Core.Set{`0},De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            see <see cref="M:De.Boenigk.SMC5D.Core.Set`1.XOR(De.Boenigk.SMC5D.Core.Set{`0})"/>
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.op_OnesComplement(De.Boenigk.SMC5D.Core.Set{`0})">
            <summary>
            <see cref="M:De.Boenigk.SMC5D.Core.Set`1.Complement"/>
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.ToString(System.String,System.IFormatProvider)">
            <summary>
            Implements IFormattable
            </summary>
            <param name="format"></param>
            <param name="formatProvider"></param>
            <returns>textual representation of a set</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Implements IEnumerable
            </summary>
            <returns>IEnumerator&lt;T&gt;</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Set`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Implements IEnumerator
            </summary>
            <returns>IEnumerator</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Set`1.Count">
            <summary>
            returns the amount of enums that are stored in the set
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Set`1.Enums">
            <summary>
            direct access to the stored enum items
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when <c>value</c> or an item is null</exception>
            <exception cref="T:System.ArgumentException">Thrown when an item of <c>value</c> has the wrong type</exception>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim">
            <summary>
            Simuliert den Kontroller (Ähnlich Pic32DLL)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.myDeltaPic">
            <summary>
            Liste mit Daten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.myVector5D">
            <summary>
            Vektor in Schritten ausgeben.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.#ctor(De.Boenigk.SMC5D.Core.ReadData)">
            <summary>
            Konstruktor
            </summary>
            <param name="aOdczytajDane">OdczytajDane</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.WRITE_DATA(System.Collections.Generic.List{De.Boenigk.SMC5D.Core.Mill.P32OutputData})">
            <summary>
            Liste mit Daten für Kontroller hinzufügen
            </summary>
            <param name="aDeltaPic">Daten hinzufügen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.Init">
            <summary>
            Initialisieren des Pic32DllSim Objektes
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.UpdateData">
            <summary>
            Aktualisiert die Daten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.myLSave">
            <summary>
            Speichert die Position
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.ResetOldData">
            <summary>
            Alte Daten werden aus der Liste entfernt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.Speed(System.Int32)">
            <summary>
            Ändert die Geschwindigkeit der Simulation
            </summary>
            <param name="aSpeed">Geschwindigkeit, Wert zwischen -50 / +50, Wert 0 ist mittlere Geschwindigkeit, 50 maximale Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.IsJobHalt">
            <summary>
            True, Programmhalt ausgeführt
            </summary>
            <returns>True, Programmhalt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.IsJobEnd">
            <summary>
            True, Programmende erreicht
            </summary>
            <returns>True, Programmende</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.ESC">
            <summary>
            Arbeit wird sofort abgebrochen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.START">
            <summary>
            Arbeit wird gestartet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.STOP_JOB">
            <summary>
            Arbeit wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.CONTINUE_JOB">
            <summary>
            Arbeit wird fortgesetzt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.DeltaPic">
            <summary>
            Liste mit DOPISZ_DANE Struktur Objekten für den Pic 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.Sim.Pic32DllSim.OdczytajDane">
            <summary>
            Gibt die Daten des Kontrollers zurück (simuliert)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Sim.Vector5D">
            <summary>
            Gibt die Linie von Startpunkt bis Ebdpunkt in Punkten zurück
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Vector5D.SetVector(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Angabe des Vectors
            </summary>
            <param name="aDOPISZ_DANE">Datenstructur für smc5d-p32</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Vector5D.SetCriterion(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Sucht die Achse, die die größte Delta hat und setzt Kriterium
            </summary>
            <param name="aDOPISZ_DANE">Daten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Vector5D.SetDirection(De.Boenigk.SMC5D.Core.DOPISZ_DANE)">
            <summary>
            Ermittelt die Richtung der Achsen
            </summary>
            <param name="aDOPISZ_DANE">Daten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Vector5D.CreateNextPos(De.Boenigk.SMC5D.Core.ReadData@)">
            <summary>
             Erzeugt nächste Position
            </summary>
            <param name="aOdczytajDane">Enthält Daten vom, auch die aktuelle Position in Steps</param>
            <returns>True, nächster Punkt sonst false Ende erreicht</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Vector5D.SetForXLongest(De.Boenigk.SMC5D.Core.ReadData@)">
             <summary>
             Setzt die Steps wenn X Achse die längste ist.
             </summary>
            <param name="aOdczytajDane">Enthält Daten vom, auch die aktuelle Position in Steps</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Vector5D.SetForYLongest(De.Boenigk.SMC5D.Core.ReadData@)">
             <summary>
             Setzt die Steps wenn Y Achse die längste ist.
             </summary>
            <param name="aOdczytajDane">Enthält Daten vom, auch die aktuelle Position in Steps</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Vector5D.SetForZLongest(De.Boenigk.SMC5D.Core.ReadData@)">
             <summary>
             Setzt die Steps wenn Z Achse die längste ist.
             </summary>
            <param name="aOdczytajDane">Enthält Daten vom, auch die aktuelle Position in Steps</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Vector5D.SetForALongest(De.Boenigk.SMC5D.Core.ReadData@)">
             <summary>
             Setzt die Steps wenn A Achse die längste ist.
             </summary>
            <param name="aOdczytajDane">Enthält Daten vom, auch die aktuelle Position in Steps</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Sim.Vector5D.SetForBLongest(De.Boenigk.SMC5D.Core.ReadData@)">
             <summary>
             Setzt die Steps wenn B Achse die längste ist.
             </summary>
            <param name="aOdczytajDane">Enthält Daten vom, auch die aktuelle Position in Steps</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Speed">
            <summary>
            Geschwindigkeiten werden berechnet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Speed.mySettings">
            <summary>
            Alle Einstellungen der Steuerelektronik SMC5D
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Speed.myLargestDelta">
            <summary>
            Sucht die größte Delta
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Speed.myLastSpeed">
            <summary>
            Speichert die letzte berechnete Geschwindigkeit
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Speed.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Standard Konstruktor mit Angabe der SMCSettings 
            </summary>
            <param name="aSettings">Einstellungen der Steuerungselektronik SMC5D</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Speed.SetSpeed(De.Boenigk.SMC5D.Core.Mill.DStruct,System.Single)">
            <summary>
            Setzt die Geschwindigkeit Schritte pro Sekunde ein. 
            Für die Berechnung der Geschwindigkeit in Steps wird die Achse mit der größten Delta genommen.
            </summary>
            <param name="aDStruct">DStruct in die, die Geschwindigkeit in Steps pro Sekunde eingetragen wird</param>
            <param name="aSpeed">Geschwindigkeit in Millimeter pro Sekunde (aus Step Objekt)</param>
            <returns>DStruct mit Geschwindigkeit in Steps pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Speed.GetSpeed(De.Boenigk.SMC5D.Core.Axis,System.Single,De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Rechnet Geschwindigkeit aus
            </summary>
            <param name="aAxis">Achse, die größte Delta hat</param>
            <param name="aSpeed">Geschwindigkeit in Millimeter pro Sekunde</param>
            <param name="aDStruct">DStruct in die, die Geschwindigkeit in Steps pro Sekunde eingetragen wird</param>
            <returns>Geschwindigkeit in Schritten pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Speed.GetSpeed(System.Double,System.Double,System.Double[],System.Double[])">
            <summary>
            Ermittelt die Geschwindigkeit für 5 Achsen
            </summary>
            <param name="aMaxDelta">Größte Delta aus allen 5 Achsen</param>
            <param name="aMaxDeltaSpeed">Geschwindigkeit der größten Delta</param>
            <param name="aSpeed">Geschwindigkeiten, der letzten 4 Achsen</param>
            <param name="aDelta">Deltas der letzten 4 Achsen</param>
            <returns>Ermittelte Geschwindigkeit</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Speed.GetConstSpeed(De.Boenigk.SMC5D.Core.Axis,System.Single,De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Rechnet konstante Geschwindigkeit aus
            </summary>
            <param name="aAxis">Achse, die größte Delta hat</param>
            <param name="aSpeed">Geschwindigkeit in Millimeter pro Sekunde</param>
            <param name="aDStruct">DStruct in die, die Geschwindigkeit in Steps pro Sekunde eingetragen wird</param>
            <returns>Geschwindigkeit in Schritten pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Speed.GetSpeedMSec(De.Boenigk.SMC5D.Core.Axis,System.Double,De.Boenigk.SMC5D.Core.Mill.DStruct)">
            <summary>
            Sucht die maximale Geschwindigkeit
            </summary>
            <param name="aAxis">Achse, die größte Delta hat</param>
            <param name="aSpeed">Geschwindigkeit in Millimeter pro Sekunde</param>
            <param name="aDStruct">DStruct in die, die Geschwindigkeit in Steps pro Sekunde eingetragen wird</param>
            <returns>Geschwindigkeit in Millimeter pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Speed.GetSpeed(De.Boenigk.SMC5D.Core.Axis,System.Single)">
            <summary>
            Rechnet Geschwindigkeit nach Schritte pro Sekunde um.
            </summary>
            <param name="aAxis">Achse</param>
            <param name="aSpeed">Geschwindigkeit in Millimeter pro Sekunde</param>
            <returns>Geschwindigkeit in Schritten pro Sekunde</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Speed.GetSpeed(De.Boenigk.SMC5D.Core.Axis,System.UInt32)">
            <summary>
            Rechnet Geschwindigkeit von der Geschwindigkeit in Schritten pro Sekunde nach Millimeter pro Sekunde um.
            </summary>
            <param name="aAxis">Achse</param>
            <param name="aSpeed">Geschwindigkeit in Schritten pro Sekunde</param>
            <returns>Geschwindigkeit in Millimeter pro Sekunde</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.StartBacklash">
            <summary>
            Enthält aktuelle Umkehrspiel- Wert  in mm aus Kontroller smc5d-p32
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.StartBacklash.X">
            <summary>
            Aktueller Umkehrspiel- Wer in Steps der X Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.StartBacklash.Y">
            <summary>
            Aktueller Umkehrspiel- Wert in Steps der Y Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.StartBacklash.Z">
            <summary>
            Aktueller Umkehrspiel- Wert in Steps der Z Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.StartBacklash.A">
            <summary>
            Aktueller Umkehrspiel- Wert in Steps der A Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.StartBacklash.B">
            <summary>
            Aktueller Umkehrspiel- Wert in Steps der B Achse
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.StructByteArray">
            <summary>
            Konvertiert eine struct nach byte array und umgekehrt!
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.StructByteArray.GetCopyOfStruct(System.Object,System.Type)">
            <summary>
            Eine Struct wird kopiert
            </summary>
            <param name="anything">Structur dass kopiert wird</param>
            <param name="anytype">Typ der structur</param>
            <returns>Gibt Struct Objekt zurück</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.StructByteArray.RawDeserializeEx(System.Byte[],System.Type)">
            <summary>
            Byte Array wird nach Struct konvertiert
            </summary>
            <param name="rawdatas">Byte Array was konvertiert wird</param>
            <param name="anytype">Typ der structur</param>
            <returns>Gibt Struct Objekt zurück</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.StructByteArray.RawSerializeEx(System.Object)">
            <summary>
            Struct nach Byte Array konvertieren
            </summary>
            <param name="anything">Structur</param>
            <returns>Byte Array</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.StructByteArray.CopyTo(System.Byte[],System.Int32)">
            <summary>
            Kopiert ein Byte Array in ein anderes mit einer asngegebenen Länge.
            Der Byte Array wird ab Index 0 des neuen Byte Arrays kopiert.
            </summary>
            <param name="aByteArray">Byte Array dass kopiert wird</param>
            <param name="aLength">Länge des neuen Byte Arrays</param>
            <returns>Neues Byte Array oder wenn Zeil zu klein altes Byte Array ohne Veränderung</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.StructByteArray.GetStructLength(System.Object)">
            <summary>
            Struct Länge wird ermittelt
            </summary>
            <param name="anything">Structur</param>
            <returns>Länge der Struct in Bytes</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.TCPClient">
            <summary>
            Netzwerk- Verbindung über TCP
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.TCPClient.myHostname">
            <summary>
            Hostname
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.TCPClient.mySize">
            <summary>
            Puffergröße
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.TCPClient.myConnectPort">
            <summary>
            Verbinden mit dem Port
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.TCPClient.myIP">
            <summary>
            IP Adresse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.TCPClient.myTimeout">
            <summary>
            Der Timeoutwert für den Sendevorgang/Empfangvorgang in Millisekunden 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.TCPClient.myListenThread">
            <summary>
            Thread für die Verbindung
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPClient.#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Konstruktor
            </summary>
            <param name="aHostname">Hostname</param>
            <param name="aConnectPort">Verbinden mit Anschluss Port</param>
            <param name="aIP">IP Adresse</param>
            <param name="aBufferSize">Schreiben- Lesen Puffergröße</param>
            <param name="aTimeout">Der Timeoutwert für den Sendevorgang/Empfangvorgang in Millisekunden</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPClient.Init">
            <summary>
            Verbindung öffnen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPClient.Close">
            <summary>
            Verbindung schließen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.TCPClient.myTCPClient">
            <summary>
            Client
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPClient.ListenForClient">
            <summary>
            Verbindung aufbauen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPClient.ReceiveData(System.Int32)">
            <summary>
            Daten empfangen
            </summary>
            <param name="aLength">Länge der zu lesenden Daten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPClient.SenData(System.Byte[])">
            <summary>
            Bytes werden mit TCP gesendet
            </summary>
            <param name="aData">Byte-Array</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPClient.SenData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Bytes werden mit TCP gesendet
            </summary>
            <param name="aData">Byte-Array</param>
            <param name="aOffset">Ab den Abstand (Offset)</param>
            <param name="aSize">Größe (Size)</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TCPClient.ConnectPort">
            <summary>
            Port
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TCPClient.Hostname">
            <summary>
            Hostname
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TCPClient.Connected">
            <summary>
            True, Verbindung aufgebaut, False keine Verbindung
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.TCPServer">
            <summary>
            Netzwerk- Verbindung über TCP
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.TCPServer.mySize">
            <summary>
            Puffergröße
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.TCPServer.myConnectPort">
            <summary>
            Verbinden mit dem Port
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPServer.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Konstruktor
            </summary>
            <param name="aIP">IP Adresse</param>
            <param name="aConnectPort">Verbinden mit Anschluss Port</param>
            <param name="aBufferSize">Schreiben- Lesen Puffergröße</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPServer.Init">
            <summary>
            Verbindung öffnen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPServer.Close">
            <summary>
            Verbindung schließen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPServer.ReceiveData(System.Int32)">
            <summary>
            Daten empfangen
            </summary>
            <param name="aLength">Länge der zu lesenden Daten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPServer.SenData(System.Byte[])">
            <summary>
            Bytes werden mit TCP gesendet
            </summary>
            <param name="aData">Byte-Array</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TCPServer.SenData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Bytes werden mit TCP gesendet
            </summary>
            <param name="aData">Byte-Array</param>
            <param name="aOffset">Ab den Abstand (Offset)</param>
            <param name="aSize">Größe (Size)</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TCPServer.ConnectPort">
            <summary>
            Port
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TCPServer.IP">
            <summary>
            IP Adresse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TCPServer.Connected">
            <summary>
            True, Verbindung aufgebaut, False keine Verbindung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TCPServer.IsListener">
            <summary>
            True, Listener läuft....
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.TimerState">
            <summary>
            Timer Status
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.TimerState.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TimerState.Stopped">
            <summary>
            True,Timer ist gestoppt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TimerState.Counter">
            <summary>
            Zugriff auf Zähler
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Core.TimerState.Timer">
            <summary>
            Zugriff auf System.Threading.Timer
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Core.Udp">
            <summary>
            Netzwerk- Verbindung über Udp
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Udp.mylocalPort">
            <summary>
            Lokaler Port
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Udp.myConnectPort">
            <summary>
            Verbinden mit dem Port
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Udp.mySendClient">
            <summary>
            UdpClient zum Senden
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Udp.myReceiveClient">
            <summary>
            UdpClient zum empfangen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Udp.myRemoteEndPoint">
            <summary>
            IP Adresse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Udp.myInited">
            <summary>
            Boolean dass Init ausgeführt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Core.Udp.myReceiveBytes">
            <summary>
            Empfangener Byte Array
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Udp.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Konstruktor
            </summary>
            <param name="aIP">IP Adresse</param>
            <param name="aConnectPort">Verbinden mit Anschluss Port</param>
            <param name="alocalPort">Lokaler Port</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Udp.Init">
            <summary>
            Verbindung öffnen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Udp.Close">
            <summary>
            Verbindung schließen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Udp.ReceiveThreadData">
            <summary>
            Empfang
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Udp.ReceiveData">
            <summary>
            Empfang
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Udp.SenData(System.String)">
            <summary>
            Text wird mit UDP gesendet
            </summary>
            <param name="aText">Text</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Core.Udp.SenData(System.Byte[])">
            <summary>
            Text wird mit UDP gesendet
            </summary>
            <param name="aData">Byte Array</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Dialogs.DlgPicTester">
            <summary>
             Test Dialogfenster
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Dialogs.DlgPicTester.myLastLWekt">
            <summary>
            Speichert die letzte Position
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.#ctor">
            <summary>
            Kontroller TestDialogfenster
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.OnClosed(System.EventArgs)">
            <summary>
            Dialog wird geschlossen
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.Init(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Dialog wird initialisiert
            </summary>
            <param name="aConnector">USB Verbindungsobjekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.OnCreateControl">
            <summary>
            Control wurde erzeugt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Dialogs.DlgPicTester.myInfo">
            <summary>
            Info string
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.DlgTestControlPic32DLLCommand(System.String,System.Int16,System.Byte[])">
            <summary>
            Befehl Nachricht von der Pic32Dll
            </summary>
            <param name="aText">Text</param>
            <param name="aCommand63">Befehl</param>
            <param name="aBytes">Inhalt des Befehls</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.TimerTick(System.Object,System.EventArgs)">
            <summary>
            Timer wird aufgerufen
            </summary>
            <param name="sender">object</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.SetInfos">
            <summary>
            Gelesene Koordinaten werden eingetragen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.ConvertToHexString(System.UInt32)">
            <summary>
            UINT als Hex anzeigen
            </summary>
            <param name="aValue">Unit das nach Hex invertiert wird</param>
            <returns>Wert in Hex als string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.GetError(System.Byte)">
            <summary>
            Gibt den Error als String zurück
            </summary>
            <param name="aError">Erron Nummer</param>
            <returns>Error als string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.SimpleButtonResetClick(System.Object,System.EventArgs)">
            <summary>
            Liste wird gelöscht
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.SimpleButtonCopyClick(System.Object,System.EventArgs)">
            <summary>
            Kopieren in Clipboard
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.CheckBoxJobCompressCheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Job Daten Kompression aktivieren oder deaktivieren
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.CheckBoxAutoOffCheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Auto Connect aktivieren oder deaktivieren
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.CheckBoxCreateJobTestFilesCheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Aktiviert oder deaktiviert die Generierung der Testdaten für den Job
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.CheckBoxCreateJobinBackGroundCheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Job im Hintergrund generieren aktivieren oder deaktivieren
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.SimpleButtonRebootClick(System.Object,System.EventArgs)">
            <summary>
            Kontroller wird zurückgesetzt
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.CheckBoxDebugJobCheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Aktiviert den Debug Modus für Job
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.SimpleButtonReserInspectionTimeClick(System.Object,System.EventArgs)">
            <summary>
            Arbeitszähler der Maschine wird zurückgesetzt
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.checkEditJobTestMode_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Job-Test-Mode
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.simpleButtonStartStopRead_Click(System.Object,System.EventArgs)">
            <summary>
            Position lesen ein oder ausschalten
            </summary>
            <param name="sender">Objekt</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Dialogs.DlgPicTester.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Dialogs.DlgPicTester.checkEditLaser_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Laser Hauptschalter
            </summary>
            <param name="sender">object</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Dialogs.DlgPicTester.ExcepCode">
            <summary>
            Except codes
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Dialogs.DlgPicTester.Action">
            <summary>
            Delegate für ThreadPool
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.License.AESEncryption">
            <summary>
            Utility class that handles encryption
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.AESEncryption.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypt a byte array into a byte array using a key and an IV 
            </summary>
            <param name="clearData">Data</param>
            <param name="Key">Key</param>
            <param name="IV">IV</param>
            <returns></returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.License.BinaryFile">
            <summary>
            Ein Byte- Array wird gespeichert oder gelesen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.BinaryFile.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.BinaryFile.Save(System.String,System.Byte[])">
            <summary>
            Eine Zeichenkette wird binär in einer Datei gespeichert
            </summary>
            <param name="aFile">Dateiname mit Pfad</param>
            <param name="aBytes">Byte Array dass gespeichert wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.BinaryFile.Load(System.String)">
            <summary>
            Eine Zeichenkette wird aus binären Datei geladen
            </summary>
            <param name="aFile">Dateiname mit Pfad</param>
            <returns>Byte Arra</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.License.Crypto">
            <summary>
            Crypto, kodiert eine Zeichenkette
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.Crypto.#ctor">
            <remarks>
            Konstruktor
            </remarks>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.Crypto.Encrypting(System.String)">
            <summary>
            Eine Zeichenkette wird kodiert
            </summary>
            <param name="aString">Zeichenkette dass kodiert wird</param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.Crypto.Decrypting(System.Byte[])">
            <summary>
            Eine Zeichenkette wird dekodiert
            </summary>
            <param name="aBytes">Byte- Array, dass dekodiert wird</param>
            <returns>Dekodiertes String</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.Crypto.Encrypting(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Zeichenkette wird verschlüsselt
            </summary>
            <param name="aSource">Daten, die verschlüsselt werden</param>
            <param name="aKey">8 stelliger Schlüssel</param>
            <param name="aIV">8 stelliger Initialiasierungsvektor</param>
            <returns>Verschlüsselte Zeichenkette</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.Crypto.Decrypting(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Zeichenkette wird entschlüsselt
            </summary>
            <param name="aSource">Daten, die entschlüsselt werden</param>
            <param name="aKey">8 stelliger Schlüssel</param>
            <param name="aIV">8 stelliger Initialiasierungsvektor</param>
            <returns>Entschlüsselte Zeichenkette</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.License.CryptoString">
            <summary>
            Konvertiert einen String aus/in LicenseData
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.CryptoString.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.CryptoString.GetAsString(De.Boenigk.SMC5D.License.LicenseData)">
            <summary>
            Lizenzdaten werden als ein String zurückgegeben
            </summary>
            <param name="aLicenseData">Lizenzdaten</param>
            <returns>Lizenzdaten als ein String</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.CryptoString.GetAsStruct(System.String)">
            <summary>
            Lizenzdaten werden als ein String zurückgegeben
            </summary>
            <param name="aLicenseData">Lizenzdaten</param>
            <returns>Lizenzdaten als ein String</returns>
        </member>
        <member name="T:De.Boenigk.SMC5D.License.C_License">
            <summary>
            Konstante
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.C_License.LicenseMode_DateLimit">
            <summary>
            Lizenz:  D - Datum, zeitliche Lizenz
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.C_License.LicenseMode_WithoutLimit">
            <summary>
            Lizenz: E - Endlizenz, keine Einschränkung
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.C_License.LicenseMode_None">
            <summary>
            Lizenz: N - keine Lizenz
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.C_License.LicenseFinish">
            <summary>
            Lizenz ist abgelaufen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.C_License.LicenseNotFound">
            <summary>
            Keine Lizenz gefunden
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.C_License.LicenseWithoutLimit">
            <summary>
            Uneingeschränkte Lizenz
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.License.C_License.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.License.LicenseData">
            <remarks>
            Lizenz- Daten- Struktur
            </remarks>
            <summary>Lizenz- Daten- Struktur</summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.LicenseData.ProductID">
            <summary>
            Nummer des Produktes
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.LicenseData.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.LicenseData.LicenseMode">
            <summary>
            Art der Lizenz
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.LicenseData.SerialNumber">
            <summary>
            Seriennummer
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.License.LicenseData.FreeString">
            <summary>
            Freie Zeichenkette
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Axis">
            <summary>
            Fahrt auf einer Achse bis zum Schalter und dann vom Schalter weg bis dieser frei ist.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myConnector">
            <summary>
            Erzeugt eine Verbindung mit SMC5D, hält globale Einstellungen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.mySettings">
            <summary>
            Alle Einstellungen der Steuerelektronik SMC5D
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myTimerState">
            <summary>
            Timer Status
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myInputChecker">
            <summary>
            Prüft den Status der Schalter
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myAxisStatus">
            <summary>
            Status der Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myINITServices">
            <summary>
            Hilfsklasse für Struct INIT
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Standard Konstruktor mit Angabe der ControlSettings
            </summary>
            <param name="aConnector">USB Verbindungs- Object</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.InitTimer">
            <summary>
            Timer wird für die Abfrage gesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.StartTimer">
            <summary>
            Timer wird sofort gestartet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.StopTimer">
            <summary>
            Timer wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.CheckStatus(System.Object)">
            <summary>
            Timer Status wird verändert. Wenn diese Methode aufgerufen,
            dann ist die Zeit abgelaufen, der Timer wird genullt.
            </summary>
            <param name="state">Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.SetRefStatus">
            <summary>
            Status der Referenzfahrt setzen.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.SendEvent(De.Boenigk.SMC5D.Basics.SMCException)">
            <summary>
            Status der Steuerelektronik wird als Nachricht gesendet.  Meldung für Referenzfahrt wird gesetzt
            </summary>
            <param name="ex">SMCException</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.SendDirEvent(System.Boolean)">
            <summary>
            Referenzfahrtrichtung Nachricht
            </summary>
            <param name="aToSwitch">True, Fahrt auf Schalter</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myStatus">
            <summary>
            Status der Steuerung
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.Abort">
            <summary>
            Fahrt auf der Achse wird abgebrochen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.Pause">
            <summary>
            Fahrt auf der Achse wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.Dispose">
            <summary>
            Alle Ressourcen werden freigegeben
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myAxisToSwitchSettings">
            <summary>
            Einstellungen für die Fahrt auf Schalter
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.Run(De.Boenigk.SMC5D.Basics.MoveAxis,De.Boenigk.SMC5D.Basics.Input,System.Boolean,System.Single)">
            <summary>
            Achsen Fahrt bis Schalter oder vom Schalter wird ausgeführt
            </summary>
            <param name="aAxis">Angabe der Achse</param>
            <param name="aInput">Eingang dass abgefragt werden soll</param>
            <param name="aInvert">Status des Eingangs invertiert oder nicht</param>
            <param name="aSpeed">Geschwindigkeit in Millimeter pro Sekunde</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.Run(De.Boenigk.SMC5D.Basics.MoveAxis,System.Boolean,De.Boenigk.SMC5D.Basics.Input,System.Boolean,System.Single)">
            <summary>
            Achsen Fahrt bis Schalter oder vom Schalter wird ausgeführt
            </summary>
            <param name="aAxis">Angabe der Achse</param>
            <param name="aDirection">Richtung der Fahrt</param>
            <param name="aInput">Eingang dass abgefragt werden soll</param>
            <param name="aInvert">Status des Eingangs invertiert oder nicht</param>
            <param name="aSpeed">Geschwindigkeit in Millimeter pro Sekunde</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myFixedDirection">
            <summary>
            True, dann wird die feste Richtung genommen, false dann wird die Richtung aus 'myAxisToSwitchSettings.Direction' genommen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.Run">
            <summary>
            Führt eine Fahrt auf Schalter. 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.GetDirection(De.Boenigk.SMC5D.Basics.MoveAxis,System.Boolean)">
            <summary>
            Gibt die Richtung der Achse zurück
            </summary>
            <param name="aAxis">MoveAxis</param>
            <param name="aDirection">Richtung</param>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.GetAxis(De.Boenigk.SMC5D.Core.ManualMoveAxis)">
            <summary>
            Anhang der Richtung wird die Achse ermittelt und zurückgeben
            </summary>
            <param name="aManualMoveAxis">Achse mit Richtung</param>
            <returns>Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.Run(De.Boenigk.SMC5D.Core.ManualMoveAxis,System.Boolean)">
            <summary>
            Achsen Fahrt bis Schalter oder vom Schalter wird ausgeführt. Diese Methode wird nur für Referenzfahrt benutzt
            </summary>
            <param name="aManualMoveAxis">Definiert die Achse und die Richtung die gefahren werden soll</param>
            <param name="aToSwitch">Fahrt auf Schalter oder vom Schalter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunZ">
            <summary>
            Z Achse referenzieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunY">
            <summary>
            Y Achse referenzieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunFromY">
            <summary>
            Y Achse vom Schalter referenzieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunX">
            <summary>
            X Achse referenzieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunFromX">
            <summary>
            X Achse vom Schalter referenzieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunToXY">
            <summary>
            X,Y  Achse referenzieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunA">
            <summary>
            A Achse referenzieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunB">
            <summary>
            B Achse referenzieren
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myXY2">
            <summary>
            True, dann XY2 Relais sonst false für XY
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunX2_AGEM">
            <summary>
            X2 Achse referenzieren (Doppelantrieb auf der X Achse) -> Wersja AGEM 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunX2">
            <summary>
            X2 Achse referenzieren (Doppelantrieb auf der X Achse)
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunY2_AGEM">
            <summary>
            Y2 Achse referenzieren (Doppelantrieb auf der Y Achse) -> Wersja AGEM 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunY2">
            <summary>
            Y2 Achse referenzieren (Doppelantrieb auf der Y Achse)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myMinZ">
            <summary>
            Minimale zulässige Z Höhe
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.myScanHeight">
            <summary>
            True, Werkzeuglänge oder Werkstückhöhe wird ermittelt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunScanHeightZDepth">
            <summary>
            Abtaster Höhe in Z wird gelesen. Für die Fahrtrichtung 
            wird die Einstellung HighSensorInvert der Klasse HeightSensor verwendet.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunScanHeightZDepth(System.Double)">
            <summary>
            Abtaster Höhe in Z wird gelesen. Für die Fahrtrichtung 
            wird die Einstellung HighSensorInvert der Klasse HeightSensor verwendet.
            </summary>
            <param name="aMinZ">Minimale erlaubte Z Höhe, wenn diese Z Höher erreicht dann wird die Maschine automatisch gestoppt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunMeasureToolZDepth">
            <summary>
            Werkzeughöhe in Z wird gelesen. Für die Fahrtrichtung wird die Einstellung 
            ToolSensorInvert der Klasse HeightSensor verwendet.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunMeasureToolZDepth(System.Double)">
            <summary>
            Werkzeughöhe in Z wird gelesen. Für die Fahrtrichtung wird die Einstellung 
            ToolSensorInvert der Klasse HeightSensor verwendet.
            </summary>
            <param name="aMinZ">Minimale erlaubte Z Höhe, wenn diese Z Höher erreicht dann wird die Maschine automatisch gestoppt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.RunMeasureToolADepth">
            <summary>
            Werkzeughöhe in Z wird gelesen. Für die Fahrtrichtung wird die Einstellung 
            ToolSensorInvert der Klasse HeightSensor verwendet.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Axis.GetMoveFromToSwitch(De.Boenigk.SMC5D.Core.ManualMoveAxis,De.Boenigk.SMC5D.Basics.Input,System.Boolean,System.Single)">
            <summary>
            Generiert aus angegebenen Daten JAZDA_NA_I_OD_LACZNIKA Struktur. Nur zum Testen
            </summary>
            <param name="aMoveAxis">MoveAxis</param>
            <param name="aInput">Eingang</param>
            <param name="aInvert">Invertieren</param>
            <param name="aSpeed">Geschwindigkeit</param>
            <returns>JAZDA_NA_I_OD_LACZNIKA</returns>
        </member>
        <member name="E:De.Boenigk.SMC5D.Move.Axis.OnSMCStatusEventHandler">
            <summary>
            Arbeitsablauf- Nachricht Status
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Move.Axis.OnRefDirection">
            <summary>
            Referenzfahrtrichtung- Nachricht
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Axis.Status">
            <summary>
            Status der Steuerung geben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Axis.ResetSwitches">
            <summary>
            True, wenn Referenzfahrt gestartet ist, Schalter zurücksetzen. 
            Wenn false, dann bleiben Zustände der Schalter unverändert.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Axis.GlobPosition">
            <summary>
            Aktuelle Position der Maschine (Ist gleich Connector.GlobPosition)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Axis.MinZReached">
            <summary>
            True, dann minimale Z Höhe erreicht und kein Z Schalter betätigt
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Axis.AxisID">
            <summary>
            Identifizierung der Achsen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Axis.AxisServices">
            <summary>
            Status der Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.AxisServices.RunToSwitch">
            <summary>
            Richtung, true, dann Fahrt auf Schalter wird ausgeführt, sonst Fahrt vom Schalter
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Axis.AxisServices.Axis">
            <summary>
            Achse: X = 1, Y = 2, Z = 3, A = 4, B = 5
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Axis.SMCStatusEventHandler">
            <summary>
            Typsicherer Zeiger (Delegate) SMCStatusEventHandler 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Axis.RefDirectionEventHandle">
            <summary>
            Typsicherer Zeiger (Delegate) RefDirectionEventHandle
            </summary>
            <param name="aToSwitch">True, Fahrt auf Schalter, False Fahrt vom Schalter</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.AxisToSwitchSettings">
            <summary>
            Enthält Einstellungen für die Fahrt auf und vom Schalter
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.AxisToSwitchSettings.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.AxisToSwitchSettings.JAZDA_NA_I_OD_LACZNIKA">
            <summary>
            Pic struct
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.AxisToSwitchSettings.Input">
            <summary>
            Eingang
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.AxisToSwitchSettings.Invert">
            <summary>
            Invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.AxisToSwitchSettings.Direction">
            <summary>
            Richtung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.AxisToSwitchSettings.MoveAxis">
            <summary>
            Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.AxisToSwitchSettings.Speed">
            <summary>
            Geschwindigkeit
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Job">
            <summary>
             Sendet eine Liste mit Step Objekten an den SMC5D Controller.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myPuffer">
            <summary>
            Puffer zum generieren der Daten anlegen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myConnector">
            <summary>
            Verbindungsobjekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myPic32DLL">
            <summary>
            Zugriff auf Pic Befehle
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myThread">
            <summary>
            Thread
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myOdczytajDane">
            <summary>
            Struktur mit Daten vom smc5d-p32
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myPauseStarted">
            <summary>
            True, pause wird gestartet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myMonitoring">
            <summary>
            Bereichüberwachung
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myInputChecker">
            <summary>
            Prüft- Eingang- Signale
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myRefStatusCounter">
            <summary>
            Referenzstatus wird abgefragt und in dieser Variable abgespeichert. 
            Erst wenn der Status 2 mal hintereinander aktiv ist (C_RefStatusCounter), wird die Arbeit abgebrochen.
            
            Dies ist notwendig um mögliche Störung- Probleme zu beseitigen.
            Es gab ein paar Fälle wo die Elektronik falsches Signal gesendet hat.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myAllowSpeedChange">
            <summary>
            True, Geschwindigkeit- Regelung zulassen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.SendEvent">
            <summary>
            Status der Steuerelektronik wird als Nachricht gesendet.  Meldung für Referenzfahrt wird gesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindungsobjekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.#ctor(De.Boenigk.SMC5D.Basics.Connector,De.Boenigk.SMC5D.Basics.RestrictedAreaExcept)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindungsobjekt</param>
            <param name="aAction">Aktion als 'RestrictedAreaExcept' dass ausgeführt wird</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.#ctor(De.Boenigk.SMC5D.Basics.Connector,De.Boenigk.SMC5D.Basics.RestrictedAreaExcept,System.Boolean)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindungsobjekt</param>
            <param name="aAction">Aktion als 'RestrictedAreaExcept' dass ausgeführt wird</param>
            <param name="aSpeedTactOn">True, erlaubt das regeln der Geschwindigkeit über Takt, False dann immer mit 100%</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.GetStartBacklash(De.Boenigk.SMC5D.Core.IPic32)">
            <summary>
            Liest die Start- Umkehrspiel- Werte aus dem Kontroller smc5d.
            </summary>
            <param name="aIPic32">IPic32 Zugriff auf Kontroller</param>
            <returns>Start Umkehrspielwerte oder null</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.ThreadUpdate">
            <summary>
            Update als Thread wird gestartet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.Update">
            <summary>
            Position der Maschine wird gelesen und der Status wird geprüft
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.WriteMaxSpeed">
            <summary>
            Schreibt maximale Job- Geschwindigkeit (über Init2). Wird benötigt für Geschwindigkeit-Änderung!
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.myLineIndex">
            <summary>
            Aktuelle/Letzte Index- Position
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.GetPosition">
            <summary>
            Gibt den aktuellen Index des Step Objektes dass gerade vom Job abgearbeitet wird
            </summary>
            <returns>Step Index</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.GetCurrent">
            <summary>
            Gibt den aktuellen Step, dass gerade bearbeitet wird, zurück. Wenn kein bearbeitet wird, dann wird null zurückgegeben.
            </summary>
            <returns>Aktueller Step- Objekt oder null</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.CheckRefSwitches">
            <summary>
            Referenzschalter (Bereichüberwachung) werden abgefragt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.CheckArea">
            <summary>
            Bereichüberwachung für Achsenlänge in X,Y,Z und A. Auch die gesperrten Bereiche werden überwacht.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.Abort">
            <summary>
            Maschinenarbeit wird sofort abgebrochen und alle Einstellungen zurückgesetzt.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.Continue(System.Byte)">
            <summary>
            Nach Programmhalt (z.B.: GCode Befehl M00) wird der Job fortgesetzt
            </summary>
            <param name="aTact">Startgeschwindigkeit in Prozent</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.IsHalt">
            <summary>
            True, Programmhalt ausgeführt (z.B.: GCode Befehl M00)
            </summary>
            <returns>True, Programmhalt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.Wait(System.Int32)">
            <summary>
            Verlängert aktuelle Wartezeit in Sekunden (nur wenn Job und wenn gerade Wartezeit ausgeführt wird)
            </summary>
            <param name="aWait">Wartezeit in Sekunden</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.Dispose">
            <summary>
            Alle Ressourcen werden geschlossen, Speicher wird befreit, Dateien werden geschlossen.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.GetSpeed">
            <summary>
            Zeigt die aktuelle Geschwindigkeit in % an.
            </summary>
            <returns>Geschwindigkeit in %</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.Pause">
            <summary>
            Pause, Maschine wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.SetMotorPowerOff">
            <summary>
            Motorstrom wird abgesenkt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.SetStepList(System.String)">
            <summary>
            Übergabe einer Liste mit Step Objekten als binäre temporäre Datei.
            </summary>
            <param name="aFile">Dateiname mit Pfad der temporären Datei</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.SetStepList(System.String,System.Int32)">
            <summary>
            Übergabe einer Liste mit Step Objekten als binäre temporäre Datei.
            </summary>
            <param name="aFile">Dateiname mit Pfad der temporären Datei</param>
            <param name="aTxx">Werkzeugnummer der angegebenen Daten. Die Werkzeugnummer wird für "Tangentialmesser für eine Werkzeugnummer" verwendet.</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.SetStepList(System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step})">
            <summary>
            Übergabe einer Liste mit Step Objekten als List Objekt
            </summary>
            <param name="aList">List Objekt mit Step Objekten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.SetStepList(System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step},System.Int32)">
            <summary>
            Übergabe einer Liste mit Step Objekten als List Objekt
            </summary>
            <param name="aList">List Objekt mit Step Objekten</param>
            <param name="aTxx">Werkzeugnummer der angegeben Daten. Die Werkzeugnummer wird für "Tangentialmesser für eine Werkzeugnummer" verwendet.</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.Start(System.Byte)">
            <summary>
            Job wird gestartet, Daten(Step Objekte) werden in einem Thread an SMC5D Controller gesendet
            </summary>
            <param name="aStartSpeed">Startgeschwindigkeit in Prozent (100% ist normale Geschwindigkeit)</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.mySpeedTactOn">
            <summary>
            True, Definiert ob Geschwindigkeit über Takt geändert werden darf
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Job.mySpeedTact">
            <summary>
            Steuert den Takt des Kontrollers
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.TactHandWheel">
            <summary>
            Geschwindigkeit wird in Prozent geändert (von 1 bis 100%). Der Wert kommt von Potentiometer des Handrades.
            Hinweis: Wenn KEIN Handrad angeschlossen, dann ist diese Funktion inaktiv!
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.Tact(System.Byte)">
            <summary>
            Geschwindigkeit wird in Prozent geändert (von 1 bis 100%). Hinweis: Wenn Handrad angeschlossen, dann ist diese Funktion inaktiv!
            </summary>
            <param name="aPercent">Prozent von 1 bis 100%</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.TactMinus">
            <summary>
            Takt um 1% verkleinern. Hinweis: Wenn Handrad angeschlossen, dann ist diese Funktion inaktiv!
            </summary>
            <returns>Aktuelle Geschwindigkeit in Prozent</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Job.TactPlus">
            <summary>
            Takt um 1% erhöhen. Hinweis: Wenn Handrad angeschlossen, dann ist diese Funktion inaktiv!
            </summary>
            <returns>Aktuelle Geschwindigkeit in Prozent</returns>
        </member>
        <member name="E:De.Boenigk.SMC5D.Move.Job.OnSMCStatusEventHandler">
            <summary>
            Arbeitsablauf- Nachricht Status
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.TotalWorkTime">
            <summary>
            Gibt die gesamte Arbeitszeit in Sekunden zurück. Da die Daten nicht komplett berechnet sind, ist das nur eine Schätzung!
            Je mehr Daten berechnet sind, desto genauer ist die Schätzung.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.CurrentWorkTime">
            <summary>
            Gibt die aktuelle Arbeitszeit in Sekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.LastStepLineIndex">
            <summary>
            Gibt die Anzahl der Schritte (Steps) an
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.RestrictedAreaExcept">
            <summary>
            Sperrbereich Ausnahmen, Angabe der Aktion, dass ausgeführt wird.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.RestrictedArea">
            <summary>
            Gibt den Bereich dass überschritten wurde
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.Status">
            <summary>
            Der Status der Maschine wird zurückgegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.SpeedTactEnable">
            <summary>
            True, Geschwindigkeit kann verändert werden. 
            False blockiert die Geschwindigkeit- Änderung, die Geschwindigkeit ist immer 100%
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.AfterJobSetMotorPowerOff">
            <summary>
            Wenn diese Eigenschaft auf den Wert 'true' gesetzt ist, dann wird am Ende des Jobs Motorstrom automatisch abgesenkt.
            Damit ist der Aufruf der Methode SetMotorPowerOff() nicht mehr nötig. Default Einstellung ist 'false'.
            
            Motorstrom wird nur dann gesenkt, wenn die Eigenschaft LimitingMotorCurrent in SMCSettings aktiv ist.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.JobCreateInBackGround">
            <summary>
            True, dann werden die Daten im Hintergrund Stück für Stück generiert, sonst sofort
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.JobCompression">
            <summary>
            True, Job Daten werden komprimiert (Diese Eigenschaft nur zum Testen, Kompression ist immer aktiv)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.CreateJobTestFiles">
            <summary>
            Eigenschaft schaltet das Generieren der Job- Testdaten. 
            Die Testdaten werden im Verzeichnis "WorkDir" abgelegt. Nur zum Testen!
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.IgnoreMonitoring">
            <summary>
            True, Überwachung wird ausgeschaltet, die Überwachung- Parameter der einzelnen Achsen werden ignoriert ohne sie zu ändern!
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.WorkingTool">
            <summary>
            Werkzeugnummer dass abgearbeitet wird. Diese Eigenschaft wird benötigt, wenn Überwachung (Filter) für gerade gearbeitete Werkzeugnummer durchgefüfhrt werden soll
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Job.UseDeflectorA">
            <summary>
            True, Drehachse nach A umleiten
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Job.SMCStatusEventHandler">
            <summary>
            Typsicherer Zeiger (Delegate) SMCStatusEventHandler 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.JobSim">
            <summary>
             Simuliert das Senden eine Liste mit Step Objekten an den SMC5D Controller. 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.JobSim.myPuffer">
            <summary>
            Puffer zum generieren der Daten anlegen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.JobSim.myConnector">
            <summary>
            Verbindungsobjekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.JobSim.myPic32DLLSim">
            <summary>
            Simuliert die Klasse Pic32DLL
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.JobSim.myThread">
            <summary>
            Thread
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindungsobjekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.#ctor(De.Boenigk.SMC5D.Basics.Connector,System.String)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindungsobjekt</param>
            <param name="aFile">Datei mit Pfad dass Step Objekte enthält (Datei erzeugt mit StepWriter)</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.#ctor(De.Boenigk.SMC5D.Basics.Connector,System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step})">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindungsobjekt</param>
            <param name="aList">Liste mit Step Objekten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.ThreadUpdate">
            <summary>
            Update als Thread wird gestartet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.Update">
            <summary>
            Position der Maschine wird gelesen und der Status wird geprüft
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.Abort">
            <summary>
            Maschinenarbeit wird sofort abgebrochen und alle Einstellungen zurückgesetzt.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.SendEvent">
            <summary>
            Status der Steuerelektronik wird als Nachricht gesendet.  Meldung für Referenzfahrt wird gesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.Continue(System.Int32)">
            <summary>
            Nach Programmhalt wird der Job fortgesetzt
            </summary>
            <param name="aSpeed">Geschwindigkeit, Wert zwischen -50 / +50, Wert 0 ist mittlere Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.Speed(System.Int32)">
            <summary>
            Geschwindigkeit der Simulation ändern
            </summary>
            <param name="aSpeed">Geschwindigkeit, Wert zwischen -50 / +50, Wert 0 ist mittlere Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.IsJobHalt">
            <summary>
            True, Programmhalt ausgeführt (z.B.: GCode Befehl M00)
            </summary>
            <returns>True, Programmhalt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.Dispose">
            <summary>
            Alle Ressourcen werden geschlossen, Speicher wird befreit, Dateien werden geschlossen.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.GetPosition">
            <summary>
            Aktuelle Position der Maschine als GlobPosition wird zurückgegeben
            </summary>
            <returns>Aktuelle Position wird zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.GetCurrent">
            <summary>
            Gibt den aktuellen Step, dass gerade bearbeitet wird, zurück 
            </summary>
            <returns>Aktueller Step- Objekt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.Pause">
            <summary>
            Pause, Maschine wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.SetStepList(System.String)">
            <summary>
            Übergabe einer Liste mit Step Objekten als binäre temporäre Datei.
            </summary>
            <param name="aFile">Dateiname mit Pfad der temporären Datei</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.SetStepList(System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step})">
            <summary>
            Übergabe einer Liste mit Step Objekten als List Objekt
            </summary>
            <param name="aList">List Objekt mit Step Objekten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.JobSim.Start(System.Int32)">
            <summary>
            Job wird gestartet, Daten(Step Objekte) werden in einem Thread an SMC4D Controller gesendet
            </summary>
            <param name="aSpeed">Geschwindigkeit, Wert zwischen -50 / +50, Wert 0 ist mittlere Geschwindigkeit</param>
        </member>
        <member name="E:De.Boenigk.SMC5D.Move.JobSim.OnSMCStatusEventHandler">
            <summary>
            Arbeitsablauf- Nachricht Status
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.JobSim.TotalWorkTime">
            <summary>
            Gibt die gesamte Arbeitszeit in Sekunden zurück. Da die Daten nicht komplett berechnet sind, ist das nur eine Schätzung!
            Je mehr Daten berechnet sind, desto genauer ist die Schätzung.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.JobSim.CurrentWorkTime">
            <summary>
            Gibt die aktuelle Arbeitszeit in Sekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.JobSim.Status">
            <summary>
            Der Status der Maschine wird zurückgegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.JobSim.OdczytajDane">
            <summary>
            Rückgabe der simulierten Kontroller- Daten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.JobSim.LastStepLineIndex">
            <summary>
            Gibt die Anzahl der Schritte an
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.JobSim.JobCreateInBackGround">
            <summary>
            True, dann werden die Daten im Hintergrund Stück für Stück generiert, sonst sofort
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.JobSim.JobCompression">
            <summary>
            True, Job Daten werden komprimiert (Diese Eigenschaft nur zum Testen, Kompression ist immer aktiv)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.JobSim.CreateJobTestFiles">
            <summary>
            Eigenschaft schaltet das Generieren der Job- Testdaten. 
            Die Testdaten werden im Verzeichnis "WorkDir" abgelegt. Nur zum Testen!
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.JobSim.SMCStatusEventHandler">
            <summary>
            Typsicherer Zeiger (Delegate) SMCStatusEventHandler 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.ManualMove">
            <summary>
            Maschine manuell bewegen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.C_Interval">
            <summary>
            Timer Interval Konstante
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myConnector">
            <summary>
            Verbindungsobjekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myDopiszDane">
            <summary>
            Struct zum senden des Befehls
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.mySpeed">
            <summary>
            Rechnet Geschwindigkeit nach Schritte pro Sekunde um
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myLongCounter">
            <summary>
            Zähler der Länge für Manuell Bewegen Schritt für Schritt 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.mySwitch">
            <summary>
            Schalter ein- oder ausschalten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myMonitoring">
            <summary>
            Bereichüberwachung
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myInputChecker">
            <summary>
            Prüft den Status der Schalter
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myMoveAxis">
            <summary>
            Axis Konstante, die bewegt wird
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myMovePlus">
            <summary>
            Richtung der Achse 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myMoveXPlus">
            <summary>
            X Richtung der Achse für XY
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myMoveYPlus">
            <summary>
            Y Richtung der Achse für XY
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor mit Angabe der absoluten und relativen Maschinenposition 
            </summary>
            <param name="aConnector">USB Verbindungs- Objekt</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.mySpeedTact">
            <summary>
            Steuert den Takt des Kontrollers
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.Tact(System.Byte)">
            <summary>
            Geschwindigkeit wird in Prozent geändert (von 1 bis 100%)
            </summary>
            <param name="aPercent">Prozent von 1 bis 100%</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.TactMinus">
            <summary>
            Takt um 1% verkleinern
            </summary>
            <returns>Aktuelle Geschwindigkeit in Prozent</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.TactPlus">
            <summary>
            Takt um 1% erhöhen
            </summary>
            <returns>Aktuelle Geschwindigkeit in Prozent</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.SetPin(De.Boenigk.SMC5D.Basics.Output,System.Boolean)">
            <summary>
            Pin wird geschaltet
            </summary>
            <param name="aPin">Pin</param>
            <param name="aOn">True schaltet Relay ein</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.IsOn(De.Boenigk.SMC5D.Basics.Output)">
            <summary>
            Prüft ob ein Ausgang gesetzt ist
            </summary>
            <param name="aPin">Ausgang dass geprüft wird</param>
            <returns>True, Ausgang ist gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.Step(De.Boenigk.SMC5D.Basics.MoveAxis,System.Boolean,System.Single)">
            <summary>
            Ein Schritt oder Schrittreihe wird mit Intervall ausgeführt
            </summary>
            <param name="aAxis">Achse X,Y, Z oder A</param>
            <param name="aPlus">Richtung Plus/Minus</param>
            <param name="aSpeed">X, Y Achse Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.StepXY(System.Boolean,System.Boolean,System.Single)">
            <summary>
            Ein Schritt oder Schrittreihe in X und Y wird mit Intervall ausgeführt
            </summary>
            <param name="aXPlus">X Richtung Plus/Minus</param>
            <param name="aYPlus">Y Richtung Plus/Minus</param>
            <param name="aSpeed">X, Y Achse Geschwindigkeit</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myStopPressed">
            <summary>
            True, Stopp wird ausgeführt!
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.Stop">
            <summary>
            Taste losgelassen, Stopp wird durchgeführt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.SStop">
            <summary>
            Taste losgelassen, Stopp wird durchgeführt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.Move(De.Boenigk.SMC5D.Core.Axis,De.Boenigk.SMC5D.Core.ManualMoveAxis,System.Single)">
            <summary>
            Fahrt auf einer Achse ausführen
            </summary>
            <param name="aAxis">Achse die bewegt werden soll</param>
            <param name="aAxisDirection">Achse mit Richtung</param>
            <param name="aSpeed">Geschwindigkeit in Millimeter pro Sekunde</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.SendEvent(De.Boenigk.SMC5D.Basics.SMCException)">
            <summary>
            Status der Steuerelektronik wird als Nachricht gesendet
            </summary>
            <param name="ex">ControlException</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.ManualMove.myTimerState">
            <summary>
            Timer Status
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.InitTimer">
            <summary>
            Timer wird für die Abfrage gesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.StartTimer(De.Boenigk.SMC5D.Core.Axis,De.Boenigk.SMC5D.Core.ManualMoveAxis)">
            <summary>
            Timer wird sofort gestartet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.StopTimer">
            <summary>
            Timer wird angehalten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.ManualMove.CheckStatus(System.Object)">
            <summary>
            Timer Status wird verändert. Wenn diese Methode aufgerufen,
            dann ist die Zeit abgelaufen, der Timer wird genullt.
            </summary>
            <param name="state">Object</param>
        </member>
        <member name="E:De.Boenigk.SMC5D.Move.ManualMove.OnSMCStatusEventHandler">
            <summary>
            Arbeitsablauf- Nachricht Status
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.ManualMove.Slantwise">
            <summary>
             True, es wird eine schräge Fahrt in X und Y ausgeführt, sonst Fahrt auf einer Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.ManualMove.Status">
            <summary>
            Der Status der Maschine wird zurückgegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.ManualMove.LaserOn">
            <summary>
            Laser Leistung (PWM, Duty) aktivieren oder deaktivieren für Manuell bewegen 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.ManualMove.IgnoreMonitoring">
            <summary>
            True, Überwachung wird ausgeschaltet, die Überwachung- Parameter der einzelnen Achsen werden ignotriert ohne sie zu ändern!
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.ManualMove.StepByStep">
            <summary>
            True, es wird eine langsame Schrittreihe ausgeführt (Schritt für Schritt)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.ManualMove.SMCStatusEventHandler">
            <summary>
            Typsicherer Zeiger (Delegate) SMCStatusEventHandler 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Monitoring">
            <summary>
            Führt eine Bereichsüberwachung für die manuelle Fahrt durch.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Monitoring.mySMCSettings">
            <summary>
            Kontroller Einstellungen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Monitoring.myAccelerationBrakeWay">
            <summary>
            Rechnet Beschleunigung und Bremsweg in Schritten aus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Monitoring.mySpeed">
            <summary>
            Rechnet Geschwindigkeiten in andere Einheiten um
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Monitoring.myConnector">
            <summary>
            USB Verbindungsobjekt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Monitoring.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor mit Angabe der Einstellungen
            </summary>
            <param name="aConnector">USB Verbindungsobjekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Monitoring.IsOn(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Prüft ob mind. eine Achse eingeschaltete Überwachung hat.
            </summary>
            <param name="aSMCSettings">Einstellungen der Steuerelektronik SMC5D</param>
            <returns>True, dann ist mind. eine Achse hat Überwachung an</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Monitoring.InRestrictedArea(De.Boenigk.SMC5D.Basics.GlobPosition)">
            <summary>
            Überprüft ob die Maschinenposition sich im Sicherheitsbereich befindet. 
            </summary>
            <param name="aGlobPosition">Aktuelle Position als GlobPosition Objekt</param>
            <returns>Null, Maschine liegt in keinem Sicherheitsbereich, sonst wird dieser Sicherheitsbereich als Objekt 'RestrictedArea' zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Monitoring.OutOfArea(De.Boenigk.SMC5D.Basics.GlobPosition,De.Boenigk.SMC5D.Basics.RestrictedAreaExcept)">
            <summary>
            Überprüft ob die Maschinenposition sich im Bereich befindet. 
            </summary>
            <param name="aGlobPosition">Aktuelle Position als GlobPosition Objekt</param>
            <param name="aRestrictedAreaExcept">Sperrbereich Ausnahmen (diese Aktion(en) sind erlaubt)</param>
            <returns>Wenn die Achse überschritten wurde, dann wird der Achsen- Name zurückgegeben, anderenfalls Axis.None</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Monitoring.CheckRestrictedArea(De.Boenigk.SMC5D.Basics.MoveAxis,System.Boolean,De.Boenigk.SMC5D.Basics.GlobPosition,De.Boenigk.SMC5D.Basics.RestrictedAreaExcept,System.UInt32)">
            <summary>
            Prüft die Sicherheitsbereiche
            </summary>
            <param name="aAxis">Achse als Konstante C_Axis</param>
            <param name="aPlus">Fahrtrichtung, True dann Position aufsteigend</param>
            <param name="aGlobPosition">Aktuelle Position als GlobPosition Objekt</param>
            <param name="aRestrictedAreaExcept">Sperrbereich Ausnahmen (diese Aktion(en) sind erlaubt)</param>
            <param name="aSpeed">Geschwindigkeit der Fahrt als Byte Objekt</param>
            <returns>True, Position in Arbeitsbereich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Monitoring.InArea(De.Boenigk.SMC5D.Settings.RestrictedArea,System.Double,System.Double)">
            <summary>
            Überprüft ob die Position der Maschine im zulässigem Bereich liegt.
            </summary>
            <param name="aRestrictedArea">Sperrbereich</param>
            <param name="aLocationX">Position X der Achse in Millimeter</param>
            <param name="aLocationY">Position Y der Achse in Millimeter</param>
            <returns>True, Position in Arbeitsbereich, false im Sicherheitsbereich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Monitoring.InAreaX(System.Int64,De.Boenigk.SMC5D.Settings.RestrictedArea,System.Double,System.Double,System.Boolean)">
            <summary>
            Überprüft ob die Position X der Maschine im Bereich
            </summary>
            <param name="aBrakeWay">Bremsweg in Millimeter</param>
            <param name="aRestrictedArea">Sperrbereich</param>
            <param name="aLocationX">Position X der Achse in Millimeter</param>
            <param name="aLocationY">Position Y der Achse in Millimeter</param>
            <param name="aPlus">Fahrtrichtung, True dann Position aufsteigend</param>
            <returns>True, Position in Arbeitsbereich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Monitoring.InAreaY(System.Int64,De.Boenigk.SMC5D.Settings.RestrictedArea,System.Double,System.Double,System.Boolean)">
            <summary>
            Überprüft ob die Position Y der Maschine im Bereich
            </summary>
            <param name="aBrakeWay">Bremsweg in Millimeter</param>
            <param name="aRestrictedArea">aRestrictedArea</param>
            <param name="aLocationX">Position X der Achse in Millimeter</param>
            <param name="aLocationY">Position Y der Achse in Millimeter</param>
            <param name="aPlus">Fahrtrichtung, True dann Position aufsteigend</param>
            <returns>True, Position in Arbeitsbereich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Monitoring.InRestrictedArea(De.Boenigk.SMC5D.Basics.GlobPosition,De.Boenigk.SMC5D.Basics.RestrictedAreaExcept)">
            <summary>
            Überprüft ob sich die Maschine im Sperrbereich befindet.
            </summary>
            <param name="aGlobPosition">Aktuelle Position als GlobPosition Objekt</param>
            <param name="aRestrictedAreaExcept">Sperrbereich Ausnahmen (diese Aktion(en) sind erlaubt)</param>
            <returns>Wenn die Achse überschritten wurde, dann wird der Achsen- Name zurückgegeben, anderenfalls Axis.None</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Monitoring.IgnoreMonitoring">
            <summary>
            True, Überwachung wird ausgeschaltet, die Überwachung- Parameter der einzelnen Achsen werden ignoriert ohne sie zu ändern!
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Monitoring.RestrictedArea">
            <summary>
            Gibt den Bereich dass Überschritten wurde. Wenn kein Bereich überschritten, dann wird null zurückgegeben
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Reference">
            <summary>
            Führt eine Referenzfahrt durch.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Reference.mySettings">
            <summary>
            Alle Einstellungen des Controllers
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">USB Verbindungsobjekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.InitDefault">
            <summary>
            Default Einstellung, Achsen die verfügbar für Referenzfahrt aktivieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.myAxis_OnRefDirection(System.Boolean)">
            <summary>
            Referenzfahrtrichtung- Nachricht
            </summary>
            <param name="aToSwitch">True, Fahrt auf Schalter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.myAxis_OnSMCStatusEventHandler(System.Object,De.Boenigk.SMC5D.Basics.SMCStatusEventArgs)">
            <summary>
            Nachricht, eine Achse wurde referenziert
            </summary>
            <param name="source">Objekt</param>
            <param name="e">SMCStatusEventArgs</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.GetStepMissing(De.Boenigk.SMC5D.Basics.SMCAxisType)">
            <summary>
            Schrittverluste für angegebene Achse werden zurückgegeben
            </summary>
            <param name="aSMCAxisType">De.Boenigk.ISMC.SMCAxisType</param>
            <returns>Schrittverluste in Schritten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.Abort">
            <summary>
            Abbruch, Maschinenarbeit wurde abgebrochen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.Start">
            <summary>
            Referenz wird ausgeführt. Beim Start muss die Geschwindigkeit in Prozent angegeben werden.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.SetAPos(System.Int32)">
            <summary>
            A Position setzen
            </summary>
            <param name="aA">Position in Schritten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.SetBPos(System.Int32)">
            <summary>
            B Position setzen
            </summary>
            <param name="aB">Position in Schritten</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Reference.mySpeedTact">
            <summary>
            Steuert den Tact des Kontrollers
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.Tact(System.Byte)">
            <summary>
            Geschwindigkeit wird in Prozent geändert (von 1 bis 100%)
            </summary>
            <param name="aPercent">Prozent von 1 bis 100%</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.TactMinus">
            <summary>
            Takt um 1% verkleinern
            </summary>
            <returns>Aktuelle Geschwindigkeit in Prozent</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.TactPlus">
            <summary>
            Takt um 1% erhöhen
            </summary>
            <returns>Aktuelle Geschwindigkeit in Prozent</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ResetCounters">
            <summary>
            Position der Maschine wird auf Referenzpunkt gesetzt (z.B.: für Maschinen die keine Referenzschalter haben).
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ResetCounterX(System.Double)">
            <summary>
            Position der Maschine wird in X auf einen Wert gesetzt.
            </summary>
            <param name="aPositon">Angegebene Länge in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ResetCounterY(System.Double)">
            <summary>
            Position der Maschine wird in Y auf einen Wert/Position gesetzt.
            </summary>
            <param name="aPositon">Angegebene Länge in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ResetCounterZ(System.Double)">
            <summary>
            Position der Maschine wird in Z auf einen Wert/Position gesetzt.
            </summary>
            <param name="aPositon">Angegebene Länge in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ResetCounterA(System.Double)">
            <summary>
            Position der Maschine wird in A auf einen Wert/Position gesetzt.
            </summary>
            <param name="aPositon">Angegebene Länge in Millimeter</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ResetCounterB(System.Double)">
            <summary>
            Position der Maschine wird in B auf einen Wert/Position gesetzt.
            </summary>
            <param name="aPositon">Angegebene Länge in Millimeter</param>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Reference.mySequence">
            <summary>
            Enthält Referenzreihenfolge
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.SetSequence">
            <summary>
            Referenz- Reihenfolge wird ermittelt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ZABYX">
            <summary>
            Referenz Reihenfolge Z,A,B,Y,X
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ZXYAB">
            <summary>
            Referenz Reihenfolge Z,X,Y,A,B
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ZYXAB">
            <summary>
            Referenz Reihenfolge Z,Y,X,A,B
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.XZYAB">
            <summary>
            Referenz Reihenfolge X,Z,Y,A,B
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.YZXAB">
            <summary>
            Referenz Reihenfolge Y,Z,X,A,B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Reference.myCounter">
            <summary>
            Zählt die Achsen, die referenziert worden sind
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Reference.myAxis">
            <summary>
            Führt eine Fahrt auf Schalter aus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.Reference.mySMCAxisType">
            <summary>
            Achsen- Typ
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.RunNext">
            <summary>
            Nächste Achse wird referenziert
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.Adjust">
            <summary>
            Doppelantrieb justieren
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.ResetLastCounter(System.Boolean)">
            <summary>
            Letzter Zähler wird gelöscht
            </summary>
            <param name="aAddMoveFrom">True, dann wird die anschließende Fahrt vom Schalter berücksichtigt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.RunX">
            <summary>
            Fahrt auf der X Achse wird durchgeführt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.RunXY">
            <summary>
            Referenzfahrt in XY simultan ausführen 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.RunX2">
            <summary>
            Fahrt auf der X2 Achse wird durchgeführt. X2 Achse ist für
            Maschinen, die auf der X2 Achse 2 Schrittmotoren haben.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.RunY2">
            <summary>
            Fahrt auf der Y2 Achse wird durchgeführt. Y2 Achse ist für
            Maschinen, die auf der Y2 Achse 2 Schrittmotoren haben.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.RunY">
            <summary>
            Fahrt auf der Y Achse wird durchgeführt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.RunZ">
            <summary>
            Fahrt auf der Z Achse wird durchgeführt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.RunA">
            <summary>
            Fahrt auf der A Achse wird durchgeführt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.RunB">
            <summary>
            Fahrt auf der B Achse wird durchgeführt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.SetDefault">
            <summary>
            Ende erreicht, Referenz wird zurückgesetzt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Reference.SendMessage(De.Boenigk.SMC5D.Basics.SMCException)">
            <summary>
            Status der Steuerungselektronik wird als Nachricht senden.
            </summary>
            <param name="ex">SMCException</param>
        </member>
        <member name="E:De.Boenigk.SMC5D.Move.Reference.OnSMCReferencedEventHandler">
            <summary>
            Eine Referenzfahrt wurde für eine Achse ausgeführt!
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Move.Reference.OnSMCRunRefenceEventHandler">
            <summary>
            Eine Referenzfahrt wird für eine Achse ausgeführt!
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Move.Reference.OnSMCStatusEventHandler">
            <summary>
            Arbeitsablauf- Nachricht Status
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Move.Reference.OnRefDirection">
            <summary>
            Referenzfahrtrichtung- Nachricht
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Reference.Connector">
            <summary>
            Gibt Verbindungsobjekt zurück
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Reference.GlobPosition">
            <summary>
            Rückgabe der Globalen Position
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Reference.RX">
            <summary>
            True, Referenzfahrt auf der X Achse durchführen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Reference.RY">
            <summary>
            True, Referenzfahrt auf der Y Achse durchführen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Reference.RZ">
            <summary>
            True, Referenzfahrt auf der Z Achse durchführen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Reference.RA">
            <summary>
            True, Referenzfahrt auf der A Achse durchführen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Reference.RB">
            <summary>
            True, Referenzfahrt auf der B Achse durchführen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Reference.Status">
            <summary>
            Status der Maschine wird zurückgegeben
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Reference.SMCStatusEventHandler">
            <summary>
            Typsicherer Zeiger (Delegate) SMCStatusEventHandler 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Reference.SMCAxisEventHandler">
            <summary>
            Typsicherer Zeiger (Delegate) SMCAxisEventHandler
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Reference.RefDirectionEventHandle">
            <summary>
            Typsicherer Zeiger (Delegate) RefDirectionEventHandle
            </summary>
            <param name="aToSwitch">True, Fahrt auf Schalter, False Fahrt vom Schalter</param>
            <param name="aType">Achse</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.SpeedTact">
            <summary>
             Steuert den Takt des Controller in Prozent
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.SpeedTact.C_MaxPercent">
            <summary>
            Maximale Prozentzahl
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.SpeedTact.myPic32DLL">
            <summary>
            Zugriff auf Pic Befehle
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.SpeedTact.myDOPISZ_DANE">
            <summary>
            Daten- Struktur für den Pic32
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.SpeedTact.#ctor(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Konstruktor
            </summary>
            <param name="aConnector">Verbindungsobjekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.SpeedTact.Tact(System.Byte)">
            <summary>
            Geschwindigkeit wird in Prozent geändert (von 1 bis 100%)
            </summary>
            <param name="aPercent">Prozent von 1 bis 100%</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.SpeedTact.TactMinus">
            <summary>
            Takt um 1% verkleinern
            </summary>
            <returns>Aktuelle Geschwindigkeit in Prozent</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.SpeedTact.TactPlus">
            <summary>
            Takt um 1% erhöhen
            </summary>
            <returns>Aktuelle Geschwindigkeit in Prozent</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.SpeedTact.Percent">
            <summary>
            Aktuelle Geschwindigkeit in Prozent
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.Step">
            <summary>
            Step Objekt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Step.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Step.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Konstruktor
            </summary>
            <param name="aX">X Koordinate</param>
            <param name="aY">Y Koordinate</param>
            <param name="aZ">Z Koordinate</param>
            <param name="aA">A Koordinate</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Step.SetOut(De.Boenigk.SMC5D.Basics.Output,System.Boolean)">
            <summary>
            Schaltet oder ausschaltet ein Ausgang
            </summary>
            <param name="aOutput">Output</param>
            <param name="aOn">True, Ausgang schalten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Step.IsOutOn(De.Boenigk.SMC5D.Basics.Output)">
            <summary>
            Prüft ob Pin gesetzt ist. 
            </summary>
            <param name="aOutput">Output dass geprüft wird</param>
            <returns>True, dann ist Pin gesetzt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Step.GetCopy">
            <summary>
            Eine Kopie der Struktur wird zurückgegeben
            </summary>
            <returns>Eine Kopie dieses Objektes</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Step.IsEqual_XYZAB_Wait_Out_SpindleSpeed(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Prüft ob die Werte X,Y,Z,A,B,Wait und Out gleich sind. Wenn Werte gleich dann wird true zurückgegeben,
            </summary>
            <param name="aStep">Step dass verglichen wird</param>
            <returns>True, dann Werte sind gleich</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Step.IsValue_XYZAB_Wait">
            <summary>
            Prüft ob dieser Step Objekt Delta- oder Wait- Werte hat. True, dann ist mindestens ein Wert vorhanden.
            </summary>
            <returns>True, dann mindestens ein Wert vorhanden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Step.GetTitle">
            <summary>
            DStruct Titel String ausgeben
            </summary>
            <returns>String</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.Step.ToString">
            <summary>
            DStruct als String ausgeben
            </summary>
            <returns>string</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Length">
            <summary>
            Gibt die Länge eines Step Objektes in Bytes
            </summary>
            <returns>Länge in Bytes als int Wert</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Down">
            <summary>
            True, Werkzeug gesenkt, oder false für gehoben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.X">
            <summary>
            X Koordinate in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Y">
            <summary>
            Y Koordinate in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Z">
            <summary>
            Z Koordinate in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.A">
            <summary>
            A Koordinate in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.B">
            <summary>
            B Koordinate in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Speed">
            <summary>
            Geschwindigkeit in Millimeter pro Sekunde
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.SpindleSpeed">
            <summary>
            Spindel- Geschwindigkeit
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Wait">
            <summary>
            Wartezeit in Millisekunden
             0              - keine Funktion
             1              - 32767 Wartezeit in Millisekunden (bis etwa 32 sekunden)
            -1 oder kleiner - Befehl M00, Maschine wird angehalten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Out">
            <summary>
            Relais werden geschaltet oder ausgeschaltet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Repeat">
            <summary>
            Nummer des Durchlaufes (Wiederholung), 0 ist keine Wiederholung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Index">
            <summary>
            Index, kann unter anderen für Pause genutzt werden. 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.LineIndex">
            <summary>
            Zugriff auf Index des original Vektors (wird für die Ermittlung der Position benötigt)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.ID">
            <summary>
            ID ist Zeilennummer des Befehls im Text Editor (wird für die Ermittlung der Position im Text Editor benötigt)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.Step.Commands">
            <summary>
            Befehle Bit Wert 1 = Tangential Funktion ausführen
                    Bit Wert 2 = Tangential ist B Achse
                    Bit Wert 4 = Tangential ist auf B Achse (Z heben nach B umleiten)
                    Bit Wert 8 = Vorschub- und Drehzahloverride unwirksam (z.b. bei Gewinde- Schneiden darf die Geschwindigkeit nicht verändert werden)
                    Bit Wert 16 = Auf PWM(AD) 2 wird umgeschaltet
                    Bit Wert 32 = Auf PWM(AD) 3 wird umgeschaltet
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.StepList">
            <summary>
            Verwaltung eine Liste mit Step Objekten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepList.myStepList">
            <summary>
            List mit Step Objekten
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepList.myLineIndex">
            <summary>
            Zeilennummerierung
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepList.myStep">
            <summary>
            Step Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepList.mySettings">
            <summary>
            Alle Einstellungen der Steuerelektronik SMC5D
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.#ctor(De.Boenigk.SMC5D.Basics.GlobPosition,De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor mit Angabe der GlobPosition, SMCSettings und SwitchByte
            </summary>
            <param name="aGlobPosition">Aktuelle Position der Maschine als GlobPosition Objekt</param>
            <param name="aSettings">Alle Einstellungen der Steuerelektronik SMC5D</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.ToString">
            <summary>
            Liste mit Koordinaten als string wird ausgegeben
            </summary>
            <returns>Liste mit Koordinaten als string</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.Clear(De.Boenigk.SMC5D.Basics.GlobPosition)">
            <summary>
            List mit Step Objekten löschen
            </summary>
            <param name="aGlobPosition">Aktuelle Position der Maschine als GlobPosition Objekt</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddBY(System.Double,System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktX">Punkt B</param>
            <param name="aPunktY">Punkt Y</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddXYZ(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktX">Punkt X</param>
            <param name="aPunktY">Punkt Y</param>
            <param name="aPunktZ">Punkt Z</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddXYZA(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktX">Punkt X</param>
            <param name="aPunktY">Punkt Y</param>
            <param name="aPunktZ">Punkt Z</param>
            <param name="aPunktA">Punkt A</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddXYZAB(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktX">Punkt X</param>
            <param name="aPunktY">Punkt Y</param>
            <param name="aPunktZ">Punkt Z</param>
            <param name="aPunktA">Punkt A</param>
            <param name="aPunktB">Punkt B</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddXY(System.Double,System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktX">Punkt X</param>
            <param name="aPunktY">Punkt Y</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddXA(System.Double,System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktX">Punkt X</param>
            <param name="aPunktA">Punkt A</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddYA(System.Double,System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktY">Punkt Y</param>
            <param name="aPunktA">Punkt A</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.SetOut(De.Boenigk.SMC5D.Basics.Output,System.Boolean)">
            <summary>
            Ein Output ein/ausschalten wird hinzugefügt
            </summary>
            <param name="aOutput">Ausgang dass geschaltet wird</param>
            <param name="aOn">True, Ausgang setzen, False ausschalten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.SetOutToAllSteps(De.Boenigk.SMC5D.Basics.Output,System.Boolean)">
            <summary>
            Ein Output ein/ausschalten für die ganze Liste mit Step- Objekten 
            </summary>
            <param name="aOutput">Ausgang dass geschaltet wird</param>
            <param name="aOn">True, Ausgang setzen, False ausschalten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.ResetOut(De.Boenigk.SMC5D.Basics.Output)">
            <summary>
            Alle Schalter werden zurückgesetzt
            </summary>
            <param name="aOutput">Ausgang wird auf ein Wert gesetzt. Wenn Output.Default dann werden alle Ausgänge geschlossen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.ResetOut">
            <summary>
            Alle Schalter werden zurückgesetzt. 
            Ausnahmen: Wenn Spannzange offen oder Haube für Werkzeugwechsler offen, dann werden diese nicht geschlossen.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddXYAB(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktX">Punkt X</param>
            <param name="aPunktY">Punkt Y</param>
            <param name="aPunktA">Punkt A</param>
            <param name="aPunktB">Punkt B</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddXYA(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktX">Punkt X</param>
            <param name="aPunktY">Punkt Y</param>
            <param name="aPunktA">Punkt A</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddX(System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktX">Punkt X</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddY(System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktY">Punkt Y</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddA(System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktA">Punkt A</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddZ(System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktZ">Punkt Z</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddWait(System.Int16)">
            <summary>
            Wartezeit wird hinzugefügt
            </summary>
            <param name="aWait">Wartezeit in Millisekunden</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.AddB(System.Double,System.Double)">
            <summary>
            Ein Fahr- Punkt hinzufügen
            </summary>
            <param name="aPunktB">Punkt B</param>
            <param name="aSpeed">Geschwindigkeit</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepList.Add(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            Ein Fahr- Punkt als Step hinzufügen
            </summary>
            <param name="aStep">Step Objekt wird hinzugefügt</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.StepList.List">
            <summary>
            Zugriff auf List mit Step Objekten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.StepList.Last">
            <summary>
            Zugriff auf letzten Step 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.StepReader">
            <summary>
            Liest Step Objekte aus der binären Datei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepReader.C_Buffer">
            <summary>
            Größe des Datei Buffers
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepReader.myFile">
            <summary>
            Dateien mit Pfad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepReader.myStepLenght">
            <summary>
            Anzahl der Bytes dass ein Step hat
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepReader.myBinaryReader">
            <summary>
            Daten binär lesen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.#ctor(System.String)">
            <summary>
            Konstruktor mit Angabe der Datei
            </summary>
            <param name="aFile">Dateiname mit Pfad</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.Open">
            <summary>
            Eine Datei wird geöffnet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.Read">
            <summary>
            Ein Step wird gelesen, Rückgabe Null wenn Ende erreicht
            </summary>
            <returns>Step wird zurückgegeben, wenn Ende erreicht dann wird null zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.ReadLast">
            <summary>
            Letzter Step wird gelesen. Danach wird auf die alte Position zurückgesetzt.
            </summary>
            <returns>Step wird zurückgegeben, wenn Ende erreicht dann wird null zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.ReadStep(System.Int32)">
            <summary>
            Step wird aus einer Position gelesen
            </summary>
            <param name="aIndex">Indexnummer des Step Objektes</param>
            <returns>Step wird zurückgegeben, wenn Ende erreicht dann wird null zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.Read(System.Int32)">
            <summary>
            Eine Anzahl der Step Objekte wird gelesen, wenn Ende erreicht dann wird eine leere ArrayList zurückgegeben
            </summary>
            <param name="aSteps">Anzahl der zu lesenden Step Objekte</param>
            <returns>List mit Step Objekten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.ReadToEnd">
            <summary>
            Datei zu Ende lesen und als Step List zurückgegben
            </summary>
            <returns>List mit Step Objekten</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.Close">
            <summary>
            Datei wird geschlossen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.CreateStep(System.Byte[],System.Int32)">
            <summary>
            Aus einem Byte Feld wird ein Step Objekt erzeugt und zurückgegeben
            </summary>
            <param name="aBytes">Feld mit Byte Objekten</param>
            <param name="aStartIndex">Start Index</param>
            <returns>Step Objekt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepReader.CreateSteps(System.Byte[])">
            <summary>
            Aus einem Byte Feld werden Step Objekte erzeugt und in einer ArrayList zurückgegeben
            </summary>
            <param name="aBytes">Feld mit Byte Objekten</param>
            <returns>ArrayList mit Step Objekten</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.StepReader.IsOpened">
            <summary>
            True, Datei ist geöffnet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.StepReader.Info">
            <summary>
            Gibt die Datei- Informationen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.StepReader.Count">
            <summary>
            Anzahl der Step- Objekte in der Datei
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.StepWriter">
            <summary>
            Schreibt Step Objekte binär in die Datei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepWriter.myFile">
            <summary>
            Dateien mit Pfad
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepWriter.myBinaryWriter">
            <summary>
            Daten binär schreiben
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepWriter.myOpen">
            <summary>
            True, Datei ist geöffnet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepWriter.myLogFile">
            <summary>
            Log Datei
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepWriter.myCount">
            <summary>
            Anzahl Steps die gespeichert werden
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.StepWriter.myCounter">
            <summary>
            Zählt die Steps
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepWriter.#ctor(System.String)">
            <summary>
            Konstruktor mit Angabe der Datei
            </summary>
            <param name="aFile">Dateiname mit Pfad</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepWriter.Write(System.Collections.Generic.List{De.Boenigk.SMC5D.Move.Step})">
            <summary>
            ArrayList mit Step Objekten wird in die Datei geschrieben
            </summary>
            <param name="aStepList">List mit Step Objekten</param>
            <exception cref="T:System.Exception">Im Fehlerfall wird eine System.Exception geworfen</exception>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepWriter.LogSteps(System.String,System.Int32)">
            <summary>
            Schreibt Werte eine bestimmte Anzahl der Step- Objekte
            </summary>
            <param name="aFile">Log- Dateiname</param>
            <param name="aCount">Anzahl Step Objekte derren Wert ins Log geschrieben werden sollten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepWriter.Write(De.Boenigk.SMC5D.Move.Step)">
            <summary>
            ArrayList mit Step Objekten wird in die Datei geschrieben
            </summary>
            <param name="aStep">Step Objekt</param>
            <exception cref="T:System.Exception">Im Fehlerfall wird eine System.Exception geworfen</exception>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepWriter.Open">
            <summary>
            Temporäre Datei wird zum Schreiben geöffnet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.StepWriter.Close">
            <summary>
            Datei wird geschlossen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.StepWriter.Steps">
            <summary>
            Anzahl der gespeicherten Steps
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.StepWriter.IsWrited">
            <summary>
            True, ein Step oder mehrere Step Objekte wurden in die Datei geschrieben
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Move.TimeCalculation">
            <summary>
            Ermittelt die Arbeitszeit.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.TimeCalculation.myPuffer">
            <summary>
            Creator Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.TimeCalculation.myThread">
            <summary>
            Thread
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.TimeCalculation.myConnector">
            <summary>
            USB Verbindungs- Objekt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Move.TimeCalculation.myStepFile">
            <summary>
            Dateiname mit Step Objekten
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.TimeCalculation.#ctor(De.Boenigk.SMC5D.Basics.Connector,System.String)">
            <summary>
            Konstruktor mit Angabe der Step Objekte als eine Datei. Die Datei wird mit StepWriter erzeugt.
            </summary>
            <param name="aConnector">USB Verbindungs- Objekt</param>
            <param name="aStepFile">Dateiname mit Step Objekten</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.TimeCalculation.Start">
            <summary>
            Simulation wird gestartet, Daten(Step Objekte) werden in einem Thread an SMC5D Controller gesendet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.TimeCalculation.Abort">
            <summary>
            Führt ein Abbruch durch!
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.TimeCalculation.Create">
            <summary>
            Nächste Position oder null wird zurückgegeben
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.TimeCalculation.Dispose">
            <summary>
            Alle Ressourcen werden geschlossen, Speicher wird befreit, Dateien werden geschlossen.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Move.TimeCalculation.IsRun">
            <summary>
            True, Zeitermittlung wird gerade ermittelt, anderenfalls false
            </summary>
            <returns>True, Zeitermittlung wird gerade ermittelt</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.TimeCalculation.Time">
            <summary>
            Ermittelte Zeit in Sekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.TimeCalculation.LastLineIndex">
            <summary>
            Gibt die Anzahl der Step Objects an
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Move.TimeCalculation.CurrentLineIndex">
            <summary>
            Gibt den aktuellen Index des Step Objektes dass gerade vom Job abgearbeitet wird
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.AAxisUnit">
            <summary>
            Definiert die Einheit der A Achse (Grad/MM).
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AAxisUnit.AMM">
            <summary>
            A Achse ist in Millimeter 
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AAxisUnit.AGrad">
            <summary>
            A Achse ist in Grad
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.AutoToolMonitoring">
            <summary>
            Prüft die Haube des Werkzeugwechslers mit Hilfe eines Eingangs 
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.AutoToolMonitoring.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolMonitoring.On">
            <summary>
            Funktion aktivieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolMonitoring.InputPin">
            <summary>
            Eingang Nummer
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolMonitoring.InputPinInvert">
            <summary>
            Eingang invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolMonitoring.Message">
            <summary>
            Meldung, wenn die Haube für Werkzeugwechsler nixht geöffnet ist
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.AutoToolOffset">
            <summary>
            Werkzeugwechsler Offset
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.AutoToolOffset.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.AutoToolOffset.Clone">
            <summary>
            Objekt dieser Klasse wird exakt geklonnt
            </summary>
            <returns>Eine exakte Kopie dieses Objektes</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolOffset.View">
            <summary>
            True, Offset(Werkzeug) wird angezeigt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolOffset.X">
            <summary>
            Offset X 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolOffset.Y">
            <summary>
            Offset Y 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.AutoToolSettings">
            <summary>
            Einstellungen des automatischen Werkzeugwechslers
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.AutoToolSettings.GetAfterEndPutOff">
            <summary>
            True, am Ende Werkzeug heben
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.AutoToolSettings.GetPosition(System.Int32)">
            <summary>
            Ermittelt die Position der angegebenen Index- Werkzeugnummer
            </summary>
            <param name="aTxx">Werkzeugnummer</param>
            <returns>Position des Werkzeugs in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.AutoToolSettings.GetPositionXToB(System.Int32)">
            <summary>
            Ermittelt die Position der angegebenen Index- Werkzeugnummer
            </summary>
            <param name="aTxx">Werkzeugnummer</param>
            <returns>Position des Werkzeugs in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.AutoToolSettings.SetAfterEndPutOff(System.Boolean)">
            <summary>
            Am Ende Werkzeug heben setzen
            </summary>
            <param name="aPutOff">True, Werkzeug am Ende heben</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.AutoToolSettings.IsUsed(System.Int32)">
            <summary>
            Überprüft ob diese Werkzeugnummer im Werkzeugwechsler aktiv ist.
            </summary>
            <param name="aTxx">Werkzeugnummer</param>
            <returns>True, Werkzeugnummer aktiv sonst false</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.On">
            <summary>
            True, Werkzeugwechsler ist an
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.BSpeed">
            <summary>
            True, B Speed
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.XToB">
            <summary>
            True, X nach B umleiten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.XToBOffset">
            <summary>
            Offset- Verschiebung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.HoodOn">
            <summary>
            Haube einschalten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.HoodOnOutputList">
            <summary>
            Liste der Ausgänge, die beim Öffnen der Haube gesetzt werden sollen (einstellbar nur in der config.xml)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.WhenMeasured">
            <summary>
            Auch bei vermessen Haube öffnen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.HoodOutput">
            <summary>
            Haube Ausgang
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.HoodInput">
            <summary>
            Haube Eingang
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.HoodInputInvert">
            <summary>
            Haube Eingang Invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.HoodInputOn">
            <summary>
            Haube Eingang ein
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.CheckSpindleStopped">
            <summary>
            True, Prüfe ob Spindel steht mit einem Eingang
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.SpindleStoppedInput">
            <summary>
            Eingang wenn Spindel steht
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.SpindleStoppedInvert">
            <summary>
            Eingang wenn Spindel steht invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.Reference">
            <summary>
            True, Referenzfahrt vor "Werkzeug wechseln" ausführen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.SpeedReference">
            <summary>
            True, beschleunigte Referenzfahrt ausführen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.AutoToolOffset">
            <summary>
            ArrayList mit PointF Objekten. PointF Objekte sind Abstände 
            zwischen den einzelnen Werkzeugen im Werkzeugwechsler.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.StartPosition">
            <summary>
            X,Y,Z Position des Werkzeugwechsels
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.ClampingDevice">
            <summary>
            Spannzange Relais Pin 1,2,3,4,...
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.ClampingDeviceOn">
            <summary>
            Die Funktion Spannzange ein- oder ausschalten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.ZTop">
            <summary>
            Z Höhe beim Anfahren und Wegfahren zu/von Werkzeugwechsler
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.Way">
            <summary>
            Strecke Z
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.WayWithoutFreePuffOn">
            <summary>
            True, dann Strecke Z ohne frei pusten aktiv
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.WayWithoutFreePuff">
            <summary>
            Strecke Z ohne frei pusten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.WayXY">
            <summary>
            Strecke X oder Y
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.WayInX">
            <summary>
            Strecke in X fahren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.WayInY">
            <summary>
            Strecke in Y fahren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.WayInZ">
            <summary>
            Strecke in Z fahren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.BusyArgbColor">
            <summary>
            Belegt Color für Werkzeugplatz
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.FreeArgbColor">
            <summary>
            Frei Color für Werkzeugplatz
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.Speed">
            <summary>
            Geschwindigkeit
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.PUSpeed">
            <summary>
            Hubgeschwindigkeit
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.WaitTime">
            <summary>
            Wartezeit
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.SpindleWaitTime">
            <summary>
            Wartezeit in Millisekunden max. 32000 bis Spindel ausgeschaltet wird
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.FreePuffPermanently">
            <summary>
            Dauerhaftes Frei pusten bis Werkzeugwechsel abgeschlossen ist.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.FreePuffSec">
            <summary>
            Frei pusten Dauer in Sekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.FreePuffPin">
            <summary>
            Frei pusten Relais Pin 3,4,...
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.AutoToolHoodMonitoring">
            <summary>
            Prüft die Haube des Werkzeugwechslers mit Hilfe eines Eingangs 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.RelaySpindleCheckOn">
            <summary>
            True, dann wird ein Relay abgefragt, welcher überprüft ob ein Fräser in der Spannzange montiert ist.
            Dies ist nur mit einem automatischen Werkzeugwechsler mit speziellen Spanzange möglich.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.RelaySpindleCheckOff">
            <summary>
            True, dann wird ein Relay abgefragt, welcher überprüft ob kein Fräser in der Spannzange montiert ist.
            Dies ist nur mit einem automatischen Werkzeugwechsler mit speziellen Spanzange möglich.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.RelaySpindleCheckOffWait">
            <summary>
            Wartezeit in Millisekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.RelaySpindelCheck">
            <summary>
            Relay, welcher überprüft wird, ob ein Fräser in der Spannzange montiert ist.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.RelaySpindelCheckDelay">
            <summary>
            Verzögerung der Abfrage in Millisekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.RelaySpindelCheckInvert">
            <summary>
            Relay invertieren, welcher überprüft wird, ob ein Fräser in der Spannzange montiert ist.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.SelectedTxxArgb">
            <summary>
            Füllfarbe des leeren Werkzeug im Werkzeugwechsler
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.TxxArgb">
            <summary>
            Füllfarbe des belegten Werkzeug im Werkzeugwechsler
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.AfterEndPutOff">
            <summary>
            Am Ende Werkzeug heben setzen.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.UseT0">
            <summary>
            True, Werkzeug T0 wird benutzt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.MoveAfterScanUP">
            <summary>
            Eine relative Fahrt nach Werkzeugmessen 'PU' vom Werkzeugmessen um X oder Y ausführen.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.MoveAfterAutoToolUp">
            <summary>
            Eine relative Fahrt nach Werkzeugwechsel 'PU' vom Werkzeugwechsler um X oder Y ausführen.
            
            WICHTIG: Diese Funktion ist nur für Werkzeugwechsler, die von oben (Fahrt in Z) Werkzeuge holen und ablegen!
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.CloseAfterPutOffs">
            <summary>
            True, nach Ablegen des Werkzeugs, Spannzange sofort schließen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.CheckToolExcluded">
            <summary>
            Prüfen ob ein Werkzeug abgelegt worden ist. Die Überprüfung wird durch vermessen ausgeführt.
            Das heisst ein Messpunkt muss vorhanden und kalibriert sein.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.MinZ">
            <summary>
            Minimale Z Höhe
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.AutoToolSettings.MoveToFirstTool">
            <summary>
            Fahre zur Position des ersten Werkzeugs
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.AutoToolSettings.ToolPosition">
            <summary>
            Werkzeugposition
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AutoToolSettings.ToolPosition.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AutoToolSettings.ToolPosition.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AutoToolSettings.ToolPosition.Z">
            <summary>
            Z
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AutoToolSettings.ToolPosition.A">
            <summary>
            A
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AutoToolSettings.ToolPosition.B">
            <summary>
            B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AutoToolSettings.ToolPosition.Aon">
            <summary>
            A ist eingeschaltet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AutoToolSettings.ToolPosition.Bon">
            <summary>
            B ist eingeschaltet
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.AutoToolSettings.ToolPosition.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Boolean,System.Boolean)">
            <summary>
            Konstruktor
            </summary>
            <param name="aX">X Position</param>
            <param name="aY">Y Position</param>
            <param name="aZ">Z Position</param>
            <param name="aA">A Position</param>
            <param name="aB">B Position</param>
            <param name="aAon">A ist an</param>
            <param name="aBon">B ist an</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.AutoToolSettings.MoveAfter">
            <summary>
            Fahrt nach Werkzeugwechsler
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AutoToolSettings.MoveAfter.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.AutoToolSettings.MoveAfter.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.OutputStatus">
            <summary>
            Ausgang- Status- Einstellung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputStatus.Output">
            <summary>
            Ausgang
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputStatus.Invert">
            <summary>
            Ausgang invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputStatus.Wait">
            <summary>
            Wartezeit
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.BacklashSettings">
            <summary>
            Umkehrspiel Einstellungen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.BacklashSettings.CalculateStartStopStepsToMMs(De.Boenigk.SMC5D.Basics.Connector,De.Boenigk.SMC5D.Core.Axis,De.Boenigk.SMC5D.Core.ManualMoveAxis)">
            <summary>
            Rechnet Zeit in ms für eine bestimmte Anzahl Schritte
            </summary>
            <param name="aConnector">Connector</param>
            <param name="aAxis">Achse dass berechnet wird</param>
            <param name="aAxisDirection">Richtung der Achse</param>
            <returns>Zeit in Millisekunden</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.BacklashSettings.GetMaxSteps(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Gibt den größten Umkehrspiel in Steps aus allen Achsen
            </summary>
            <param name="aSettings">SMCSettings</param>
            <returns>Größter Umkehrspiel aus allen Achsen</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.BacklashSettings.GetXSteps(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Umkehrspiel der X Achse wird in Steps zurückgegeben
            </summary>
            <param name="aSettings">SMCSettings</param>
            <returns>Umkehrspiel in Steps</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.BacklashSettings.GetYSteps(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Umkehrspiel der Y Achse wird in Steps zurückgegeben
            </summary>
            <param name="aSettings">SMCSettings</param>
            <returns>Umkehrspiel in Steps</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.BacklashSettings.GetZSteps(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Umkehrspiel der Z Achse wird in Steps zurückgegeben
            </summary>
            <param name="aSettings">SMCSettings</param>
            <returns>Umkehrspiel in Steps</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.BacklashSettings.GetASteps(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Umkehrspiel der A Achse wird in Steps zurückgegeben
            </summary>
            <param name="aSettings">SMCSettings</param>
            <returns>Umkehrspiel in Steps</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.BacklashSettings.GetBSteps(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Umkehrspiel der B Achse wird in Steps zurückgegeben
            </summary>
            <param name="aSettings">SMCSettings</param>
            <returns>Umkehrspiel in Steps</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.BacklashSettings.MM">
            <summary>
            True, Eingabe ist in Millimeter sonst in Schritten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.BacklashSettings.On">
            <summary>
            True, Umkehrspiel ist aktiv
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.BacklashSettings.X">
            <summary>
            Umkehrspiel X in Millimeter oder in Steps
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.BacklashSettings.Y">
            <summary>
            Umkehrspiel Y in Millimeter oder in Steps
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.BacklashSettings.Z">
            <summary>
            Umkehrspiel Z in Millimeter oder in Steps
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.BacklashSettings.A">
            <summary>
            Umkehrspiel A in Millimeter oder in Steps
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.BacklashSettings.B">
            <summary>
            Umkehrspiel B in Millimeter oder in Steps
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.CompensationSettings">
            <summary>
            Einstellungen der Kompensation
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.CompensationSettings.ImportFile(System.String,System.String,De.Boenigk.SMC5D.Basics.XYPointD)">
            <summary>
            Einstellungen werden importiert
            </summary>
            <param name="aFileX">Datei mit Werten für X Achse</param>
            <param name="aFileY">Datei mit Werten für Y Achse</param>
            <param name="aOffset">Offset X und Y</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.CompensationSettings.GetList(System.String)">
            <summary>
            Datei wird geladen
            </summary>
            <param name="aFile">Dateiname</param>
            <returns>Liste mit Punkten</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.CompensationSettings.On">
            <summary>
            Kompensation aktivieren oder deaktivieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.CompensationSettings.Points">
            <summary>
            ArrayList mit ScanPosition Objekten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.CompensationSettings.Offset">
            <summary>
            Offset X und Y
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings">
            <summary>
            Einstellungen für X2 und Y2
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings.Adjust">
            <summary>
            Die X oder Y Achse wird um die angegebene Strecke durch Bewegen des X2 Motors justiert.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings.AdjustAx">
            <summary>
            Achse, die justiert wird
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings.X2Y2Invert">
            <summary>
            X2/Y2 invertieren
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings.AdjustAxes">
            <summary>
            Achse die justiert wird
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings.AdjustAxes.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings.AdjustAxes.X2">
            <summary>
            X2
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings.AdjustAxes.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings.AdjustAxes.Y2">
            <summary>
            Y2
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.EmbossingPen">
            <summary>
            Prägestift Einstellungen.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.EmbossingPen.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmbossingPen.UseToolPropertyOffset">
            <summary>
            True, dann Offset aus Werkzeuglager entnehmen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmbossingPen.ON">
            <summary>
            True, Prägestift ist aktiv.
            Beim Prägestift wird keine Achse bewegt, sondern mit einem Schalter aktiviert.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmbossingPen.OffsetX">
            <summary>
            Offset für X
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmbossingPen.OffsetY">
            <summary>
            Offset für Y
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmbossingPen.RelayEmbossingOut">
            <summary>
            Relais für Prägestift
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.EmergencySettings">
            <summary>
            NOT-AUS Einstellungen Einstellungen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.EmergencySettings.GetStartDateTime">
            <summary>
            Merkt sich die Startzeit. Die Startzeit wird bei Generierung des Objekts dieser Klasse gemerkt
            </summary>
            <returns></returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.EmergencySettings.ResetStartDateTime">
            <summary>
            Startzeit wird gelöscht
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.On">
            <summary>
            True, Haube- Abfrage ist an 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.IfMilling">
            <summary>
            True, überwachen wenn Job läuft und bei bestimmten Werkzeugnummer
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.MillingTxx">
            <summary>
            Werkzeugnummer dass beim Fräsen verwendet wird
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.Tool">
            <summary>
            True, auf Werkzeugnummer beschrenken
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.DelOn">
            <summary>
            True, Startzeit nach angegeben Sekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.Del">
            <summary>
            Startzeit nach angegeben Sekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.InputDelay">
            <summary>
            Anzahl Abfragen bis eine Fehlermeldung ausgegeben wird
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.Input">
            <summary>
            Eingang
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.Invert">
            <summary>
            Eingang Invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.Automatically">
            <summary>
            Eingang-Status vor dem Start automatisch ermitteln
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.EmergencySettings.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.HandWheelSettings">
            <summary>
            Handrad Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.IsLicensed">
            <summary>
            Handrad ist lizensiert
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.On">
            <summary>
            Handrad Funktion einschalten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.KeypadOff">
            <summary>
            True, Keypad ist aus
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.Speed01">
            <summary>
            Geschwindigkeit 0.1 mm/sek
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.Speed001">
            <summary>
            Geschwindigkeit 0.01 mm/sek
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.MaxSpeedXY">
            <summary>
            Maximale Geschwindigkeit XY für Manuell Bewegen in XY
            </summary> 
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.PitchWheel">
            <summary>
            Steigung am Handrad (Rapid move)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.MaxSpeedZ">
            <summary>
            Maximale Geschwindigkeit Z für Manuell Bewegen in Z
            </summary> 
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.MaxSpeedA">
            <summary>
            Maximale Geschwindigkeit A für Manuell Bewegen in A
            </summary> 
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HandWheelSettings.MaxSpeedB">
            <summary>
            Maximale Geschwindigkeit B für Manuell Bewegen in B
            </summary> 
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.HeightSensor">
            <summary>
            Einstellungen für das Abtasten und das Werkzeugmessen.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.HeightSensor.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HeightSensor.SensorOffsetX">
            <summary>
            Abtaster Offset X
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HeightSensor.SensorOffsetY">
            <summary>
            Abtaster Offset Y
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HeightSensor.Hill">
            <summary>
            Flughöhe über dem Werkstück in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HeightSensor.HillDistanceLength">
            <summary>
            Länge der Teilstrecke der Flughöhe 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HeightSensor.HillOn">
            <summary>
            True, Flughöhe ist eingeschaltet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HeightSensor.ScanAreaPinInvert">
            <summary>
            Höhenkorrektur Abtaster invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HeightSensor.ScanAreaPin">
            <summary>
            Eingang für Höhenkorrektur Abtaster setzen oder zurückgeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HeightSensor.MeasureToolPinInvert">
            <summary>
            Werkzeugmessen invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HeightSensor.MeasureToolPin">
            <summary>
            Eingang für Werkzeugmessen setzen oder zurückgeben
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.HoodSettings">
            <summary>
            Haube Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HoodSettings.On">
            <summary>
            True, Haube- Abfrage ist an 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HoodSettings.SpeedOff">
            <summary>
            Zulässige manuelle Geschwindigkeit, wenn Haube offen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HoodSettings.ReduceSpeedIfHoodOpen">
            <summary>
            True, Geschwindigkeit wird reduziert, wenn Haube geöffnet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HoodSettings.Input">
            <summary>
            Eingang
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HoodSettings.Invert">
            <summary>
            Eingang Invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.HoodSettings.InputDelay">
            <summary>
            Anzahl Abfragen bis eine Fehlermeldung ausgegeben wird
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.InputRequestSettings">
            <summary>
            Eingang- Signale Einstellungen für z.B.: Haube, Luftdruck oder Fehlermeldung, Schrittverluste.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.InputRequestSettings.RequestCount">
            <summary>
            Anzahl Abfragen bis als geschaltet gilt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.InputRequestSettings.RequestTime">
            <summary>
            Ungefähre Zeit in ms zwischen den Abfragen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.JoystickSettings">
            <summary>
            Jooystick Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.JoystickSettings.On">
            <summary>
            Jooystick Funktion einschalten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.JoystickSettings.MaxSpeedXY">
            <summary>
            Maximale Geschwindigkeit XY für Manuell Bewegen in XY
            </summary> 
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.JoystickSettings.MaxSpeedZ">
            <summary>
            Maximale Geschwindigkeit Z für Manuell Bewegen in Z
            </summary> 
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.JoystickSettings.PitchWheel">
            <summary>
            Steigung am Joystick (Rapid move)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.LanSettings">
            <summary>
            Lan Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.LanSettings.IP">
            <summary>
            IP Adresse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.LanSettings.IPn">
            <summary>
            Feste IP Adresse (Angabe über config.xml)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.LanSettings.Mask">
            <summary>
            Mask (Default 255.255.255.0)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.LanSettings.DefaultGateway">
            <summary>
            Default Gateway (default 192.168.0.1)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.LanSettings.Hostname">
            <summary>
            Hostname
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.LanSettings.Port">
            <summary>
            Ferner Port mit dem Verbunden wird
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Laser.DutyWatt">
            <summary>
            Enthält Duty und die dazugehörige Watt
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Laser.DutyWatt.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Laser.DutyWatt.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Konstruktor
            </summary>
            <param name="aWatt">Watt</param>
            <param name="aDuty">Duty</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.DutyWatt.Watt">
            <summary>
            Watt
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.DutyWatt.Duty">
            <summary>
            Duty
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Laser.LaserListSettings">
            <summary>
            Verwaltet alle Einstellungen für Laser Power
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Laser.LaserListSettings.Get(System.Int32)">
            <summary>
            LaserPower Einstellungen eines ID's suchen und zurückgeben
            </summary>
            <param name="aID">ID (als Erkennung) des LaserPowerSettings Objektes</param>
            <returns>Wenn eine LaserPowerSettings mit angegebenen ID gefunden, dann wird diese zurückgegeben, sonst null</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Laser.LaserListSettings.Load(System.String)">
            <summary>
            Alle Einstellungen des Control laden. Wenn Laden fehlerhaft dann wird Exception geworfen.
            </summary>
            <param name="aFullPath">Datei mit Pfad</param>
            <returns>Geladene SMCSettings werden zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Laser.LaserListSettings.Save(System.String)">
            <summary>
            Alle Einstellungen des Control speichern. Wenn Speichern fehlerhaft dann wird Exception geworfen.
            </summary>
            <param name="aFullPath">Datei mit Pfad</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserListSettings.List">
            <summary>
            Liste mit Leser Power Einstellungen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial">
            <summary>
            Einstellungen des Lasers
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.Get(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Erzeugt eine INIT_LASER Struktur für den smc5d-p32
            </summary>
            <param name="aSettings">SMCSettings</param>
            <returns>INIT_LASER</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.#ctor(System.UInt16)">
            <summary>
            Konstruktor
            </summary>
            <param name="aID">Angabe der ID</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.Material">
            <summary>
            Materialname
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.MaterialNumber">
            <summary>
            Materialnummer
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.Period">
            <summary>
            Periode
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.StartPower">
            <summary>
            Start Power in Prozent von 1% bis 60%
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.MaxPower">
            <summary>
            Maximale Power in Prozent von 1% bis 100%
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.MaterialThickness">
            <summary>
            Materialdicke in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.Comment">
            <summary>
            Kommentar
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.WorkingSpeedXY">
            <summary>
            Laser- Schneide- Geschwindigkeit XY mm/Sek
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.LaserMaterial.Argb">
            <summary>
            Color
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Laser.PeriodWatt">
            <summary>
            Eine Period mit dazugehörigen Watt und Duty Werten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.PeriodWatt.Period">
            <summary>
            Perion in us (zwischen 10 bis 1200)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Laser.PeriodWatt.List">
            <summary>
            Liste mit Duty und Watt
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.MMoveSettings">
            <summary>
            Manuell Bewegen Einstellungen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.MMoveSettings.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MMoveSettings.Interval">
            <summary>
            Beschreibt dem Abstand in Millisekunden zwischen den einzelnen Schritten (Steps)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MMoveSettings.StepLong">
            <summary>
            Beschreibt die Länge, der Fahrt mit Schrittgeschwindigkeit bis auf die schnelle manuelle Fahrt umgestellt wird.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MMoveSettings.SpeedXY">
            <summary>
            Manuelle Geschwindigkeit in XY
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MMoveSettings.SpeedZ">
            <summary>
            Manuelle Geschwindigkeit in Z
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MMoveSettings.SpeedA">
            <summary>
            Manuelle Geschwindigkeit in A
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MMoveSettings.SpeedB">
            <summary>
            Manuelle Geschwindigkeit in B
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.MeasureZForZeroPoint">
            <summary>
            Einstellungen für Nullpunkt Z automatisch vermessen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.MeasureZForZeroPoint.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MeasureZForZeroPoint.Pin">
            <summary>
            Pinnummer um Z Höhe für Nullpunkt messen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MeasureZForZeroPoint.PinInvert">
            <summary>
            Pinnummer invertieren um Z Höhe für Nullpunkt zu messen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MeasureZForZeroPoint.MoveDirectionMeasureZAutomaticallyInvert">
            <summary>
            Fahrtrichtung in Z Achse invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MeasureZForZeroPoint.AutomaticallyZScanSpeed">
            <summary>
            Geschwindigkeit für die Vermessung des Z Nullpunktes
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Monitoring">
            <summary>
            Einstellungen für Überwachung der Achsen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Monitoring.GetSecury(System.Double)">
            <summary>
            Minimale zulässige Höhe abhängig von der Werkzeuglänge 
            </summary>
            <param name="aCurrentToollength">Aktuelle Werkzeuglänge</param>
            <returns>Neue minimale Höhe</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Monitoring.On">
            <summary>
            True, Bereich Überwachung für Manuell bewegen ist für die Achse eingeschaltet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Monitoring.MonitoringToollength">
            <summary>
            Werkzeuglänge, Überwachung der Z Achse. Dieser Wert ist ein Ausgangwert, und wird im Dialogfenster Maschinenparameter eingegeben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Monitoring.Min">
            <summary>
            Überwachung der Achse bis Minimum (hauptsächlich für Z oder A Achse) in Millimeter. Wert wird im Menü Maschinenparameter eingegeben.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Monitoring.AreaMonitoringTolerance">
            <summary>
            Toleranzbereich beim Überwachen der Achsen, d.h um diesen Wert kann der Überwachungs- Bereich überschritten werden.
            Üblicher wert ist zwischen 0 bis 1 mm
            Default Wert ist 0,1 mm
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.MotorCurrent">
            <summary>
            Verwalter Motorstromabsenkung
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.MotorCurrent.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MotorCurrent.On">
            <summary>
            True, Motorstromabsenkung einschalten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MotorCurrent.Invert">
            <summary>
            True, Motorstromabsenkung invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MotorCurrent.Time">
            <summary>
            Wartezeit nach einer bestimmten zeit absenken.
            
            Es wird die angegebene Zeit gewartet und wenn diese Zeit erreicht ist (Maschine steht in diesem Zeitraum ohne Bewegegung),
            dann wird Motorstrom automatisch abgesenkt.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.MotorCurrent.Output">
            <summary>
            Ausgang für Motorstrom Absenkung (fester Ausgang, reserviert).
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.OutputSignal">
            <summary>
            Eingang- Signale Einstellungen für z.B.: Haube, Luftdruck oder Fehlermeldung, Schrittverluste.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.OutputSignal.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.OutputSignal.#ctor(System.String)">
            <summary>
            Konstruktor
            </summary>
            <param name="aName">Name</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.OutputSignal.#ctor(System.String,De.Boenigk.SMC5D.Basics.Output)">
            <summary>
            Konstruktor
            </summary>
            <param name="aName">Name</param>
            <param name="aOutput">Ausgang</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.OutputSignal.#ctor(System.String,De.Boenigk.SMC5D.Basics.Output,De.Boenigk.SMC5D.Settings.OutputSignal.OutputType)">
            <summary>
            Konstruktor
            </summary>
            <param name="aName">Name</param>
            <param name="aOutput">Ausgang</param>
            <param name="aOutputType">Type</param>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputSignal.Type">
            <summary>
            Typ des Ausgangs
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputSignal.ON">
            <summary>
            True, Haube ist an
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputSignal.Invert">
            <summary>
            Ausgang wird invertiert
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputSignal.Output">
            <summary>
            Ausgang
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputSignal.Name">
            <summary>
            Beschreibung
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.OutputSignal.OutputType">
            <summary>
            Typ
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.OutputSignal.OutputType.Reference">
            <summary>
            Referenzfahrt
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.OutputSignal.OutputType.Park">
            <summary>
            Fahrt auf Parkpunkt
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.OutputSignals">
            <summary>
            List mit Ausgangsignalen
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.OutputSignals.C_Count">
            <summary>
            Anzahl der Ausgangsignale (zur Zeit After Reference und After Parkposition)
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.OutputSignals.Get(De.Boenigk.SMC5D.Settings.OutputSignal.OutputType)">
            <summary>
            Gibt den richtigen Typ zurück. Wenn null dann nicht gefunden
            </summary>
            <param name="aType">OutputSignal Typ</param>
            <returns>OutputSignal oder null</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputSignals.Outputs">
            <summary>
            List mit Output Objekten
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.OutputsInvert">
            <summary>
            Ausgänge an Con2/3/4 invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputsInvert.OutputsOfCon2">
            <summary>
            Ausgänge invertieren an Con2
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputsInvert.OutputsOfCon3">
            <summary>
            Ausgänge invertieren an Con3
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.OutputsInvert.OutputsOfCon4">
            <summary>
            Ausgänge invertieren an Con4
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.PasswordSettings">
            <summary>
            Passwort Einstellungen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.PasswordSettings.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.PasswordSettings.Clear">
            <summary>
            Password löschen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.PasswordSettings.Password">
            <summary>
            Kennwort
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.PasswordSettings.Clause">
            <summary>
            Kennworthinweis
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Pause">
            <summary>
            Einstellungen der externen Pause.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Pause.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Pause.ON">
            <summary>
            True, Pause wird gestartet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Pause.Invert">
            <summary>
            Pause wird invertiert
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.PufferSettings">
            <summary>
            Puffer Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.PufferSettings.Default">
            <summary>
            True, Puffer soll wie bisher verwendet werden. Die Geschwindigkeit wird über Takt reduziert.
            False, Puffer wird Sekundengröße eingestellt. Die Geschwindigkeit wird über Daten reduziert/erhöht. 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.PufferSettings.Seconds">
            <summary>
            Sekunden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.PufferSettings.JobSizeBuffer">
            <summary>
            Variable Buffer Größe in structs für den Job. Wenn -1 dann ist es feste Größe (default)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.PufferSettings.SpeedPercent">
            <summary>
            Geschwindigkkeit in Prozent
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.ReduceMaxSpeed">
            <summary>
            Einstellungen, die maximale erreichbare Geschwindigkeit reduziert.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.ReduceMaxSpeed.On">
            <summary>
            True, schaltet die Reduktion der maximalen erreichbaren Geschwindigkeit ein.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.ReduceMaxSpeed.MinSteps">
            <summary>
            Reduziert die maximal Geschwindigkeit ab Strecke in Steps
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.ReduceMaxSpeed.ReduceConstant">
            <summary>
            Reduktion Faktor, Wert zwischen 1 und 20.
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.ReferencePosition">
            <summary>
            Referenzposition (Links unten, rechts oben, links oben, rechts unten)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.ReferencePosition.ReferenceLU">
            <summary>
            Referenz befindet sich links unten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.ReferencePosition.ReferenceRU">
            <summary>
            Referenz befindet sich rechts unten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.ReferencePosition.ReferenceRO">
            <summary>
            Referenz befindet sich rechts oben
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.ReferencePosition.ReferenceLO">
            <summary>
            Referenz befindet sich links oben
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.ReferenceSequence">
            <summary>
            Aufzählungstyp Referenz Reihenfolge.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.ReferenceSequence.ZXYA">
            <summary>
            Referenz Reihenfolge Z,X,Y,A,B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.ReferenceSequence.ZYXA">
            <summary>
            Referenz Reihenfolge Z,Y,X,A,B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.ReferenceSequence.XZYA">
            <summary>
            Referenz Reihenfolge X,Z,Y,A,B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.ReferenceSequence.YZXA">
            <summary>
            Referenz Reihenfolge Y,Z,X,A,B
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.ReferenceSequence.ZABYX">
            <summary>
            Referenz Reihenfolge Z,A,B,Y,X
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.RestrictedArea">
            <summary>
            Sperr- Bereich Eigenschaften
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.RestrictedArea.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.RestrictedArea.On">
            <summary>
            True, Sperrbereich ist aktiv
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.RestrictedArea.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.RestrictedArea.X1">
            <summary>
            Erster Punkt X
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.RestrictedArea.Y1">
            <summary>
            Erster Punkt Y
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.RestrictedArea.X2">
            <summary>
            Zweiter Punkt X
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.RestrictedArea.Y2">
            <summary>
            Zweiter Punkt Y
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.RestrictedArea.Allow">
            <summary>
            Zugelassene Aktionen mit Enumeration 'RestrictedAreaEnum' setzen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.RestrictedAreaSettings">
            <summary>
            Einstellungen für Sperrbereiche
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.RestrictedAreaSettings.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.RestrictedAreaSettings.Area">
            <summary>
            Liste mit Sperrbereichen 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Rotate">
            <summary>
            Alle Einstellungen der Drehachse.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Rotate.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Rotate.On">
            <summary>
            True, Drehachse ist aktiv
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Rotate.XRotateAxis">
            <summary>
            True, Drehachse ist die X Drehachse, False, Drehachse ist Y
            Hinweis! Dieser Parameter ist nur für das Dialog -> Maschinenparameter -> Drehachse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Rotate.Diameter">
            <summary>
            Durchmesser der Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Rotate.StepsTurn">
            <summary>
            Schritte pro Umdrehung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Rotate.DriveDirectionInvert">
            <summary>
            Fahrtrichtung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Rotate.ReferenceDriveDirectionInvert">
            <summary>
            Referenzfahrtrichtung invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Rotate.ReferenceSwitchInvert">
            <summary>
            Referenzschalter invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Rotate.AxisUnit">
            <summary>
            Einheit der Achse
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.SMCAxis">
            <summary>
            Einstellungen einer Achse.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCAxis.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCAxis.#ctor(System.Byte,System.Boolean)">
            <summary>
            Referenz- Pinnummer
            </summary>
            <param name="aReferencePinNumber">Referenz- Pinnummer der Achse (C_Reference.Number0,1,2 oder 5)</param>
            <param name="aOn">Schalter für die Achse, True ist eingeschaltet</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCAxis.GetDriveDirectionInvert">
            <summary>
            Achsen Fahrtrichtung wird zurückgegeben. Wenn die Achse eine Drehachse ist,
            dann wird die Fahrtrichtung der Drehachse zurückgegeben.
            </summary>
            <returns>Fahrtrichtung</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCAxis.GetReferenceSwitchInvert">
            <summary>
            Referenzschalter wird zurückgegeben. Wenn die Achse eine Drehachse
            ist, dann wird der Referenzschalter für Drehachse zurückgegeben. 
            </summary>
            <returns>Referenzschalter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCAxis.GetReferenceDriveDirectionInvert">
            <summary>
            Referenzfahrt Richtung wird zurückgegeben. Wenn die Achse eine Drehachse ist,
            dann wird die Referenzfahrt Richtung der Drehachse zurückgegeben.
            </summary>
            <returns>Referenzfahrt Richtung</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.Tangential">
            <summary>
            Tangentialmesser Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.Rotate">
            <summary>
            Drehachse Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.Monitoring">
            <summary>
            Achsen Überwachung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.MoveFromReferenceSwitch">
            <summary>
            Den Referenzschalter frei fahren um die angegebene Strecke in Schritten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.FastMoveToReferencePoint">
            <summary>
            Sicherheitsabstand für 'beschleunigte Referenzfahrt'. 
            Auf die Position wird mit der Eilgeschwindigkeit gefahren und erst dann eine Referenzfahrt ausgeführt.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.DoubleRefPin">
            <summary>
            Referenz Pin für Doppel Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.DoubleRefPinInvert">
            <summary>
            Referenz Pin für Doppel Achse invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.Double">
            <summary>
            True, Doppel Achse vorhanden (für Maschinen, die 2 Schrittmotoren auf einer Achse haben)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.On">
            <summary>
            Schalter für die Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.Length">
            <summary>
            Länge der Achse in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.StepsTurn">
            <summary>
            Schritte pro Umdrehung der Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.WayTurn">
            <summary>
            Weg pro Umdrehung der Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.StartStopReferenceValue">
            <summary>
            True, diese Start/Stop - Geschwindigkeit ist eine Referenz für andere Start Stop Geschwindigkeiten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.StartStopSpeed">
            <summary>
            Start/Stop - Geschwindigkeit in mm/sek
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.MaximumSpeed">
            <summary>
            Eilgeschwindigkeit in mm/sek
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.ReferenceSpeed">
            <summary>
            Referenz- Geschwindigkeit in mm/sek
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.ReferencePinNumber">
            <summary>
            Referenzfahrt Pinnummer der Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.ReferenceDriveDirectionInvert">
            <summary>
            Referenzfahrt - Richtung der Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.DriveDirectionInvert">
            <summary>
            Fahrtrichtung der Achse invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCAxis.ReferenceSwitchInvert">
            <summary>
            Referenzschalter invertieren
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.SMCSettings">
            <summary>
            Enthält alle Maschinen Einstellungen, ist serialisierbar 
            und kann einfach als XML Datei gespeichert oder geladen werden.
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.SMCSettings.C_DAC_INT_10V">
            <summary>
             Wert 226 für alte DAC-INT-10V (gilt bis etwa 04.10.2014)
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.SMCSettings.C_DAC_INT_10V02">
            <summary>
             Wert 255 für die neue DAC-INT-10V v.02 (gilt ab etwa 04.10.2014)
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.SendEventUpdateDelegate">
            <summary>
            Sende Nachricht- Einstellungen geändert
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.IsMonitoringOn">
            <summary>
            Wenn mindestens eine Achse die Überwachung aktiv hat, dann wird true zurückgegeben
            </summary>
            <returns>True, mindestens eine Achse hat die Überwachung aktiv</returns>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.SMCSettings.myFirmwareVersion">
            <summary>
            Firmware Version
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetINIT2Struct(De.Boenigk.SMC5D.Basics.Connector)">
            <summary>
            Erzeugt INIT2 zum Ausgeben an den Kontroller
            </summary>
            <param name="aConnector">USB Verbindungsobjekt</param>
            <returns>INIT2</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.SetLaserMaterial(De.Boenigk.SMC5D.Settings.Laser.LaserMaterial)">
            <summary>
            Laser Einstellungen werden gesetzt
            </summary>
            <param name="aLaserMaterial">Laser- Material Einstellungen</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.SetGranitToInitLaserStruct">
            <summary>
            Setzt Granit-Einstellungen in die INIT_LASER_GRANIT Struktur
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.SetToInitHandWheelStruct">
            <summary>
            Schreibt die Einstellungen in die INIT_HANDWHEEL Struktur
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.SetToInitJoystickStruct">
            <summary>
            Schreibt die Einstellungen in die INIT_JOYSTICK Struktur
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.SetToInitStruct">
            <summary>
            Schreibt Einstellungen in die INIT Struktur
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.SetToInitReferenceStruct">
            <summary>
            Schreibt Einstellungen in die INIT_REFERENCE Struktur
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.SMCSettings.mySpeed">
            <summary>
            Berechnet die Geschwindigkeit
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.SMCSettings.myAccelerationBrakeWay">
            <summary>
            Berechnet Beschleunigungsweg
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetAccelerationX">
            <summary>
            Gibt den Beschleunigungsweg für X Achse in Millimeter zurück.
            </summary>
            <returns>Bremsweg in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetAccelerationZ">
            <summary>
            Gibt den Beschleunigungsweg für Z Achse in Millimeter zurück.
            </summary>
            <returns>Bremsweg in Millimeter</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.Load(System.String)">
            <summary>
            Alle Einstellungen des Control laden. Wenn Laden fehlerhaft dann wird Exception geworfen.
            </summary>
            <param name="aFullPath">Datei mit Pfad</param>
            <returns>Geladene SMCSettings werden zurückgegeben</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.Save(System.String)">
            <summary>
            Alle Einstellungen des Control speichern. Wenn Speichern fehlerhaft dann wird Exception geworfen.
            </summary>
            <param name="aFullPath">Datei mit Pfad</param>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetXAxisResolution">
            <summary>
            Achsenauflösung für jeweilige Achse wird berechnet (mm/Schritt).
            </summary>
            <returns>Achsenauflösung in Millimeter pro Schritt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetXStepsMM">
            <summary>
            Schritte pro Millimeter für Achse werden zurückgegeben
            </summary>
            <returns>Schritte pro Millimeter für Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetYAxisResolution">
            <summary>
            Achsenauflösung für jeweilige Achse wird berechnet (mm/Schritt).
            </summary>
            <returns>Achsenauflösung in Millimeter pro Schritt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetYStepsMM">
            <summary>
            Schritte pro Millimeter für Achse werden zurückgegeben
            </summary>
            <returns>Schritte pro Millimeter für Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetZAxisResolution">
            <summary>
            Achsenauflösung für jeweilige Achse wird berechnet (mm/Schritt).
            </summary>
            <returns>Achsenauflösung in Millimeter pro Schritt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetZStepsMM">
            <summary>
            Schritte pro Millimeter für Achse werden zurückgegeben
            </summary>
            <returns>Schritte pro Millimeter für Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetAAxisResolution">
            <summary>
            Achsenauflösung für jeweilige Achse wird berechnet (mm/Schritt).
            </summary>
            <returns>Achsenauflösung in Millimeter pro Schritt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetAStepsMM">
            <summary>
            Schritte pro Millimeter für Achse werden zurückgegeben
            </summary>
            <returns>Schritte pro Millimeter für Achse</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetBAxisResolution">
            <summary>
            Achsenauflösung für jeweilige Achse wird berechnet (mm/Schritt).
            </summary>
            <returns>Achsenauflösung in Millimeter pro Schritt</returns>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SMCSettings.GetBStepsMM">
            <summary>
            Schritte pro Millimeter für Achse werden zurückgegeben
            </summary>
            <returns>Schritte pro Millimeter für Achse</returns>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Interval">
            <summary>
            Connector Interval (Defaul Wert ist 100ms)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.GlobPosition">
            <summary>
            Position der Maschinen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Usb">
            <summary>
            USB Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.TangentialGlobal">
            <summary>
            Globale Einstellungen für Tangentialachse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.CompensationSettings">
            <summary>
            Einstellungen für die Kompensation der X und Y Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Log">
            <summary>
            Log Level, 0 = keine, 1 = wichgste Daten, ...
            </summary>
        </member>
        <!-- Ungültiger XML-Kommentar wurde für den Member "P:De.Boenigk.SMC5D.Settings.SMCSettings.MAXSpindleSpeedOutput" ignoriert -->
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.CreateJobInBackGround">
            <summary>
            True, dann werden die Daten im Hintergrund Stück für Stück generiert, sonst sofort
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.WaitAfterAxisSwitch">
            <summary>
            Wartezeit nach einer DFahrt auf Schalter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.WaitAfterSwitch">
            <summary>
            Wartezeit in Millisekunden, nach Ein- Ausschalten eines Schalters. Erst nach 
            dieser Wartezeit darf die Maschine fahren (wegen Störinpulsen, die beim 
            Einschalten von z.B.: Motorstrom, Spindel entstehen):
            
            Dieser Wert beträgt 40ms
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.AGEM_XY2">
            <summary>
            X2/Y2 Lösung für Kunden AGEM
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.IgnoreFirstInputChanged">
            <summary>
            True, der erste Status wird ignoriert
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.OutputSignals">
            <summary>
            Ausgangsignale
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.SmoothSpeed">
            <summary>
            Schaltet die Beschleunigung auf sehr kurzen Strecken (bis 2mm)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ReduceMaxSpeed">
            <summary>
            Reduziert maximale Geschwindigkeit
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.AngleConst">
            <summary>
            Je größer der Wert, desto kleiner Winkel ab dem gebremst wird. Default ist 1.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.CurrentToollength">
            <summary>
            Aktuelle Werkzeuglänge
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Alpha">
            <summary>
            Alpha
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ASpeedFactor">
            <summary>
            ASpeedfactor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.CurveSpeed">
            <summary>
            Kurven- Geschwindigkeit (Wert zwischen 1 und 100, je kleiner der Wert desto schneller die Fahrt in der Kurve)!
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.SpindleSpeed">
            <summary>
            Spindeldrehzahl 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ConnectionByUSB">
            <summary>
            Gewählte Verbindungsart, True USB, False LAN
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.SecurityTime">
            <summary>
            Abfrage zw. 0,5 und 10 Sekunden bis eine Arbeit unterbrochen wird. Wert 5-100, 5/10 ergibt 0,5 Sekunden, 20/10 ergibt 2 Sekunden u.s.w. 
            Wenn 0 dann wird automatisch auf Wert 20 (2 Sekunden) gesetzt. 255 schaltet die Überwachung aus.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Lan">
            <summary>
            Lan Einstellungen
            </summary>
        </member>
        <member name="E:De.Boenigk.SMC5D.Settings.SMCSettings.SettingsUpdated">
            <summary>
            Nachricht Einstellungen geändert
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.LaserOn">
            <summary>
            True, Laser ist aktiv, sonst deaktiviert
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.OutputsInvert">
            <summary>
            Ausgänge an Con2/3/4 invertieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Emergency1">
            <summary>
            Soft NOT-AUS Einstellungen 1
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Emergency2">
            <summary>
            Soft NOT-AUS Einstellungen 2
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Emergency3">
            <summary>
            Soft NOT-AUS Einstellungen 3
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Emergency4">
            <summary>
            Soft NOT-AUS Einstellungen 4
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Emergency5">
            <summary>
            Soft NOT-AUS Einstellungen 5
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Emergency6">
            <summary>
            Soft NOT-AUS Einstellungen 6
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Emergency7">
            <summary>
            Soft NOT-AUS Einstellungen 7
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Emergency8">
            <summary>
            Soft NOT-AUS Einstellungen 8
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Emergency9">
            <summary>
            Soft NOT-AUS Einstellungen 9
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Hood">
            <summary>
            Haube Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ManualMove">
            <summary>
            Manuell bewegen Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.MaximumSpeedXY">
            <summary>
            Gibt die maximale Geschwindigkeit XY. Dabei wird Geschwindigkeit X zurückgegeben
            und höhere Geschwindigkeit wird zurückgegeben.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Tact">
            <summary>
            Takt Einstellungen (veraltet, wird nur wegen im Import aus alten config.xml verwendet)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.FirmwareVersion">
            <summary>
            Firmware Version
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.OutputGranit">
            <summary>
            Ausgang für Granit
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.LengthOfOutputGranit">
            <summary>
            Definiert wie Lange der Ausgang geschaltet wird (Wert 1 - 250) * 100
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.OptionsGranit">
            <summary>
            Optionen für GRanit, Bit 1 schaltet die GRanit Funktion ein
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.HandWheelSettings">
            <summary>
            Handrad Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.INIT_HANDWHEEL">
            <summary>
            INIT_HANDWHEEL Eigenschaften als Struktur
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.JoystickSettings">
            <summary>
            Handrad Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.INIT_JOYSTICK">
            <summary>
            INIT_JOYSTICK Eigenschaften als Struktur
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.INIT">
            <summary>
            INIT Eigenschaften als Struktur
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.INIT_REFERENCE">
            <summary>
            INIT Referenz und Eingänge Eigenschaften als Struktur
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.INIT_LASER">
            <summary>
            INIT Laser, Einstellungen des Lesers
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Password">
            <summary>
            Kennwort
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.DoubleX2Y2">
            <summary>
            Einstellungen für Doppelantriebe X2 und Y2
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ReferencePosition">
            <summary>
            Referenzposition (Links unten, rechts oben, links oben, rechts unten)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.RestrictedArea">
            <summary>
            Sperrbereich Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.KeyMoveNormal">
            <summary>
            True, Tasten- Reaktion normal (empfohlen)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.EmbossingPen">
            <summary>
            Prägestift Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Z2">
            <summary>
            MASCHINENPARAMETER - Z2 Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Backlash">
            <summary>
            Umkehrspiel Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.InputRequestSettings">
            <summary>
            Einstellungen für EingangsSignale
            </summary>        
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Pause">
            <summary>
            Externe Pause Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ResetSwitchesWhileReference">
            <summary>
            True, wenn Referenzfahrt gestartet ist, Schalter zurücksetzen. 
            Wenn false, dann bleiben Zustände der Schalter unverändert.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Spindle">
            <summary>
            Spindel
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.SpindleOn">
            <summary>
            True, Achtung! Spindel einschalten?
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Pump">
            <summary>
            Pumpe
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.AxisX">
            <summary>
            Alle Einstellungen der X Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.AxisY">
            <summary>
            Alle Einstellungen der Y Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.AxisZ">
            <summary>
            Alle Einstellungen der Z Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.AxisA">
            <summary>
            Alle Einstellungen der A Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.AxisB">
            <summary>
            Alle Einstellungen der B Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.HeightSensor">
            <summary>
            Abtaster Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.MeasureZForZeroPoint">
            <summary>
            Z Höhe für Nullpunkt automatisch durch vermessen ermitteln
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ReferenceSequence">
            <summary>
            Referenz - Fahrt - Reihenfolge
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ReferenceXYSimultan">
            <summary>
            XY Achsen simultan referenzieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ConstantWorkingSpeed">
            <summary>
            Konstante Vorschub Geschwindigkeit
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.MotorCurrent">
            <summary>
            Motorstrom Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ManualAdvanceAcceleration">
            <summary>
            SMC5D Rampensteigung für Manuell bewegen (Beschleunigung), Wert zwischen 0 bis 3
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ReferenceAcceleration">
            <summary>
            SMC5D Rampensteigung für Referenzfahrt (Beschleunigung), Wert zwischen 0 bis 3
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.MeasureToolSpeed">
            <summary>
            Messgeschwindigkeit für Werkzeuglängensensor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.MeasureScanSpeed">
            <summary>
            Messgeschwindigkeit für Abtaster
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.SpeedIncrement">
            <summary>
            Job Beschleunigung (1 bis 2500)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.RefSpeedIncrement">
            <summary>
            Referenz Beschleunigung (1 bis 2500)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Slope">
            <summary>
            Kurvenverlauf
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.IncrementSlope">
            <summary>
            Steigung der Kurve beim Beschleunigen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.StepDirectionTime">
            <summary>
            Step-Direction Time Delay, Wert zwischen  0 us bis 65000 us (veraltet, wird nur wegen im Import aus alten config.xml verwendet)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Frequence">
            <summary>
            Frequenz von 1 bis 150Hz (veraltet, wird nur wegen im Import aus alten config.xml verwendet)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.SteppingDriver">
            <summary>
            Endstufen Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.PauseSlope">
            <summary>
            Pausenverlauf
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.AutoToolChangeSettings">
            <summary>
            Werkzeugwechsler Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Vacuum">
            <summary>
            Vakuum Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Puffer">
            <summary>
            Puffer Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Out8kHz">
            <summary>
            Ausgang 8kHz
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.Out8kHzOn">
            <summary>
            Ausgang 8kHz an?
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.SpeedChangerLevel">
            <summary>
            Geschwindigkeit- Regler- Stufe (1- schnell bis 4- langsam)
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ReduceJerking">
            <summary>
            True Schaltet die Funktion Reduzieren wackeln der Maschine
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SMCSettings.ReduceJerkingValue">
            <summary>
            Reduziert wackeln der Maschine auf kurzen Vektoren (Strecke zw. 1mm bis 4mm)
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.SMCSettings.UpdateDelegate">
            <summary>
            Einstellungen geändert delegate
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.SmoothSpeed">
            <summary>
            Einstellungen, die Beschleunigung/Bremsen auf sehr kleinen Vektoren definieren.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SmoothSpeed.On">
            <summary>
            True, Schaltet die Beschleunigung auf sehr kurzen Strecken (Wert bis 2mm) ab.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SmoothSpeed.Distance">
            <summary>
            Strecke (Wert bis 2mm) ab der nicht mehr beschleunigt wird
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.SpeedIncrementConverter">
            <summary>
            Rechnet SpeedIncrement aus
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.SpeedIncrementConverter.#ctor(De.Boenigk.SMC5D.Settings.SMCSettings)">
            <summary>
            Konstruktor
            </summary>
            <param name="aSettings">Kontroller Einstellungen</param>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.SteppingDriverSettings">
            <summary>
            Stepping Driver Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SteppingDriverSettings.Frequence">
            <summary>
            Frequenz von 1 bis 150Hz
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SteppingDriverSettings.StepDirectionTime">
            <summary>
            Step-Direction Time Delay, Wert zwischen 0 us bis 65000 us
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SteppingDriverSettings.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.SteppingDriverSettings.TactInvert">
            <summary>
            Takt invertieren
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Tact">
            <summary>
            Takt Einstellungen
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Tact.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tact.Invert">
            <summary>
            True, takt wird inveritert
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Tangential">
            <summary>
            Einstellungen des Tangentialmessers.
            </summary>
        </member>
        <member name="M:De.Boenigk.SMC5D.Settings.Tangential.#ctor">
            <summary>
            Standard Konstruktor
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.On">
            <summary>
            Tangentialmesser benutzen 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.StepsTurn">
            <summary>
            Schritte pro Umdrehung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.UpZ">
            <summary>
            Höhe auf die, die Z Achse gehoben wird
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.SpeedOfZ">
            <summary>
            Hubgeschwindigkeit Z
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.SpeedZ">
            <summary>
            Vorschub Geschwindigkeit Z
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.UseSpeed">
            <summary>
            True, dann Vorschub und Hubgeschwindigkeit nehmen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.DoubleEdged">
            <summary>
            Wenn True dann zweischneidige Messer sonst einschneidige Messer
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.RotateAngle">
            <summary>
            Drehwinkel, heben ab
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.RotateAngleTo">
            <summary>
            Drehwinkel, drehen und fahren bis Winkel 
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Tangential.ResetAAfterReference">
            <summary>
            Nach der Referenzfahrt A Koordinate zurücksetzen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.TangentialGlobal">
            <summary>
            Globale Einstellungen für Tangential
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.TangentialGlobal.OffForZ">
            <summary>
            Für Z, Tangentialachse deaktivieren
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.TangentialGlobal.TangentialRelay">
            <summary>
            Relay schalten dass Z Achse steuert
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.TangentialGlobal.TangentialTxx">
            <summary>
            Tangentialmesser- Werkzeugnummer- Verwaltung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.TangentialGlobal.TangentialTxxB">
            <summary>
            TangentialmesserB- Werkzeugnummer- Verwaltung
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.TangentialRelay">
            <summary>
            Schaltet ein Relay dass Z Achse steuert.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.TangentialRelay.On">
            <summary>
            Schaltet Relay an
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.TangentialRelay.Output">
            <summary>
            Ausgang schalten wenn Z hoch und Tangential ausgerichtet werden soll (wenn Z über Relay geschaltet wird).
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.TangentialRelay.Wait">
            <summary>
            Wartezeit in ms
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.TangentialTxx">
            <summary>
            Tangentialmesser für einen Werkzeug verwenden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.TangentialTxx.OnlyOneToolOn">
            <summary>
            True, Tangentialmesser nur für einen Werkzeug verwenden
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.TangentialTxx.Txx">
            <summary>
            Tangentialmesser- Werkzeugnummer
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.USBSettings">
            <summary>
            USB Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.USBSettings.ControlPipeTimeout">
            <summary>
            Wartezeit in ms bis eine Anwort kommt. Wenn die Wartezeit ohne Antwort erreicht ist, dann wird die Verbindung unterbrochen.
            Default ist 5000ms.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.USBSettings.Guid">
            <summary>
            Guid
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.USBSettings.Version">
            <summary>
            Bit 0 bis Bit 3 Wert 0 = Pro Version, 1 = EAS ECO, 2 = ncBASIC ST, 3 = cncGraF Standard 
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.VacuumArea">
            <summary>
            Vakuum Bereich
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.VacuumArea.XStart">
            <summary>
            Start des Bereichs X in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.VacuumArea.YStart">
            <summary>
            Start des Bereichs Y in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.VacuumArea.XEnd">
            <summary>
            Ende des Bereichs X in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.VacuumArea.YEnd">
            <summary>
            Ende des Bereichs Y in Millimeter
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.VacuumArea.Output">
            <summary>
            Ausgang dass Vakuum schaltet
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.VacuumSettings">
            <summary>
            Vakuum Einstellungen
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.VacuumSettings.On">
            <summary>
            True, Vakuum ist aktiv
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.VacuumSettings.Type">
            <summary>
            Art der Steuerung
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.VacuumSettings.VacuumArea">
            <summary>
            Liste mit Bereichen
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.VacuumSettings.VacuumType">
            <summary>
            Art der Benutzung
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.VacuumSettings.VacuumType.Variable">
            <summary>
            Ausgang werden ein und ausgeschaltet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.VacuumSettings.VacuumType.IfInArea">
            <summary>
            Ausgänge werden geschaltet wenn Fräsen in dem Bereich und nicht mehr ausgeschaltet
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.VacuumSettings.VacuumType.Permanently">
            <summary>
            Alle Ausgägnge werden geschaltet
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Z2Mode">
            <summary>
            Z2 Modus
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.Z2Mode.Z2ToA">
            <summary>
            Z2 ist die A Achse
            </summary>
        </member>
        <member name="F:De.Boenigk.SMC5D.Settings.Z2Mode.Z2ToB">
            <summary>
            Z2 ist die B Achse
            </summary>
        </member>
        <member name="T:De.Boenigk.SMC5D.Settings.Z2Settings">
            <summary>
            Z2 Einstellungen.
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Z2Settings.Mode">
            <summary>
            Z2 Modus
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Z2Settings.On">
            <summary>
            True, Z2 als A (4 Achse) ist eingeschaltet
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Z2Settings.OffsetX">
            <summary>
            Z2 Offset für X
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Z2Settings.OffsetY">
            <summary>
            Z2 Offset für Y
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Z2Settings.RelayOnForSpindleZ2">
            <summary>
            Relais für Spindel ein- oder ausschalten
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Z2Settings.RelaySpindleZ2">
            <summary>
            Relais für Spindel der Z2 Achse
            </summary>
        </member>
        <member name="P:De.Boenigk.SMC5D.Settings.Z2Settings.AllowTangent">
            <summary>
            True, Tangential für Z2 erlauben
            </summary>
        </member>
    </members>
</doc>
